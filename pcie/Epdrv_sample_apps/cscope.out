cscope 15 $HOME/dsp/myproject/pcie/Epdrv_sample_apps               0000242507
	@application/ti81xx_ep_app.c

36 
	~<°dio.h
>

37 
	~<°dlib.h
>

38 
	~<uni°d.h
>

39 
	~<°rög.h
>

40 
	~<î∫o.h
>

41 
	~<sig«l.h
>

42 
	~<f˙é.h
>

43 
	~<˘y≥.h
>

44 
	~<ãrmios.h
>

45 
	~<sys/ty≥s.h
>

46 
	~<sys/mm™.h
>

47 
	~<sys/io˘l.h
>

48 
	~<pﬁl.h
>

49 
	~<±hªad.h
>

50 
	~<£m≠h‹e.h
>

51 
	~"ti81xx_ï_lib.h
"

52 
	~"ti81xx_mgmt_lib.h
"

53 
	~"ti81xx_å™s.h
"

54 
	~"debug_msg.h
"

55 
	#HZ
 100

	)

59 
	sã°_ˇ£
 {

60 
	mã°_ˇ£_id
[15];

61 
	mªsu…
[50];

64 
ã°_ˇ£
 
	gã°_summ¨y
[20];

69 #i‡
deföed
(
INTEGRITY
Ë|| deföed(
THPT
)

71 
	gbyã_ªcv
;

72 
	gbyã_rx
;

75 
	sfix_å™s
 {

76 
dediˇãd_buf
 
	mbufd
;

77 
	mout_phy
;

78 *
	mu£r_buf
;

79 
	msize_buf
;

84 #ifde‡
INTEGRITY


86 
FILE
 *
	gÂ1
, *
	gÂ2
;

97 
	g°©us
;

100 *
	gm≠≥d_buf„r
;

101 *
	gm≠≥d_pci
;

102 *
	gm≠≥d_dma
, *
	gm≠≥d_dma_ªcv
;

103 *
	grm_öfo
;

104 
ti81xx_mgmt_¨ó
 
	gmgmt_¨ó
;

105 
pﬁlfd
 
	gfds
[1];

106 
	gfd_dma
;

107 
	gfd
;

108 
ti81xx_±rs
 
	g±r
;

109 
±hªad_muãx_t
 
	gmuãx_öt
 = 
PTHREAD_MUTEX_INITIALIZER
;

110 
	gcou¡î
;

111 
£m_t
 
	gmuãx
;

112 
	göå_ˇp
;

113 
	gfö_time1
, 
	gcur_time1
, 
	gfö_time2
, 
	gcur_time2
;

114 
dma_˙t_c⁄f
 
	gdma_˙t
;

115 
dma_buf_öfo
 
	gdma_b
;

116 
	göãgrôy_ã°
;

119 
	$£nd_d©a_by_˝u
()

121 
ªt
;

122 
off£t
;

124 
ACCESS_MGMT
:

125 (
ªt
 = 
	`ac˚ss_mgmt_¨ó
((
u32
 *)
m≠≥d_pci
,

126 
mgmt_¨ó
.
my_unique_id
)) < 0) {

127 
	`¥ötf
("mgmt_areaáccessÇot granted\n");

128 
	`¶ìp
(2);

132 (
ªt
 = 
	`gë_‰ì_buf„r
((
u32
 *)
m≠≥d_pci
)) < 0) {

133 
	`¥ötf
("bufferÇotávailable\n");

134 
	`ªÀa£_mgmt_¨ó
((
u32
 *)
m≠≥d_pci
);

135 
	`¶ìp
(2);

136 
ACCESS_MGMT
;

139 
off£t
 = 
	`off£t_to_buf„r
((
u32
 *)
m≠≥d_pci
, 
ªt
);

141 
	`£nd_to_ªmŸe_buf_by_˝u
((
u32
 *)
m≠≥d_pci
, 
off£t
, 
ªt
);

142 
	`¥ötf
("send by cpu successful\n");

143 
	`ªÀa£_mgmt_¨ó
((
u32
 *)
m≠≥d_pci
);

144 
	}
}

147 
	$£nd_d©a_by_dma
()

149 
ªt
;

150 
off£t
;

152 
ACCESS_MGMT
:

153 (
ªt
 = 
	`ac˚ss_mgmt_¨ó
((
u32
 *)
m≠≥d_pci
,

154 
mgmt_¨ó
.
my_unique_id
)) < 0) {

155 
	`¥ötf
("mgmtáreaáccessÇot granted\n");

156 
	`¶ìp
(3);

160 (
ªt
 = 
	`gë_‰ì_buf„r
((
u32
 *)
m≠≥d_pci
)) < 0) {

161 
	`¥ötf
("bufferÇotávailable\n");

162 
	`ªÀa£_mgmt_¨ó
((
u32
 *)
m≠≥d_pci
);

163 
	`¶ìp
(3);

164 
ACCESS_MGMT
;

167 
off£t
 = 
	`off£t_to_buf„r
((
u32
 *)
m≠≥d_pci
, 
ªt
);

168 
	`£nd_to_ªmŸe_buf_by_dma
((
u32
 *)
m≠≥d_pci
, 0x20000000,

169 
off£t
, 
ªt
, 
fd_dma
);

170 
	`¥ötf
("send by dma successful\n");

171 
	`ªÀa£_mgmt_¨ó
((
u32
 *)
m≠≥d_pci
);

172 
	}
}

174 
	$¥o˚ss_loˇl_rmt_bufs
()

176 
ªt
;

177 (
ªt
 = 
	`ac˚ss_mgmt_¨ó
((
u32
 *)
m≠≥d_pci
,

178 
mgmt_¨ó
.
my_unique_id
)) < 0) {

179 
	`¥ötf
("mgmtáreaáccessÇot granted\n");

180 
	`¶ìp
(4);

184 
	`¥o˚ss_ªmŸe_buf„r_f‹_d©a
((
u32
 *)
m≠≥d_pci
, 
EDMA
, 
fd_dma
);

185 
	`ªÀa£_mgmt_¨ó
((
u32
 *)
m≠≥d_pci
);

187 (
ªt
 = 
	`ac˚ss_mgmt_¨ó
((
u32
 *)
m≠≥d_buf„r
,

188 
mgmt_¨ó
.
my_unique_id
)) < 0) {

189 
	`¥ötf
("mgmtáreaáccessÇot granted\n");

190 
	`¶ìp
(4);

194 
	`ti81xx_pﬁl_f‹_d©a
(&
±r
, &
mgmt_¨ó
, 
m≠≥d_buf„r
, 
NULL
, NULL);

195 
	`ªÀa£_mgmt_¨ó
((
u32
 *)
m≠≥d_buf„r
);

197 
	}
}

210 
	$sˇn_mgmt_¨ó
(*
rm_öfo
, 
muid
,

211 
ti81xx_outb_ªgi⁄
 *
ob
)

213 *
ï_öfo
 = 
rm_öfo
 + 2;

214 
j
 = 0, 
i
 = 0;

215 
b¨_m≠
;

216 i‡(
muid
 == 1) {

217 
ob
->
ob_off£t_hi
 = 0;

219 
ob
->
ob_off£t_idx
 = 
rm_öfo
[1];

222 
i
 = 1; i <
rm_öfo
[0] ; i++) {

224 i‡(
ï_öfo
[
j
] =
muid
) {

225 
b¨_m≠
 = 
ï_öfo
[
j
 + 13];

226 
ob
->
ob_off£t_hi
 = 0;

227 
ob
->
ob_off£t_idx
 = 
ï_öfo
[
j
 + 
b¨_m≠
 * 2 + 1];

230 
j
 += 14;

234 
	}
}

237 #i‡
deföed
(
INTEGRITY
Ë|| deföed(
THPT
)

240 *
	$£nd_to_dediˇãd_buf
(*
¨g
)

243 
fix_å™s
 *
tx
 = (fix_å™†*Ë
¨g
;

244 
dma_öfo
 
öfo
;

245 
cou¡
;

246 
i
 = 0;

248 #ifde‡
INTEGRITY


249 
choi˚
 = 
EDMA
;

251 
chunk_å™s
;

252 
ªt
;

253 
öfo
.
size
 = 
tx
->
size_buf
;

254 
öfo
.
u£r_buf
 = (*)
tx
->user_buf;

255 
öfo
.
§c
 = 0;

256 
öfo
.
de°
 = (*)(
tx
->
out_phy
 + (tx->
bufd
).
off_°
);

258 
chunk_å™s
 = (1024 * 1024Ë/ (
tx
->
size_buf
);

260 #ifde‡
THPT


261 
time_tmp
 =0;

262 
fö_time1
 = 0;

264 
chunk_å™s
 = 
THPT_DATA_SIZE
/ 
tx
->
size_buf
;

265 
	`¥ötf
("tŸÆ iãøti⁄Åÿ£nd d©®wû»bê%u\n", 
chunk_å™s
);

266 
	`mem£t
(
m≠≥d_dma
, 78, 
tx
->
size_buf
);

272 
cou¡
 = 0; cou¡ < 
chunk_å™s
; count++) {

274 #ifde‡
THPT


275 *((
tx
->
bufd
).
wr_±r
) != 0){

277 
	`u¶ìp
(1);

278 
i
 ++;

281 i‡(
cou¡
 =
chunk_å™s
-1)

282 
	`mem£t
(
tx
->
u£r_buf
, 78,Åx->
size_buf
);

285 
ªt
 = 
	`io˘l
(
fd_dma
, 
TI81XX_EDMA_WRITE
, &
öfo
);

286 i‡(
ªt
 < 0) {

287 
	`îr_¥öt
("edma ioctl failed,Érror in dma data "

289 
	`±hªad_exô
(
NULL
);

293 i‡(
cou¡
 =
chunk_å™s
-1)

294 
	`mem£t
(
m≠≥d_dma
, 78, 
tx
->
size_buf
);

296 
	`io˘l
(
fd
, 
TI81XX_CUR_TIME
, &
cur_time1
);

297 
	#THPT_DMA_COPY
 1

	)

298 #i‡
THPT_DMA_COPY


299 
ªt
 = 
	`io˘l
(
fd_dma
, 
TI81XX_EDMA_WRITEM
, &
öfo
);

300 i‡(
ªt
 < 0) {

301 
	`îr_¥öt
("edma ioctl failed,Érror in dma data "

303 
	`±hªad_exô
(
NULL
);

305 *((
tx
->
bufd
).
wr_±r
Ë
ªt
;

307 
	`mem˝y
(
m≠≥d_pci
 + (
tx
->
bufd
).
off_°
,

308 
m≠≥d_dma
, 
tx
->
size_buf
);

309 *((
tx
->
bufd
).
wr_±r
Ëtx->
size_buf
;

313 
	`io˘l
(
fd
, 
TI81XX_SEND_MSI
, 0);

314 
	`io˘l
(
fd
, 
TI81XX_CUR_TIME
, &
time_tmp
);

315 
fö_time1
 +
time_tmp
 - 
cur_time1
;

319 #ifde‡
THPT


320 
	`¥ötf
("txÅest caseÉxecuted withÅx %llu bytes in %u[%u - %u] jiffies,wait delay i %u\n",

321 
THPT_DATA_SIZE
 ,
fö_time1
 ,fö_time1,
cur_time1
,
i
);

322 
	`¥ötf
("THPT calculated in TX direction is : %f MBPS\n\n",

323 ()(((
THPT_DATA_SIZE
 >> 20Ë* 
HZ
Ë/ 
fö_time1
 ));

327 
	`±hªad_exô
(
NULL
);

328 
	}
}

331 *
	$ªad_‰om_dediˇãd_buf
(*
¨g
)

333 
fix_å™s
 *
rx
 = (fix_å™†*)
¨g
;

334 
dma_öfo
 
öfo
;

335 
cou¡
;

336 
chunk_å™s
;

337 
ªt
;

338 
öfo
.
size
 = 
rx
->
size_buf
;

339 
öfo
.
u£r_buf
 = (*)
rx
->user_buf;

340 
öfo
.
de°
 = 0;

341 
öfo
.
§c
 = (*)(
rx
->
out_phy
 + (rx->
bufd
).
off_°
);

343 
chunk_å™s
 = (1024 * 1024Ë/ (
rx
->
size_buf
);

345 #ifde‡
THPT


346 
i
,
j
;

347 *
p
;

348 
time_tmp
 =0;

349 
fö_time2
 = 0;

350 
chunk_å™s
 = 
THPT_DATA_SIZE
 / 
rx
->
size_buf
;

351 
	`¥ötf
("tŸÆ iãøti⁄Åÿªad d©®wû»bê%u\n", 
chunk_å™s
);

352 
byã_rx
 = 0;

356 
cou¡
 = 0; cou¡ < 
chunk_å™s
; count++) {

357 #ifde‡
THPT


358 #ifde‡
WISCOM_THPT_EPREAD_SYNS


359 *((
rx
->
bufd
).
wr_±r
) == 0);

362 i‡(
cou¡
 =
chunk_å™s
-1) {

363 
	`mem£t
(
rx
->
u£r_buf
, 0,Ñx->
size_buf
);

364 
	`¥ötf
("lastÑead\n");

367 
	`io˘l
(
fd
, 
TI81XX_CUR_TIME
, &
cur_time2
);

368 #i‡
THPT_DMA_COPY


369 
ªt
 = 
	`io˘l
(
fd_dma
, 
TI81XX_EDMA_READM
, &
öfo
);

370 i‡(
ªt
 < 0) {

371 
	`îr_¥öt
("edma ioctl failed,Érror in dma "

373 
	`±hªad_exô
(
NULL
);

375 
byã_rx
 +
ªt
;

377 
	`mem˝y
(
m≠≥d_dma_ªcv
, 
m≠≥d_pci
 + (
rx
->
bufd
).
off_°
,

378 
rx
->
size_buf
);

379 
byã_rx
 +
rx
->
size_buf
;

382 
	`io˘l
(
fd
, 
TI81XX_CUR_TIME
, &
time_tmp
);

383 
fö_time2
 +
time_tmp
 - 
cur_time2
;

385 #ifde‡
WISCOM_THPT_EPREAD_SYNS


386 *((
rx
->
bufd
).
wr_±r
) = 0;

388 #ifde‡
CONFIG_WISCOM_COMPARE


389 
j
 = (
rx
->
size_buf
>>2);

390 
p
 = (*)
m≠≥d_dma_ªcv
;

391 
i
 = 0; i < 
j
; i ++){

392 if(*
p
 != 0x61616161){

393 
	`¥ötf
("****EP Ród Eº‹ 0x%x, St›p!***.\n",*
p
);

394 
	`¥ötf
("****Pressány KeyÅo Continue***\n");

395 
	`gëch¨
();

397 *
p
 = 0;

398 
p
++;

401 i‡(
byã_rx
 =
THPT_DATA_SIZE
 ) {

409 
	`¥ötf
("read from dedicated buffer completed\n");

410 
	`¥ötf
("RXÅest caseÉxecuted withÑeceving %llu bytes in "

411 "%u jiffõs\n", 
byã_rx
, 
fö_time2
 );

412 #ifde‡
THPT


414 
	`dump_d©a_ö_fûe_n
(
rx
->
u£r_buf
, 
ªt
, "recv.txt");

417 
	`dump_d©a_ö_fûe_n
(
m≠≥d_dma_ªcv
, 
ªt
, "recv.txt");

418 
	`¥ötf
("THPT calculated in RX direction is : %f MBPS\n\n",

419 ()(((
byã_rx
 >> 20Ë* 
HZ
Ë/ (
fö_time2
 )));

427 
	`±hªad_exô
(
NULL
);

428 
	}
}

430 
	$ªad_‰om_dediˇãd_buf_func
(*
¨g
)

432 
fix_å™s
 *
rx
 = (fix_å™†*)
¨g
;

433 
dma_öfo
 
öfo
;

434 
ªt
;

435 
öfo
.
size
 = 
rx
->
size_buf
;

436 
öfo
.
u£r_buf
 = (*)
rx
->user_buf;

437 
öfo
.
de°
 = 0;

438 
öfo
.
§c
 = (*)(
rx
->
out_phy
 + (rx->
bufd
).
off_°
);

440 i‡(*((
rx
->
bufd
).
wr_±r
) != 0) {

441 
ªt
 = 
	`io˘l
(
fd_dma
, 
TI81XX_EDMA_READ
, &
öfo
);

442 i‡(
ªt
 < 0) {

443 
	`îr_¥öt
("edma ioctl failed,Érror in dma "

447 *((
rx
->
bufd
).
wr_±r
) = 0;

449 
byã_rx
 +
ªt
;

452 
	}
}

459 #ifde‡ 
TEST_MEMCPY_SPEED


460 *
ã°_mem˝y_•ìd_func
(*
¨g
);

461 *
	$ã°_mem˝y_•ìd_func
(*
¨g
)

463 
buf_size1
 = 1<< 20;

464 
i
,
j
;

465 
cur_time
,
¥e_time
,
tŸÆ_time
;

466 *
buf_§c
 = 
	`mÆloc
(
buf_size1
);

467 *
buf_de°
 = 
	`mÆloc
(
buf_size1
);

468 
	`mem£t
(
buf_§c
, 0x43, 
buf_size1
);

470 
tŸÆ_time
 = 0;

471 
lo›
 = 1024llu;

473 
	`io˘l
(
fd
, 
TI81XX_CUR_TIME
, &
¥e_time
);

475 
i
 = 0; i < 
lo›
; i ++){

476 
	`mem˝y
(
buf_de°
, 
buf_§c
, 
buf_size1
);

479 
	`io˘l
(
fd
, 
TI81XX_CUR_TIME
, &
cur_time
);

481 
tŸÆ_time
 = 
cur_time
 - 
¥e_time
;

483 
	`¥ötf
("TŸÆ mem˝y d©®%Œu i¿%u[%u - %u] jiffõs.\n",
lo›
*
buf_size1
,
tŸÆ_time
,
cur_time
,
¥e_time
);

485 
	`¥ötf
("mem˝yÅe° s≥ed i†%‡Mbps.\n",()(
lo›
*
HZ
/
tŸÆ_time
));

487 
	`±hªad_exô
(
NULL
);

488 
	}
}

491 
	$outbound_ªgn_mgmt_ã°
()

493 
ti81xx_outb_ªgi⁄
 
ob
, 
ob1
;

494 
ob_size
 = 0;

495 
i
;

496 
ob
.
ob_off£t_hi
 = 0;

497 
ob
.
ob_off£t_idx
 = 0;

499 
	`¥ötf
("executing outboundÅest for clear mappingánd "

502 
fd
 = 
	`›í
("/dev/ti81xx_pcõ_ï", 
O_RDWR
);

503 i‡(
fd
 == -1) {

504 
	`îr_¥öt
("EP device file open fail\n");

508 
	`¥ötf
("setting outboundÑegion size 1 MB\n");

509 
	`io˘l
(
fd
, 
TI81XX_SET_OUTBOUND_SIZE
, 
ob_size
);

510 
°©us
 = 0;

511 i‡(
	`io˘l
(
fd
, 
TI81XX_GET_OUTBOUND_STATUS
, &
°©us
) < 0) {

512 
	`îr_¥öt
("ioctlÅoÑetrieve outboundÑegion status failed\n");

516 
	`¥ötf
("status of outboundÑegions beforeÑequest "

517 "i†OX%X\n", 
°©us
);

518 
	`¥ötf
("request forá outbound mapping of 8 MB\n");

520 
ob
.
size
 = 0x800000;

522 i‡(
	`ti81xx_£t_outbound_ªgi⁄
(&
ob
, 
fd
) == 0) {

523 
	`¥ötf
("outbound mappingÑequest successfull\n");

524 
	`io˘l
(
fd
, 
TI81XX_GET_OUTBOUND_STATUS
, &
°©us
);

525 
	`¥ötf
("status of outboundÑegionsáfterÑequest "

526 "i†OX%X\n", 
°©us
);

527 i‡(
°©us
 == 0x7fffff00)

528 
	`•rötf
(
ã°_summ¨y
[2].
ªsu…
, "%s", "Pass");

529 
	`¥ötf
("clearing mapping of outboundÑegion\n");

530 
	`io˘l
(
fd
, 
TI81XX_CLR_OUTBOUND_MAP
, &
ob
);

531 
	`io˘l
(
fd
, 
TI81XX_GET_OUTBOUND_STATUS
, &
°©us
);

532 i‡(
°©us
 == 0x7fffffff)

533 
	`•rötf
(
ã°_summ¨y
[11].
ªsu…
, "%s", "Pass");

534 
	`¥ötf
("status of outboundÑegionsáfter "

535 "˛órögÑeque° i†OX%X\n", 
°©us
);

539 
	`¥ötf
("executingÅest case for EINOB (increase "

542 
	`io˘l
(
fd
, 
TI81XX_GET_OUTBOUND_STATUS
, &
°©us
);

543 
	`¥ötf
("status of outboundÑegions beforeÑequest "

544 "i†OX%X\n", 
°©us
);

545 
	`¥ötf
("sendingáÑequest for 28 MBÑequest\n");

546 
ob
.
ob_off£t_hi
 = 1;

547 
ob
.
ob_off£t_idx
 = 1;

548 
ob
.
size
 = 0x1C00000;

549 i‡(
	`ti81xx_£t_outbound_ªgi⁄
(&
ob
, 
fd
) == 0) {

550 
	`¥ötf
("outbound mappingÑequest successfull\n");

551 
	`io˘l
(
fd
, 
TI81XX_GET_OUTBOUND_STATUS
, &
°©us
);

552 
	`¥ötf
("status of outboundÑegionsáfter 28 MB "

553 "ªque° i†OX%X\n", 
°©us
);

556 
ob1
.
ob_off£t_hi
 = 2;

557 
ob1
.
ob_off£t_idx
 = 2;

558 
ob1
.
size
 = 0x600000;

559 
	`¥ötf
("sendingáÑequest for 6 MBÑequest\n");

560 i‡(
	`ti81xx_£t_outbound_ªgi⁄
(&
ob1
, 
fd
Ë=
EINOB
) {

561 
	`¥ötf
("outbound mappingÑequestÑeturn with EINOB "

563 
	`¥ötf
("outbound mappingÅest case of "

565 
	`io˘l
(
fd
, 
TI81XX_CLR_OUTBOUND_MAP
, &
ob
);

566 
	`•rötf
(
ã°_summ¨y
[4].
ªsu…
, "%s", "Pass");

569 
	`¥ötf
("executingÅest case of ENMEM\n");

570 
	`io˘l
(
fd
, 
TI81XX_GET_OUTBOUND_STATUS
, &
°©us
);

571 
	`¥ötf
("°©u†o‡outboundÑegi⁄†bef‹êi†OX%X\n", 
°©us
);

572 
	`¥ötf
("sending 28Ñequest for 1 MBÉach\n");

574 
i
 = 0; i <= 27; i++) {

575 
ob
.
ob_off£t_hi
 = 
i
;

576 
ob
.
ob_off£t_idx
 = 
i
;

577 
ob
.
size
 = 0x100000;

578 i‡(
	`ti81xx_£t_outbound_ªgi⁄
(&
ob
, 
fd
) != 0)

579 
	`¥ötf
("test caseÉxecution failed\n");

583 
	`¥ötf
("sendingáÑequest of 32 MB\n");

584 
ob1
.
ob_off£t_hi
 = 1024;

585 
ob1
.
ob_off£t_idx
 = 1024;

586 
ob1
.
size
 = 0x2000000;

587 i‡(
	`ti81xx_£t_outbound_ªgi⁄
(&
ob1
, 
fd
Ë=
ENMEM
) {

588 
	`¥ötf
("ENMEMÖassed\n");

589 
	`•rötf
(
ã°_summ¨y
[3].
ªsu…
, "%s", "Pass");

591 
	`˛o£
(
fd
);

593 
	}
}

596 
	$maö
(
¨gc
, **
¨gv
)

602 
ªt
;

603 
ob_size
;

604 
ti81xx_pcõ_mem_öfo
 
°¨t_addr
;

605 
ti81xx_öb_wödow
 
ö
;

606 
ti81xx_outb_ªgi⁄
 
ob
;

607 *
ã°
;

608 *
öt_ˇp
;

609 
muid
;

610 #ifde‡
THPT


611 
size_buf
 = 1024 * 1024;

613 
size_buf
 = 4 * 1024;

616 #i‡
	`deföed
(
INTEGRITY
Ë|| deföed(
THPT
)

617 
dma_˙t
.
a˙t
 = 256;

618 
dma_˙t
.
b˙t
 = 4096;

619 
dma_˙t
.
c˙t
 = 1;

620 
dma_˙t
.
mode
 = 1;

622 
dma_˙t
.
a˙t
 = 510;

623 
dma_˙t
.
b˙t
 = 1;

624 
dma_˙t
.
c˙t
 = 1 ;

625 
dma_˙t
.
mode
 = 0;

628 
ti81xx_pcõss_ªgs
 
pcõ_ªgs
;

630 #i‡
	`deföed
(
INTEGRITY
Ë|| deföed(
THPT
)

632 
fix_å™s
 
rd_buf
, 
wr_buf
;

633 *
	`£nd_to_dediˇãd_buf
(*
¨g
);

634 *
	`ªad_‰m_dediˇã_buf
(*
¨g
);

635 *
	`˝u_utûize
(*
¨g
);

639 
±hªad_t
 
t1
, 
t2
, 
t3
, 
t4
;

641 *
	`waô_f‹_öt
(*);

642 *
	`£nd_d©a
(*);

643 *
	`waô_f‹_d©a
(*
¨g
);

644 *
	`¥o˚ss_rmt_buf„r
(*
¨g
);

645 *
	`¥o˚ss_loˇl_buf„r
(*
¨g
);

647 
±hªad_©å_t
 
©å_t1
, 
©å_t2
, 
©å_t3
, 
©å_t4
;

649 
	`±hªad_©å_öô
(&
©å_t1
);

650 
	`±hªad_©å_öô
(&
©å_t2
);

651 
	`±hªad_©å_öô
(&
©å_t3
);

652 
	`±hªad_©å_öô
(&
©å_t4
);

654 
fds
[0].
evíts
 = 
POLLIN
;

655 #i‡
	`deföed
(
INTEGRITY
Ë|| deföed(
THPT
)

656 
byã_ªcv
 = 0;

657 
byã_rx
 = 0;

659 
°©us
 = 0;

660 
cou¡î
 = 0;

662 i‡(
	`£m_öô
(&
muãx
, 0, 1) < 0) {

663 
	`≥º‹
("semaphore initilization failed");

664 
	`exô
(0);

667 
fd
 = 
	`›í
("/dev/ti81xx_pcõ_ï", 
O_RDWR
);

668 i‡(
fd
 == -1) {

669 
	`îr_¥öt
("EP device file open fail\n");

676 
ªt
 = 
	`io˘l
(
fd
, 
TI81XX_GET_PCIE_MEM_INFO
, &
°¨t_addr
);

678 i‡(
ªt
 < 0) {

679 
	`îr_¥öt
("START_MGMT_AREA ioctl failed\n");

680 
	`˛o£
(
fd
);

684 i‡(!
°¨t_addr
.
size
 || (°¨t_addr.sizê< 
SIZE_AREA
)) {

685 i‡(!
°¨t_addr
.
size
)

686 
	`îr_¥öt
("NoÑeserved memoryávailable for PCIe "

689 
	`îr_¥öt
("Minimum %#x bytesÑequiredásÑeserved "

690 "mem‹y, quôtög...\n", 
SIZE_AREA
);

692 
	`˛o£
(
fd
);

696 
dma_b
.
size
 = 0x100000;

697 
dma_b
.
£nd_buf
 = ()
°¨t_addr
.
ba£
 + 0x6000000;

698 
dma_b
.
ªcv_buf
 = ()dma_b.
£nd_buf
 + dma_b.
size
;

700 
m≠≥d_buf„r
 = (*)
	`mm≠
(0, 
SIZE_AREA
, 
PROT_READ
|
PROT_WRITE
,

701 
MAP_SHARED
, 
fd
 ,

702 (
off_t
Ë
°¨t_addr
.
ba£
);

703 i‡((*)-1 =(*Ë
m≠≥d_buf„r
) {

704 
	`îr_¥öt
("mapping dedicated memory fail\n");

705 
	`˛o£
(
fd
);

710 
ã°
 = (*)
m≠≥d_buf„r
;

712 
pcõ_ªgs
.
off£t
 = 
GPR0
;

713 
pcõ_ªgs
.
mode
 = 
GET_REGS
;

714 i‡(
	`io˘l
(
fd
, 
TI81XX_ACCESS_REGS
, &
pcõ_ªgs
) < 0) {

715 
	`îr_¥öt
("GET_REGS mode ioctl failed\n unableÅo fetch "

717 
	`˛o£
(
fd
);

721 i‡(
pcõ_ªgs
.
vÆue
 < 2) {

722 
	`îr_¥öt
("Notá valid idássignedÅo it\n still continue by "

727 
ã°
[0] = 2;

728 
ã°
[1] = 2;

729 
fd_dma
 = 
	`›í
("/dev/ti81xx_edma_ï", 
O_RDWR
);

730 i‡(
fd_dma
 == -1) {

731 
	`îr_¥öt
("EP DMA device file open fail\n");

732 
	`˛o£
(
fd
);

733 
	`˛o£
(
fd
);

737 
ªt
 = 
	`io˘l
(
fd_dma
, 
TI81XX_EDMA_SET_CNT
, &
dma_˙t
);

738 i‡(
ªt
 < 0) {

739 
	`¥ötf
("dma count setting ioctl failed\n");

740 
ERROR
;

742 
ªt
 = 
	`io˘l
(
fd_dma
, 
TI81XX_EDMA_SET_BUF_INFO
, &
dma_b
);

743 i‡(
ªt
 < 0) {

744 
	`¥ötf
("dma buffer setting ioctl failed\n");

745 
ERROR
;

748 
fds
[0].
fd
 = fd;

750 
	`¥ötf
("INFO: startáddress of mgmt_area is virt--%xÖhy--%x\n",

751 
°¨t_addr
.
ba£
, start_addr.base);

756 
pcõ_ªgs
.
off£t
 = 
LOCAL_CONFIG_OFFSET
 + 
BAR2
;

757 
pcõ_ªgs
.
mode
 = 
GET_REGS
;

758 i‡(
	`io˘l
(
fd
, 
TI81XX_ACCESS_REGS
, &
pcõ_ªgs
) < 0) {

759 
	`îr_¥öt
("GET_REGS mode ioctl failed\n");

760 
ERROR
;

763 
ö
.
BAR_num
 = 2;

768 
ö
.
öã∫Æ_addr
 = 
°¨t_addr
.
ba£
;

769 
ö
.
ib_°¨t_hi
 = 0;

770 
ö
.
ib_°¨t_lo
 = 
pcõ_ªgs
.
vÆue
;

772 i‡(
	`ti81xx_£t_öbound
(&
ö
, 
fd
) < 0) {

773 
	`îr_¥öt
("setting in bound config failed\n");

774 
ERROR
;

777 i‡(
	`ti81xx_íabÀ_ö_å™¶©i⁄
(
fd
) < 0) {

778 
	`îr_¥öt
("enable in bound failed\n");

779 
ERROR
;

785 
m≠≥d_pci
 = (*)
	`mm≠
(0, 
PCIE_NON_PREFETCH_SIZE
,

786 
PROT_READ
|
PROT_WRITE
, 
MAP_SHARED
,

787 
fd
, (
off_t
)0x20000000);

788 i‡((*)-1 =(*Ë
m≠≥d_pci
) {

789 
	`îr_¥öt
("mapping PCIE_NON_PREFETCH memory fail\n");

790 
ERROR
;

794 
m≠≥d_dma
 = (*)
	`mm≠
(0, 
dma_b
.
size
,

795 
PROT_READ
|
PROT_WRITE
, 
MAP_SHARED
,

796 
fd
, (
off_t
)
dma_b
.
£nd_buf
);

797 i‡((*)-1 =(*Ë
m≠≥d_dma
) {

798 
	`îr_¥öt
("mapping DMAÅx memory fail\n");

799 
ERROR
;

802 
m≠≥d_dma_ªcv
 = (*)
	`mm≠
(0, 
dma_b
.
size
, 
PROT_READ
|
PROT_WRITE
,

803 
MAP_SHARED
, 
fd
, (
off_t
)
dma_b
.
ªcv_buf
);

804 i‡((*)-1 =(*Ë
m≠≥d_dma
) {

805 
	`îr_¥öt
("mapping DMAÑx memory fail\n");

806 
ERROR
;

809 
öt_ˇp
 = (*)
m≠≥d_pci
;

811 i‡(
	`ti81xx_¥ï¨e_mgmt_öfo
(&
mgmt_¨ó
, 
size_buf
) < 0) {

812 
	`îr_¥öt
("prepare_mgmt_info failed\n");

813 
ERROR
;

816 
rm_öfo
 = (
u32
 *)(
m≠≥d_buf„r
 + 
mgmt_¨ó
.
size
);

818 
	`ti81xx_£t_mgmt_¨ó
(&
mgmt_¨ó
, (*)
m≠≥d_buf„r
);

819 
	`¥ötf
("initialization of management mgmt_area complete\n");

822 
ã°
[0] = 1;

823 
mgmt_¨ó
.
my_unique_id
 = 
ã°
[1];

825 (
ªt
 = 
	`ac˚ss_mgmt_¨ó
((
u32
 *)
m≠≥d_buf„r
,

826 
ã°
[1])) < 0) {

828 
	`¥ötf
("mgmtáreaáccessÇot granted\n");

829 
	`¶ìp
(1);

834 
	`¥ötf
("tŸÆÇÿo‡ï o¿sy°em i†%u\n", 
rm_öfo
[0]);

835 
	`¥ötf
("Mgmà¨ó'†°¨àaddªs†⁄ RC i†%u\n", 
rm_öfo
[1]);

839 
	`ti81xx_ˇlcuœã_±r
(&
mgmt_¨ó
, 
m≠≥d_buf„r
, &
±r
);

840 
ob_size
 = 0;

842 
ªt
 = 
	`io˘l
(
fd
, 
TI81XX_SET_OUTBOUND_SIZE
, 
ob_size
);

844 
muid
 = 1;

849 i‡((
	`sˇn_mgmt_¨ó
(
rm_öfo
, 
muid
, &
ob
) == -1)) {

851 
	`¥ötf
("noÑemoteÖeer ofÅhis muidÉxist\n");

855 
	`¥ötf
("outbound config is %x %x\n",

856 
ob
.
ob_off£t_hi
, ob.
ob_off£t_idx
);

857 
ob
.
size
 = 4194304;

862 
	`ti81xx_£t_outbound_ªgi⁄
(&
ob
, 
fd
);

865 i‡(
	`ti81xx_íabÀ_out_å™¶©i⁄
(
fd
) < 0) {

866 
	`îr_¥öt
("enable outbound failed\n");

867 
ERROR
;

871 i‡(
	`ti81xx_íabÀ_bus_ma°î
(
fd
) < 0) {

872 
	`îr_¥öt
("enable bus master fail\n");

873 
ERROR
;

876 
mgmt_¨ó
.
size
 = 
ã°
[4];

878 
	`ªÀa£_mgmt_¨ó
((
u32
 *)
m≠≥d_buf„r
);

881 
ã°
[5] == 0) {

882 
	`¥ötf
("INFO: waiting for interrupt capability "

884 
	`¶ìp
(1);

888 
	`¥ötf
("***Advertised interrupt capability, EP will generate MSI.\n");

889 
öå_ˇp
 = 1;

891 
öt_ˇp
[5] = 
öå_ˇp
;

894 #i‡
	`deföed
(
INTEGRITY
Ë|| deföed(
THPT
)

901 
rd_buf
.
size_buf
 = size_buf;

902 
rd_buf
.
out_phy
 = 0x20000000;

903 
wr_buf
.
size_buf
 = size_buf;

904 
wr_buf
.
out_phy
 = 0x20000000;

906 
rd_buf
.
u£r_buf
 = 
	`mÆloc
(
size_buf
);

907 i‡(
rd_buf
.
u£r_buf
 =
NULL
) {

908 
	`¥ötf
("user bufferállocation failed\n");

909 
ERROR
;

912 
wr_buf
.
u£r_buf
 =

913 
	`mÆloc
(
size_buf
);

914 i‡(
wr_buf
.
u£r_buf
 =
NULL
) {

915 
	`¥ötf
("user bufferállocation failed\n");

916 
	`‰ì
(
rd_buf
.
u£r_buf
);

917 
ERROR
;

920 
	`mem£t
(
rd_buf
.
u£r_buf
, 66, 
size_buf
);

921 
	`mem£t
(
wr_buf
.
u£r_buf
, 66, 
size_buf
);

923 #ifde‡
THPT


926 i‡(
	`föd_dediˇãd_buf„r
((*)
m≠≥d_pci
,

927 
mgmt_¨ó
.
my_unique_id
, &
rd_buf
.
bufd
, 
WR
) < 0) {

928 
	`îr_¥öt
("no dedicated buffer for RX onÑemoteÖeer\n");

929 
FREE_BUFFER
;

931 
	`¥ötf
("offset of buffer dedicated for RX on "

932 "ªmŸê≥î i†%X\n", 
rd_buf
.
bufd
.
off_°
);

937 i‡(
	`föd_dediˇãd_buf„r
((*)
m≠≥d_pci
,

938 
mgmt_¨ó
.
my_unique_id
, &
wr_buf
.
bufd
, 
RD
) < 0) {

939 
	`îr_¥öt
("no dedicated buffer for TX onÑemoteÖeer\n");

940 
FREE_BUFFER
;

943 
	`¥ötf
("offset of buffer dedicated for TX onÑemote "

944 "≥î i† %X\n", 
wr_buf
.
bufd
.
off_°
);

947 #ifde‡
THPT


948 #ifde‡
TEST_MEMCPY_SPEED


949 
	`¥ötf
("\nExecutingÅest case DDR Memcpy speed.\n");

950 
	`±hªad_¸óã
(&
t2
,&
©å_t2
,
ã°_mem˝y_•ìd_func
, 
NULL
);

951 
	`±hªad_joö
(
t2
,
NULL
);

952 
	`¶ìp
(2);

954 
i
 = 0;

956 
	`¥ötf
("\n****Te° Lo› %Œu***",
i
++);

957 
	`¥ötf
("\nExecutingÅest case THPT TX (writeÅo RC from EP)\n");

959 
	`±hªad_¸óã
(&
t1
, &
©å_t1
, 
£nd_to_dediˇãd_buf
, &
wr_buf
);

960 
	`±hªad_joö
(
t1
, 
NULL
);

961 
	`¶ìp
(1);

963 
	`¥ötf
("\nExecutingÅest case THPT RX (RCÑead from EP)\n");

964 
	`±hªad_¸óã
(&
t4
, &
©å_t4
, 
ªad_‰om_dediˇãd_buf
, &
rd_buf
);

965 
	`±hªad_joö
(
t4
, 
NULL
);

966 
	`¶ìp
(1);

978 
CLEAR_MAP
;

982 i‡(
ã°
[5] =
INT
) {

983 
	`¥ötf
("INTERRUPT will be working\n");

984 
	`¶ìp
(5);

985 
	`±hªad_¸óã
(&
t1
, &
©å_t1
, 
£nd_d©a
, &
fd
);

986 
	`±hªad_¸óã
(&
t2
, &
©å_t2
, 
waô_f‹_öt
, 
NULL
);

987 
	`±hªad_¸óã
(&
t3
, &
©å_t3
, 
¥o˚ss_loˇl_buf„r
, 
NULL
);

988 
	`±hªad_¸óã
(&
t4
, &
©å_t4
, 
¥o˚ss_rmt_buf„r
, &
fd
);

991 
	`¥ötf
("polling will be working\n");

992 
	`±hªad_¸óã
(&
t1
, &
©å_t1
, 
£nd_d©a
, &
fd
);

993 
	`±hªad_¸óã
(&
t2
, &
©å_t2
, 
waô_f‹_d©a
, 
NULL
);

998 
	`±hªad_joö
(
t1
, 
NULL
);

999 
	`±hªad_joö
(
t2
, 
NULL
);

1000 
	`±hªad_joö
(
t3
, 
NULL
);

1002 #i‡
	`deföed
(
INTEGRITY
Ë|| deföed(
THPT
)

1003 
CLEAR_MAP
:

1006 #ifde‡
THPT


1007 
	`±hªad_joö
(
t1
, 
NULL
);

1008 
	`±hªad_joö
(
t4
, 
NULL
);

1009 
	`¥ötf
("byã†ªcv from dediˇãd buf„∏¨ê%Œu\n", 
byã_rx
);

1011 #i‡
	`deföed
(
THPT
Ë|| deföed(
INTEGRITY
)

1012 
FREE_BUFFER
:

1013 
	`‰ì
(
wr_buf
.
u£r_buf
);

1014 
	`‰ì
(
rd_buf
.
u£r_buf
);

1016 #ifde‡
THPT


1018 
	`¥ötf
("TotalÅhpt calculatedÅx+rx is: %f MBPS\n",

1019 ()(((
THPT_DATA_SIZE
>>20Ë* 
HZ
Ë/ (
fö_time2
 - 
cur_time2
))

1020 + ()(((
THPT_DATA_SIZE
>>20Ë* 
HZ
Ë/ (
fö_time1
 - 
cur_time1
)));

1023 
ERROR
:

1024 
	`˛o£
(
fd
);

1025 
	`˛o£
(
fd_dma
);

1028 
	}
}

1034 *
	$waô_f‹_öt
(*
¨g
)

1036 
ªt
;

1038 
ªt
 = 
	`pﬁl
(
fds
, 1, 3000);

1040 i‡(
ªt
 =
POLLIN
) {

1041 
	`£m_waô
(&
muãx
);

1042 
cou¡î
 = 2;

1043 
	`£m_po°
(&
muãx
);

1047 
	`¥ötf
("no data in buffers --Åimed out\n");

1049 #ifde‡
THPT


1050 i‡(
byã_rx
 =
THPT_DATA_SIZE
 )

1056 
	`±hªad_exô
(
NULL
);

1057 
	}
}

1061 *
	$waô_f‹_öt_ã°
(*
¨g
)

1063 
ªt
;

1064 
wake_up
 = 0;

1065 
öå_˙å
 = 0;

1066 
i
 = 0;

1067 
	`¶ìp
(5);

1069 
ªt
 = 
	`pﬁl
(
fds
, 1, 1);

1070 i‡(
ªt
 =
POLLIN
) {

1071 
wake_up
++;

1073 
	`io˘l
(
fd
, 
TI81XX_GET_INTR_CNTR
, &
öå_˙å
);

1074 i‡(++
i
 >= 10) {

1075 
	`¥ötf
("interrupt occur %uÅimes "

1077 
öå_˙å
, 
wake_up
);

1078 
	`•rötf
(
ã°_summ¨y
[19].
ªsu…
,

1080 
öå_˙å
, 
wake_up
);

1081 
	`±hªad_exô
(
NULL
);

1085 
	}
}

1089 *
	$¥o˚ss_loˇl_buf„r
(*
¨g
)

1091 
ªt
 = 0;

1093 
	`£m_waô
(&
muãx
);

1094 i‡(
cou¡î
 > 0) {

1096 (
ªt
 = 
	`ac˚ss_mgmt_¨ó
((
u32
 *)
m≠≥d_buf„r
,

1097 
mgmt_¨ó
.
my_unique_id
)) < 0) {

1098 
	`¥ötf
("managementáreaáccess "

1102 #ifde‡
INTEGRITY


1103 
	`ti81xx_pﬁl_f‹_d©a
(&
±r
, &
mgmt_¨ó
,

1104 
m≠≥d_buf„r
, 
Â2
, &
byã_ªcv
);

1105 #ñi‡
	`deföed
(
THPT
)

1106 
	`ti81xx_pﬁl_f‹_d©a
(&
±r
, &
mgmt_¨ó
,

1107 
m≠≥d_buf„r
,

1108 
NULL
, &
byã_ªcv
);

1109 #ñi‡
	`deföed
(
DISPLAY
)

1110 
	`ti81xx_pﬁl_f‹_d©a
(&
±r
, &
mgmt_¨ó
,

1111 
m≠≥d_buf„r
,

1112 
NULL
, NULL);

1114 
	`ªÀa£_mgmt_¨ó
((
u32
 *)
m≠≥d_buf„r
);

1115 
cou¡î
--;

1117 
	`£m_po°
(&
muãx
);

1119 
	`±hªad_exô
(
NULL
);

1120 
	}
}

1123 *
	$¥o˚ss_rmt_buf„r
(*
¨g
)

1125 
ªt
 = 0;

1131 
	`£m_waô
(&
muãx
);

1132 i‡(
cou¡î
 > 0) {

1138 (
ªt
 = 
	`ac˚ss_mgmt_¨ó
((
u32
 *)
m≠≥d_pci
,

1139 
mgmt_¨ó
.
my_unique_id
)) < 0) {

1140 
	`¥ötf
("accessÇot granted\n");

1144 
	`¥o˚ss_ªmŸe_buf„r_f‹_d©a
((
u32
 *)
m≠≥d_pci
,

1145 
EDMA
, 
fd_dma
);

1146 
	`ªÀa£_mgmt_¨ó
((
u32
 *)
m≠≥d_pci
);

1147 i‡(
öå_ˇp
 == 1)

1148 
	`io˘l
(*(*)
¨g
,

1149 
TI81XX_SEND_MSI
, 0);

1151 
cou¡î
--;

1153 
	`£m_po°
(&
muãx
);

1166 
	`±hªad_exô
(
NULL
);

1167 
	}
}

1170 *
	$waô_f‹_d©a
(*
¨g
)

1171 { 
åy
 = 0;

1173 
	`¶ìp
(3);

1174 
	`¥o˚ss_loˇl_rmt_bufs
();

1175 
åy
++;

1176 
	`¥ötf
("data forÑeading isávailable "

1177 "ˇŒed %dÅimes\n\n", 
åy
);

1179 
	`±hªad_exô
(
NULL
);

1180 
	}
}

1185 *
	$£nd_d©a
(*
¨g
)

1187 
åy
 = 0;

1191 
	`¶ìp
(10);

1192 
	`£nd_d©a_by_˝u
();

1193 i‡(
öå_ˇp
 == 1)

1194 
	`io˘l
(*(*)
¨g
, 
TI81XX_SEND_MSI
, 0);

1195 
	`£nd_d©a_by_dma
();

1196 i‡(
öå_ˇp
 == 1)

1197 
	`io˘l
(*(*)
¨g
, 
TI81XX_SEND_MSI
, 0);

1198 
	`¥ötf
("£nd d©®%dÅimes\n", 
åy
);

1199 
åy
++;

1201 
	`¥ötf
("sending dataÉxits");

1202 
	`±hªad_exô
(
NULL
);

1204 
	}
}

1206 *
	$˝u_utûize
(*
¨g
)

1208 
	`sy°em
("top >> cpuutilize");

1209 
	`±hªad_exô
(
NULL
);

1210 
	}
}

	@application/ti81xx_rc_app.c

38 
	~<°dio.h
>

39 
	~<°dlib.h
>

40 
	~<uni°d.h
>

41 
	~<°rög.h
>

42 
	~<î∫o.h
>

43 
	~<sig«l.h
>

44 
	~<f˙é.h
>

45 
	~<˘y≥.h
>

46 
	~<ãrmios.h
>

47 
	~<sys/ty≥s.h
>

48 
	~<sys/mm™.h
>

49 
	~<löux/io˘l.h
>

50 
	~<sys/io˘l.h
>

51 
	~<time.h
>

52 
	~<±hªad.h
>

53 
	~<pﬁl.h
>

54 
	~<°rög.h
>

56 
	~"ti81xx_mgmt_lib.h
"

57 
	~"ti81xx_pci_öfo.h
"

58 
	~"ti81xx_å™s.h
"

59 
	~<drivîs/ch¨/ti81xx_pcõ_rcdrv.h
>

62 
	#PAGE_SIZE_EP
 4096

	)

63 
	#USED
 1

	)

64 
	#INPROCESS
 1

	)

65 
	#CPU
 2

	)

68 
	sã°_ˇ£
 {

69 
	mã°_ˇ£_id
[10];

70 
	mªsu…
[10];

73 
ã°_ˇ£
 
	gã°_summ¨y
[19];

78 *
	gm≠≥d_buf„r
;

79 *
	gm≠≥d_pci
;

80 
ti81xx_mgmt_¨ó
 
	gmgmt_¨ó
;

81 
ti81xx_±rs
 
	g±r
;

82 
	gfd
;

83 
pci_sys_öfo
 *
	g°¨t
;

84 
pﬁlfd
 
	gfds
[1];

85 
	göt_ˇp
;

86 
	gtŸÆ_Êd
;

87 *
	gid_Æloc
;

88 
	gã°_öãgrôy
;

89 
	gb¨0_addr
;

91 #ifde‡
INTEGRITY


92 
FILE
 *
	gÂ1
, *
	gÂ2
;

95 #i‡
deföed
(
INTEGRITY
Ë|| deföed(
THPT
)

97 
	gbyã_ªcv
;

98 
	sfix_å™s
 {

99 
dediˇãd_buf
 
	mbufd
;

100 *
	mu£r_buf
;

101 
	msize_buf
;

106 
	$£nd_d©a_by_˝u
()

108 
ªt
;

109 
off£t
;

111 
ACCESS_MGMT
:

112 (
ªt
 = 
	`ac˚ss_mgmt_¨ó
((
u32
 *Ë
m≠≥d_pci
,

113 
mgmt_¨ó
.
my_unique_id
)) < 0) {

114 
	`¥ötf
("mgmtáreaáccessÇot granted\n");

115 
	`¶ìp
(3);

119 (
ªt
 = 
	`gë_‰ì_buf„r
((
u32
 *)
m≠≥d_pci
)) < 0) {

120 
	`¥ötf
("bufferÇotávailable\n");

121 
	`ªÀa£_mgmt_¨ó
((
u32
 *)
m≠≥d_pci
);

122 
	`¶ìp
(2);

123 
ACCESS_MGMT
;

126 
off£t
 = 
	`off£t_to_buf„r
((
u32
 *)
m≠≥d_pci
, 
ªt
);

127 
	`£nd_to_ªmŸe_buf_by_˝u
((
u32
 *)
m≠≥d_pci
, 
off£t
, 
ªt
);

128 
	`¥ötf
("send by cpu success full\n");

129 
	`ªÀa£_mgmt_¨ó
((
u32
 *)
m≠≥d_pci
);

130 
	}
}

134 
	$¥o˚ss_loˇl_rmt_bufs
()

136 
ªt
;

138 (
ªt
 = 
	`ac˚ss_mgmt_¨ó
((
u32
 *)
m≠≥d_pci
,

139 
mgmt_¨ó
.
my_unique_id
)) < 0) {

140 
	`¥ötf
("accessÅo mgmtáreaÇot granted\n");

141 
	`¶ìp
(4);

144 
	`¥o˚ss_ªmŸe_buf„r_f‹_d©a
((
u32
 *)
m≠≥d_pci
, 
CPU
, 0);

145 
	`ªÀa£_mgmt_¨ó
((
u32
 *)
m≠≥d_pci
);

147 (
ªt
 = 
	`ac˚ss_mgmt_¨ó
((
u32
 *)
m≠≥d_buf„r
,

148 
mgmt_¨ó
.
my_unique_id
)) < 0) {

149 
	`¥ötf
("accessÅo mgmt_areaÇot granted\n");

150 
	`¶ìp
(4);

154 
	`ti81xx_pﬁl_f‹_d©a
(&
±r
, &
mgmt_¨ó
, 
m≠≥d_buf„r
, 
NULL
, NULL);

155 
	`ªÀa£_mgmt_¨ó
((
u32
 *)
m≠≥d_buf„r
);

157 
	}
}

160 
	$push_d©a
()

162 
ªt
;

163 
off£t
;

165 
ACCESS_MGMT
:

166 (
ªt
 = 
	`ac˚ss_mgmt_¨ó
((
u32
 *)
m≠≥d_buf„r
,

167 
mgmt_¨ó
.
my_unique_id
)) < 0) {

168 
	`¥ötf
("accessÅo mgmt_areaÇot granted\n");

169 
	`¶ìp
(2);

172 
ªt
 = 
	`gë_‰ì_buf„r
((
u32
 *)
m≠≥d_buf„r
);

173 i‡(
ªt
 < 0) {

174 
	`¥ötf
("bufferÇotávailable\n");

175 
	`ªÀa£_mgmt_¨ó
((
u32
 *)
m≠≥d_buf„r
);

176 
	`¶ìp
(2);

177 
ACCESS_MGMT
;

179 
off£t
 = 
	`off£t_to_buf„r
((
u32
 *)
m≠≥d_buf„r
, 
ªt
);

180 
	`put_d©a_ö_loˇl_buf„r
((
u32
 *)
m≠≥d_buf„r
, 
off£t
, 
ªt
);

181 
	`ªÀa£_mgmt_¨ó
((
u32
 *)
m≠≥d_buf„r
);

183 
	}
}

185 #ifde‡
INTEGRITY


186 *
	$£nd_to_dediˇãd_buf
(*
¨g
)

188 
fix_å™s
 *
tx
 = (fix_å™†*Ë
¨g
;

189 
cou¡
;

190 
chunk_å™s
 = (1024 * 1024Ë/ (
tx
->
size_buf
);

191 
	`¥ötf
("offset of buffer is 0x%X,Åotal iterationÅo send data "

192 "wû»bê%u\n", (
tx
->
bufd
).
off_°
, 
chunk_å™s
);

194 
cou¡
 = 0; cou¡ < 
chunk_å™s
 ; count++) {

195 
	`mem£t
(
tx
->
u£r_buf
, 0,Åx->
size_buf
);

196 
	`£t_d©a_to_buf„r
(
tx
->
u£r_buf
,Åx->
size_buf
, 
Â1
);

197 *((
tx
->
bufd
).
wr_±r
) != 0) {

198 
	`¥ötf
("polling for write index--[%u]Åo be "

199 "zîÿagaö\n", *((
tx
->
bufd
).
wr_±r
));

200 
	`¶ìp
(1);

202 
	`mem˝y
(
m≠≥d_pci
 + (
tx
->
bufd
).
off_°
,

203 
tx
->
u£r_buf
,Åx->
size_buf
);

204 *((
tx
->
bufd
).
wr_±r
Ëtx->
size_buf
;

205 i‡(
öt_ˇp
 == 1)

206 
	`io˘l
(
fd
, 
TI81XX_RC_SEND_MSI
, 
b¨0_addr
);

207 
	`¥ötf
("data sent %dÅimes, bytes sent in "

209 
cou¡
 + 1, 
tx
->
size_buf
);

211 
	`¥ötf
("exiting from sendÅo dedicated bufáfter "

213 
	`±hªad_exô
(
NULL
);

214 
	}
}

218 #ifde‡
THPT


220 *
	$th±_buf_ªad_d©a
(*
¨g
)

222 
fix_å™s
 *
tx
 = (fix_å™†*Ë
¨g
;

223 
cou¡
 = 0;

225 
chunk_å™s
 = 
THPT_DATA_SIZE
 / 
tx
->
size_buf
;

227 
	`¥ötf
("offset of buffer is 0x%XÅotal iteration ofÖushing data "

229 (
tx
->
bufd
).
off_°
, 
chunk_å™s
);

230 *((
tx
->
bufd
).
wr_±r
Ëtx->
size_buf
;

232 *((
tx
->
bufd
).
wr_±r
) != 0)

233  
	`u¶ìp
(10);

234 *((
tx
->
bufd
).
wr_±r
Ëtx->
size_buf
;

236 
	`io˘l
(
fd
, 
TI81XX_RC_SEND_MSI
, 
b¨0_addr
);

240 
	`¥ötf
("thi†buf„∏ha†bì¿ªad byÑmà≥î %dÅimes\n", 
cou¡
);

241 
	`±hªad_exô
(
NULL
);

242 
	}
}

247 
	$maö
(
¨gc
, **
¨gv
)

249 
i
;

250 
ïs
 = 0;

251 #ifde‡
THPT


252 
size_buf
 = 1024 * 1024;

254 
size_buf
 = 4 * 1024;

256 
ti81xx_°¨t_addr_¨ó
 
°¨t_addr
;

257 *
ã°
;

258 
±hªad_t
 
t1
, 
t2
, 
t3
;

259 
pci_sys_öfo
 *
ãmp
;

260 *
	`push_d©a_ö_loˇl
(*);

261 *
	`£nd_d©a
(*);

262 *
	`waô_f‹_d©a
(*
¨g
);

263 *
	`waô_f‹_öt
(*
¨g
);

265 
±hªad_©å_t
 
©å_t1
, 
©å_t2
, 
©å_t3
;

266 
	`±hªad_©å_öô
(&
©å_t1
);

267 
	`±hªad_©å_öô
(&
©å_t2
);

268 
	`±hªad_©å_öô
(&
©å_t3
);

270 #ifde‡
INTEGRITY


271 
fix_å™s
 
wr_buf
;

274 #ifde‡
THPT


275 
fix_å™s
 
rd_buf
;

278 
fds
[0].
evíts
 = 
POLLIN
;

279 
°¨t
 = 
NULL
;

280 
b¨0_addr
 = 0;

281 #i‡
	`deföed
(
INTEGRITY
Ë|| deföed(
THPT
)

282 
byã_ªcv
 = 0;

285 #ifde‡
INTEGRITY


286 
Â1
 = 
	`f›í
("rc_tx.cap", "w+");

287 i‡(
Â1
 =
NULL
) {

288 
	`îr_¥öt
("fileÅo beÅransfered open failed\n");

292 
Â2
 = 
	`f›í
("rc_rx.cap", "w+");

293 i‡(
Â2
 =
NULL
) {

294 
	`îr_¥öt
("fileÅoÑecv data open failed\n");

298 
	`¸óã_øndom_∑âîn
((1024 * 1024), 4, 
Â1
);

299 
i
 = 0; i <= 18; i++) {

300 
	`•rötf
(
ã°_summ¨y
[
i
].
ã°_ˇ£_id
, "%s%03d", "DM81XX", i+1);

301 
	`•rötf
(
ã°_summ¨y
[
i
].
ªsu…
, "%s", "NE/C");

305 
fd
 = 
	`›í
("/dev/ti81xx_ï_hÕr", 
O_RDWR
);

306 i‡(
fd
 == -1) {

307 
	`îr_¥öt
("device file open fail\n");

308 #ifde‡
INTEGRITY


309 
	`f˛o£
(
Â1
);

310 
	`f˛o£
(
Â2
);

316 
fds
[0].
fd
 = fd;

318 i‡(
	`io˘l
(
fd
, 
TI81XX_RC_START_ADDR_AREA
, &
°¨t_addr
) < 0) {

319 
	`îr_¥öt
("ioctl START_ADDR failed\n");

320 
ERROR
;

322 
ïs
 = 
	`gë_devi˚s
(&
°¨t
);

323 i‡(
ïs
 < 0) {

324 
	`îr_¥öt
("fetchingÖci sub system info onÑc fails\n");

325 
ERROR
;

328 
	`¥ötf
("nÿo‡ï i¿sy°em i†%u\n", 
ïs
);

330 
	`¥ötf
("startáddress of mgmt_area is virt--%xÖhy--%x\n",

331 
°¨t_addr
.
°¨t_addr_vút
,

332 
°¨t_addr
.
°¨t_addr_phy
);

333 
	`¥›ag©e_sy°em_öfo
(
°¨t
, 
fd
, 
ïs
, 
°¨t_addr
.
°¨t_addr_phy
);

335 
	`¥ötf
("pci subsystem infoÖropagated\n");

336 
	`¥öt_li°
(
°¨t
);

341 
ãmp
 = 
°¨t
;Åem∞!
NULL
;Åem∞ãmp->
√xt
) {

342 i‡(
ãmp
->
ªs_vÆue
[0][0] == 2) {

343 
	`¥ötf
("bar 2áddress of EP2 is %x size is %x\n",

344 
ãmp
->
ªs_vÆue
[3][0],

345 
ãmp
->
ªs_vÆue
[3][1]);

346 
b¨0_addr
 = 
ãmp
->
ªs_vÆue
[1][0];

347 
	`¥ötf
("b¨ 0áddªs†i†%x\n", 
b¨0_addr
);

352 i‡(
ãmp
 =
NULL
) {

353 
	`¥ötf
("NOÉp inÅhis setup have muid 2\n");

354 
ERROR
;

361 
m≠≥d_buf„r
 = 
	`mm≠
(0, 4 * 1024 * 1024,

362 
PROT_READ
 | 
PROT_WRITE
, 
MAP_SHARED
,

363 
fd
, (
off_t
)
°¨t_addr
.
°¨t_addr_phy
);

365 i‡((*)-1 =(*Ë
m≠≥d_buf„r
) {

366 
	`îr_¥öt
("MMAP of dedicated memory fail\n");

367 
FREELIST
;

369 
id_Æloc
 = (*Ë
m≠≥d_buf„r
;

372 
m≠≥d_pci
 = 
	`mm≠
(0, 
ãmp
->
ªs_vÆue
[3][1],

373 
PROT_READ
 | 
PROT_WRITE
, 
MAP_SHARED
,

374 
fd
, (
off_t
Ë
ãmp
->
ªs_vÆue
[3][0]);

376 i‡((*)-1 =(*Ë
m≠≥d_pci
) {

377 
	`îr_¥öt
("MMAP EP's BAR memory fail\n");

378 
FREELIST
;

381 
ã°
 = (*)
m≠≥d_pci
;

383 i‡(
	`ti81xx_¥ï¨e_mgmt_öfo
(&
mgmt_¨ó
, 
size_buf
) < 0) {

384 
	`îr_¥öt
("prepare_mgmt_info failed\n");

385 
FREELIST
;

389 
	`ti81xx_£t_mgmt_¨ó
(&
mgmt_¨ó
, (*)
m≠≥d_buf„r
);

391 
id_Æloc
[0] = 0;

392 
id_Æloc
[1] = 1;

394 #i‡
	`deföed
(
INTEGRITY
Ë|| deföed(
THPT
)

398 
	`dediˇã_buf„r
((*)
m≠≥d_buf„r
,

399 2, 
mgmt_¨ó
.
no_blk
, 0, 
RD
);

401 #ifde‡
THPT


402 
	`dediˇã_buf„r
((*)
m≠≥d_buf„r
,

403 2, 
mgmt_¨ó
.
no_blk
, 1, 
WR
);

408 
	`¥ötf
("initialization of management mgmt_area complete\n");

409 
	`ti81xx_ˇlcuœã_±r
(&
mgmt_¨ó
, 
m≠≥d_buf„r
, &
±r
);

410 
mgmt_¨ó
.
my_unique_id
 = 1;

413 
	`¥ötf
("notify EPábout interrupt capability 1--int 2--polling\n");

414 
	`sˇnf
("%u", &
öt_ˇp
);

416 
	`¥ötf
("***ForcingÖolling (interrupt communication disabled, "

418 
öt_ˇp
 = 2;

421 
ã°
[5] = 
öt_ˇp
;

423 
	`¥ötf
("managementárea before "

426 
tŸÆ_Êd
 = 6 + 
mgmt_¨ó
.
no_blk
 * 2 + mgmt_area.no_blk * 5;

429 
	`¥ötf
("Managementárea dump:\n");

430 
i
 = 0; i < 
tŸÆ_Êd
 ; i++) {

431 
	`¥ötf
("0x%X ", 
id_Æloc
[
i
]);

432 i‡((
i
 + 1) % 6 == 0)

433 
	`¥ötf
("\n");

436 
	`¥ötf
("waiting for interrupt capability fromÑemoteÉnd\n");

437 
id_Æloc
[5] == 0) {

438 
	`¥ötf
("waiting forÑemoteÉndÖoint "

441 
i
 = 0; i < 
tŸÆ_Êd
; i++) {

442 
	`¥ötf
("0x%X ", 
id_Æloc
[
i
]);

443 i‡((
i
 + 1) % 6 == 0)

444 
	`¥ötf
("\n");

448 
	`¥ötf
("int capabilityÑecevied from "

449 "rmà≥î i†0x%X\n", 
id_Æloc
[5]);

450 
	`¶ìp
(1);

452 
	`¥ötf
("int capabilityÑecevied from "

453 "rmà≥î i†0x%X\n", 
id_Æloc
[5]);

456 #i‡
	`deföed
(
INTEGRITY
Ë|| deföed(
THPT
)

461 i‡(
id_Æloc
[5] != 1) {

462 
	`îr_¥öt
("ExitingÅheápplication since EP doesn't have "

465 
FREELIST
;

468 #ifde‡
INTEGRITY


469 
wr_buf
.
size_buf
 = size_buf;

470 
	`¥ötf
("sizêo‡buf„∏⁄ RC i†%u\n", 
wr_buf
.
size_buf
);

471 
wr_buf
.
u£r_buf
 = 
	`mÆloc
(
size_buf
);

472 i‡(
wr_buf
.
u£r_buf
 =
NULL
) {

473 
	`¥ötf
("user bufferállocation failed\n");

474 
FREELIST
;

476 i‡(
	`föd_dediˇãd_buf„r
((*)
m≠≥d_pci
,

477 
mgmt_¨ó
.
my_unique_id
, &
wr_buf
.
bufd
, 
RD
) < 0) {

478 
	`îr_¥öt
("no dedicated buffer for TX onÑemoteÖeer\n");

479 
FREELIST
;

482 
	`¥ötf
("off£ào‡buf„∏i†%x\n", 
wr_buf
.
bufd
.
off_°
);

485 #ifde‡
THPT


486 
rd_buf
.
size_buf
 = size_buf;

487 
rd_buf
.
u£r_buf
 = 
NULL
;

489 i‡(
	`föd_dediˇãd_buf„r
((*)
m≠≥d_buf„r
,

490 2, &
rd_buf
.
bufd
, 
WR
) < 0) {

491 
	`îr_¥öt
("no dedicated buffer onÜocalÖeerÅo be RX "

493 
FREELIST
;

497 
	`mem£t
(
m≠≥d_buf„r
 + (
rd_buf
.
bufd
).
off_°
, 97,Ñd_buf.
size_buf
);

500 i‡(
id_Æloc
[5] =
INT
) {

501 #ifde‡
INTEGRITY


505 
	`±hªad_¸óã
(&
t1
, &
©å_t1
, 
£nd_to_dediˇãd_buf
, &
wr_buf
);

506 
	`±hªad_¸óã
(&
t2
, &
©å_t2
, 
waô_f‹_öt
, 
NULL
);

509 #ifde‡
THPT


510 
	`¥ötf
("\nexecutingÅest case TX from EP\n");

511 
	`±hªad_¸óã
(&
t2
, &
©å_t2
, 
waô_f‹_öt
, 
NULL
);

514 
	`¥ötf
("\nexecutingÅest case RX/TX from EP\n");

515 #ifde‡
WISCOM_THPT_EPREAD_SYNS


516 
	`±hªad_¸óã
(&
t3
, &
©å_t3
, 
th±_buf_ªad_d©a
 , &
rd_buf
);

518 
	`±hªad_¸óã
(&
t2
, &
©å_t2
, 
waô_f‹_öt
, 
NULL
);

521 
JOIN
;

523 
FREELIST
;

526 i‡(
id_Æloc
[5] =
INT
) {

527 
	`¥ötf
("interrupt will be working onÅhisÉnd\n");

528 
	`±hªad_¸óã
(&
t1
, &
©å_t1
, 
£nd_d©a
, 
NULL
);

529 
	`±hªad_¸óã
(&
t2
, &
©å_t2
, 
waô_f‹_öt
, 
NULL
);

530 
	`±hªad_¸óã
(&
t3
, &
©å_t3
, 
push_d©a_ö_loˇl
, 
NULL
);

532 
	`¥ötf
("polling will be working onÅhisÉnd\n");

533 
	`±hªad_¸óã
(&
t1
, &
©å_t1
, 
£nd_d©a
, 
NULL
);

534 
	`±hªad_¸óã
(&
t2
, &
©å_t2
, 
waô_f‹_d©a
, 
NULL
);

535 
	`±hªad_¸óã
(&
t3
, &
©å_t3
, 
push_d©a_ö_loˇl
, 
NULL
);

539 
	`±hªad_joö
(
t1
, 
NULL
);

540 
	`±hªad_joö
(
t2
, 
NULL
);

541 
	`±hªad_joö
(
t3
, 
NULL
);

543 #i‡
	`deföed
(
INTEGRITY
Ë|| deföed(
THPT
)

544 
JOIN
:

546 
	`±hªad_joö
(
t2
, 
NULL
);

548 #ifde‡
INTEGRITY


549 
	`±hªad_joö
(
t1
, 
NULL
);

556 
FREELIST
:

557 
	`‰ì_li°
(
°¨t
);

559 
ERROR
:

560 #ifde‡
INTEGRITY


561 
id_Æloc
[0] != 2) {

562 
	`¥ötf
("waiting forÅurn\n");

563 
	`¶ìp
(1);

566 
	`¶ìp
(3);

568 
i
 = 0; i < 1000; i++) {

569 
	`io˘l
(
fd
, 
TI81XX_RC_SEND_MSI
, 
b¨0_addr
 );

572 
	`˛o£
(
fd
);

573 
	`f˛o£
(
Â1
);

574 
	`f˛o£
(
Â2
);

575 i‡(
ã°_öãgrôy
 == 0) {

576 
	`•rötf
(
ã°_summ¨y
[1].
ªsu…
, "%s", "Pass");

577 
	`•rötf
(
ã°_summ¨y
[5].
ªsu…
, "%s", "Pass");

578 
	`•rötf
(
ã°_summ¨y
[7].
ªsu…
, "%s", "Pass");

579 
	`•rötf
(
ã°_summ¨y
[9].
ªsu…
, "%s", "Pass");

580 
	`•rötf
(
ã°_summ¨y
[12].
ªsu…
, "%s", "Pass");

581 
	`•rötf
(
ã°_summ¨y
[15].
ªsu…
, "%s", "Pass");

584 
	`¥ötf
("test summary:\nNE/C : meansÇotÉxecuted or "

587 
i
 = 0; i <= 18; i++)

588 
	`¥ötf
("%s\à%s\n", 
ã°_summ¨y
[
i
].
ã°_ˇ£_id
,

589 
ã°_summ¨y
[
i
].
ªsu…
);

594 
	}
}

597 *
	$waô_f‹_d©a
(*
¨g
)

599 
åy
 = 0;

601 
	`¶ìp
(1);

602 
	`¥o˚ss_loˇl_rmt_bufs
();

603 
åy
++;

604 
	`¥ötf
("data forÑeading isávailable "

605 "ˇŒed %dÅimes\n", 
åy
);

608 
	`±hªad_exô
(
NULL
);

609 
	}
}

611 *
	$£nd_d©a
(*
¨g
)

613 
åy
 = 0;

615 
	`¶ìp
(11);

616 
	`£nd_d©a_by_˝u
();

617 i‡(
öt_ˇp
 == 1)

618 
	`io˘l
(
fd
, 
TI81XX_RC_SEND_MSI
, 
b¨0_addr
 );

619 
	`¥ötf
("INFO: síd d©®%dÅimes\n", 
åy
);

620 
åy
++;

622 
	`¶ìp
(5);

623 
	`¥ötf
("INFO: sendingÉxits\n\n\n\n\n");

624 
	`±hªad_exô
(
NULL
);

625 
	}
}

628 *
	$push_d©a_ö_loˇl
(*
¨g
)

630 
åy
 = 0;

632 
	`¶ìp
(10);

633 
	`push_d©a
();

634 i‡(
öt_ˇp
 == 1)

635 
	`io˘l
(
fd
, 
TI81XX_RC_SEND_MSI
, 
b¨0_addr
 );

637 
	`¥ötf
("INFO: síd d©®%dÅimes\n", 
åy
);

638 
åy
++;

640 
	`±hªad_exô
(
NULL
);

641 
	}
}

644 *
	$waô_f‹_öt
(* 
¨g
)

646 
ªt
;

647 #i‡
	`deföed
(
INTEGRITY
Ë|| deföed(
THPT
)

648 
byã_ªcv
 = 0;

651 
	`u¶ìp
(20);

652 
ªt
 = 
	`pﬁl
(
fds
, 1, 3000);

653 i‡(
ªt
 =
POLLIN
) {

654 #ifde‡
INTEGRITY


655 
	`ti81xx_pﬁl_f‹_d©a
(&
±r
, &
mgmt_¨ó
,

656 
m≠≥d_buf„r
, 
Â2
, &
byã_ªcv
);

658 #ifde‡
THPT


659 
	`ti81xx_pﬁl_f‹_d©a
(&
±r
, &
mgmt_¨ó
,

660 
m≠≥d_buf„r
, 
NULL
, &
byã_ªcv
);

662 #ifde‡
DISPLAY


663 
	`ti81xx_pﬁl_f‹_d©a
(&
±r
, &
mgmt_¨ó
,

664 
m≠≥d_buf„r
, 
NULL
, NULL);

668 #ifde‡
INTEGRITY


669 i‡(
byã_ªcv
 == (1024 * 1024))

673 #ifde‡
THPT1


674 i‡(
byã_ªcv
 =
THPT_DATA_SIZE
 )

678 
	`¥ötf
("noÇotification fromÑemoteÖeer -- "

681 #i‡
	`deföed
(
INTEGRITY
Ë|| deföed(
THPT
)

682 
	`¥ötf
("byãÑecv from EP i†%Œu\n", 
byã_ªcv
);

684 #ifde‡
INTEGRITY


685 
	`f£ek
(
Â2
, 0 , 
SEEK_SET
);

686 
ã°_öãgrôy
 = 
	`check_öãgrôy
(
Â1
, 
Â2
);

688 
	`±hªad_exô
(
NULL
);

689 
	}
}

	@include/debug_msg.h

36 #i‚de‡
__DEBUG_MSG__


37 
	#__DEBUG_MSG__


	)

38 #ifde‡
DEBUG


39 
	#DEBUG_TEST
 1

	)

41 
	#DEBUG_TEST
 0

	)

44 
	#Mb
 (1<<20)

	)

45 
	#Gb
 (1<<30)

	)

46 
	#THPT_DATA_SIZE
 (1Œu*
Gb
)

	)

47 
	#WISCOM_THPT_EPREAD_SYNS


	)

49 
	#CONFIG_WISCOM_COMPARE


	)

52 
	#debug_¥öt
(
fmt
, ...) \

53 dÿ{ i‡(
DEBUG_TEST
Ë
	`Ârötf
(
°dîr
, "%s:%d:%s(): " 
fmt
, 
__FILE__
, \

54 
__LINE__
, 
__func__
, ##
__VA_ARGS__
); } 0)

	)

60 
	#îr_¥öt
(
fmt
, ...) \

61 dÿ{ 
	`Ârötf
(
°dîr
, "%s:%d:%s(): " 
fmt
, 
__FILE__
, \

62 
__LINE__
, 
__func__
, ##
__VA_ARGS__
); } 0)

	)

	@include/ti81xx_ep_lib.h

37 #i‚de‡
__TI816x_PCIE_EP_APPL__


38 
	#__TI816x_PCIE_EP_APPL__


	)

40 
	~<drivîs/ch¨/ti81xx_pcõ_ïdrv.h
>

41 
	~<drivîs/ch¨/ti81xx_edma.h
>

44 
	#CMD_STATUS
 0x004

	)

45 
	#CFG_SETUP
 0x008

	)

46 
	#IB_BAR
(
x
Ë(0x300 + (0x10 * x))

	)

47 
	#IB_START_LO
(
x
Ë(0x304 + (0x10 * x))

	)

48 
	#IB_START_HI
(
x
Ë(0x308 + (0x10 * x))

	)

49 
	#IB_OFFSET
(
x
Ë(0x30¯+ (0x10 * x))

	)

50 
	#OB_SIZE
 0x30

	)

51 
	#CFG_PCIM_WIN_CNT
 32

	)

52 
	#CFG_PCIM_WIN_SZ_IDX
 3

	)

53 
	#OB_OFFSET_INDEX
(
n
Ë(0x200 + (8 *Ç))

	)

54 
	#OB_OFFSET_HI
(
n
Ë(0x204 + (8 *Ç))

	)

55 
	#MSI_IRQ
 0x54

	)

56 
	#MSI0_IRQ_STATUS
 0x104

	)

57 
	#MSI0_IRQ_ENABLE_SET
 0x108

	)

58 
	#MSI0_IRQ_ENABLE_CLR
 0x10c

	)

59 
	#IRQ_EOI
 0x50

	)

60 
	#GPR0
 0x70

	)

66 
	#EP_IRQ_SET
 0x64

	)

67 
	#EP_IRQ_CLR
 0x68

	)

68 
	#EP_IRQ_STATUS
 0x6c

	)

71 
	#ERR_IRQ_STATUS_RAW
 0x1c0

	)

72 
	#ERR_IRQ_STATUS
 0x1C4

	)

73 
	#ERR_IRQ_ENABLE_SET
 0x1C8

	)

74 
	#ERR_IRQ_ENABLE_CLR
 0x1CC

	)

77 
	#STATUS_COMMAND
 0x4

	)

78 
	#VENDOR_DEVICE_ID
 0x0

	)

79 
	#BAR0
 0x10

	)

80 
	#BAR1
 0x14

	)

81 
	#BAR2
 0x18

	)

82 
	#BAR3
 0x1C

	)

88 
	#MSI_CAP
 0x0

	)

89 
	#MSI_LOW32
 0x4

	)

90 
	#MSI_UP32
 0x8

	)

91 
	#MSI_DATA
 0xC

	)

97 
	#PMCAP
 0x0

	)

98 
	#PM_CTL_STAT
 0x4

	)

100 
	#SET_REGS
 1

	)

101 
	#GET_REGS
 2

	)

102 
	#PAGE_SIZE_EP
 4096

	)

103 
	#RAM_START_RC
 0x80000000

	)

105 
	#BAR2_START
 0x20800000

	)

106 
	#ENABLE_IN
 0x4

	)

107 
	#ENABLE_OUT
 0x2

	)

108 
	#LOCAL_CONFIG_OFFSET
 0x1000

	)

109 
	#ENABLE_MASTER
 0x4

	)

111 
	#ENMEM
 1

	)

112 
	#EINOB
 2

	)

113 
	#EFAIL
 3

	)

115 
	#MB
 (1024 * 1024)

	)

116 
	#PCIE_NON_PREFETCH_START
 0x20000000

	)

117 
	#PCIE_NON_PREFETCH_SIZE
 (256 * 
MB
)

	)

118 
	#SIZE_AREA
 (8 * 
MB
)

	)

124 
ti81xx_íabÀ_ö_å™¶©i⁄
(
fd
);

125 
ti81xx_íabÀ_out_å™¶©i⁄
(
fd
);

126 
ti81xx_íabÀ_bus_ma°î
(
fd
);

127 
ti81xx_£t_öbound
(
ti81xx_öb_wödow
 *
ö
, 
fd
);

128 
ti81xx_£t_outbound_ªgi⁄
(
ti81xx_outb_ªgi⁄
 *
ob
 , 
fd
);

129 
ti81xx_˛ór_outbound_m≠pög
(
ti81xx_outb_ªgi⁄
 *
ob
, 
fd
);

	@include/ti81xx_mgmt_lib.h

42 #i‚de‡
__TI816x_PCIE_EP_MGMT__


43 
	#__TI816x_PCIE_EP_MGMT__


	)

45 
	~<drivîs/ch¨/ti81xx_pcõ_ïdrv.h
>

46 
	~<drivîs/ch¨/ti81xx_edma.h
>

48 
	#SET
 1

	)

49 
	#GET
 0

	)

50 
	#USED
 1

	)

51 
	#INPROCESS
 1

	)

56 
	#INT
 1

	)

57 
	#POLL
 2

	)

58 
	#MAX_BLOCKS
 3

	)

59 
	#GENERAL_INFO_SIZE
 ((Ë* 6)

	)

60 
	#FREE_Q_SIZE
(
no_blk
Ë((Ë*Ço_blk)

	)

61 
	#USED_Q_SIZE
(
no_blk
Ë((Ë*Ço_blk)

	)

62 
	#MGMT_BLKS_SIZE
(
no_blk
Ë((
ti81xx_mgmt_blk
Ë*Ço_blk)

	)

63 
	#PAGE_SIZE_EP
 4096

	)

64 
	#RD
 5

	)

65 
	#WR
 6

	)

66 
	~<°dio.h
>

85 
	sti81xx_mgmt_blk
 {

86 
	mbuf_±r
;

87 
	mrd_idx
;

88 
	mwr_idx
;

89 
	m°©us
;

90 
	msize
;

116 
	sti81xx_mgmt_¨ó
 {

117 
	munique_id
;

118 
	mmy_unique_id
;

119 
	mno_blk
;

120 
	moff£t
;

121 
	msize
;

122 
	möt_ˇp
;

123 *
	m‰ì_Q
;

124 *
	mU£d_Q
;

125 
ti81xx_mgmt_blk
 *
	mmgmt_blk
;

141 
	sti81xx_±rs
 {

142 *
	moff£t_‰ì
;

143 *
	moff£t_u£d
;

144 *
	moff£t_°©us
;

145 *
	moff£t_wr_idx
;

146 *
	moff£t_rd_idx
;

147 *
	moff£t_size
;

150 
	sdediˇãd_buf
 {

151 *
	mwr_±r
;

152 *
	mrd_±r
;

153 
	moff_°
;

161 
ti81xx_£t_mgmt_¨ó
(
ti81xx_mgmt_¨ó
 *
mgmt_¨ó
,

162 *
m≠≥d_buf„r
);

163 
ti81xx_gë_mgmt_¨ó
(
ti81xx_mgmt_¨ó
 *
mgmt_¨ó
,

164 *
m≠≥d_buf„r
);

165 
ti81xx_¥ï¨e_mgmt_öfo
(
ti81xx_mgmt_¨ó
 *
mgmt_¨ó
, 

166 
size_buf„r
);

167 
ti81xx_ˇlcuœã_±r
(
ti81xx_mgmt_¨ó
 *
mgmt_¨ó
,

168 *
m≠≥d_buf„r
, 
ti81xx_±rs
 *
±r
);

169 
ti81xx_ac˚ss_‰ì_Q
(*
vÆue
, 
blk_no
,

170 
mode
, 
ti81xx_±rs
 *
±r
);

171 
ti81xx_ac˚ss_u£d_Q
(*
vÆue
, 
blk_no
,

172 
mode
, 
ti81xx_±rs
 *
±r
);

173 
ti81xx_ac˚ss_°©us
(*
vÆue
, 
blk_no
,

174 
mode
, 
ti81xx_±rs
 *
±r
);

175 
ti81xx_ac˚ss_wr_idx
(*
vÆue
, 
blk_no
,

176 
mode
, 
ti81xx_±rs
 *
±r
);

177 
ti81xx_ac˚ss_rd_idx
(*
vÆue
, 
blk_no
,

178 
mode
, 
ti81xx_±rs
 *
±r
);

179 
ti81xx_pﬁl_f‹_d©a
(
ti81xx_±rs
 *
±r
,

180 
ti81xx_mgmt_¨ó
 *
mgmt_¨ó
,

181 *
m≠≥d_buf„r
, 
FILE
 *
Â
,

182 *
byã_ªcv
);

183 
dediˇã_buf„r
(*
mgmt_¨ó
, 
muid
,

184 
no_blk
,

185 
buf_no
,

186 
choi˚
);

187 #ifde‡
INTEGRITY


188 
dump_d©a_ö_fûe
(*
buf
, 
buf_Àn
, 
FILE
 *
Â
);

189 
£t_d©a_to_buf„r
(*
buf
, 
buf_Àn
, 
FILE
 *
Â
);

190 
¸óã_øndom_∑âîn
(
Àn
, 
ª≥©
, 
FILE
 *
Â
);

191 
check_öãgrôy
(
FILE
 *
Â1
, FILE *
Â2
);

193 #ifde‡
THPT


194 
dump_d©a_ö_fûe_n
(*
buf
, 
buf_Àn
, *
«me
);

	@include/ti81xx_pci_info.h

39 #i‚de‡
__RC_HLPR__


40 
	#__RC_HLPR__


	)

43 
	~<sys/mm™.h
>

44 
	~<°dio.h
>

45 
	~<°dlib.h
>

46 
	~<°rög.h
>

47 
	~<uni°d.h
>

48 
	~"debug_msg.h
"

50 
	#VENDOR
 "/víd‹"

	)

51 
	#DEVICE
 "/devi˚"

	)

52 
	#RESOURCE
 "/ªsour˚"

	)

53 
	#CLASS
 "/˛ass"

	)

55 
	#VENDOR_ID
 0x104c

	)

56 
	#DEVICE_ID
 0xb800

	)

58 
	spci_sys_öfo
 {

59 
	mªs_vÆue
[7][2];

60 
pci_sys_öfo
 *
	m√xt
;

67 
add_node_ö_li°
(
pci_sys_öfo
 *
pci_öfo
,

68 
pci_sys_öfo
 **
°¨t
);

69 
‰ì_li°
(
pci_sys_öfo
 *
°¨t
);

70 
add_ªsour˚_ö_li°
(
FILE
 *
‰
, 
pci_sys_öfo
 **
°¨t
);

71 
„tch_my_unique_id
(*
mgmt_¨ó
, 
pci_sys_öfo
 *
node
);

72 
¥öt_li°
(
pci_sys_öfo
 *
°¨t
);

73 
dump_öfo_⁄_ï
(
pci_sys_öfo
 *
°¨t
, *
mgmt_¨ó
,

74 
ïs
, 
°¨èddr
);

75 
gë_devi˚s
(
pci_sys_öfo
 **
°¨t
);

76 
¥›ag©e_sy°em_öfo
(
pci_sys_öfo
 *
°¨t
,

77 
fd
, 
ïs
, 
°¨èddr
);

	@include/ti81xx_trans.h

38 #i‚de‡
__TRANS_FUNC__


39 
	#__TRANS_FUNC__


	)

42 
	#EP_OUT
 0

	)

43 
	#EP_IN
 1

	)

46 
	#EDMA
 1

	)

47 
	#CPU
 2

	)

49 
ac˚ss_mgmt_¨ó
(*
mgmt_¨ó
, 
unique_id
);

50 
ölöe
 
ªÀa£_mgmt_¨ó
(*
mgmt_¨ó
);

51 
gë_‰ì_buf„r
(*
mgmt_¨ó
);

52 
off£t_to_buf„r
(*
mgmt_¨ó
, 
i
);

53 
£nd_to_ªmŸe_buf_by_˝u
(*
mgmt_¨ó
,

54 
off_°
, 
i
);

55 
put_d©a_ö_loˇl_buf„r
(*
mgmt_¨ó
,

56 
off_°
, 
i
);

57 
ªad_‰om_ªmŸe_buf_by_˝u
(*
mgmt_¨ó
, 
off_°
);

58 
¥o˚ss_ªmŸe_buf„r_f‹_d©a
(*
mgmt_¨ó
,

59 
choi˚
, 
fd_dma
);

60 
ªad_‰om_ªmŸe_buf_by_dma
(
outb_addªss
,

61 
off_°
, 
fd_dma
);

62 
£nd_to_ªmŸe_buf_by_dma
(*
mgmt_¨ó
,

63 
outb_addªss
,

64 
off_°
,

65 
i
, 
fd_dma
);

66 
föd_dediˇãd_buf„r
(*
mgmt_¨ó
, 
muid
,

67 
dediˇãd_buf
 *
dbuf
,

68 
choi˚
);

	@lib/ti81xx_ep_lib.c

39 
	~"ti81xx_ï_lib.h
"

40 
	~<°dio.h
>

41 
	~<sys/io˘l.h
>

42 
	~"debug_msg.h
"

49 
°©us
;

58 
	$ti81xx_íabÀ_ö_å™¶©i⁄
(
fd
)

60 
ti81xx_pcõss_ªgs
 
ªgs
;

61 
ªgs
.
off£t
 = 
CMD_STATUS
;

62 
ªgs
.
mode
 = 
GET_REGS
;

63 i‡(
	`io˘l
(
fd
, 
TI81XX_ACCESS_REGS
, &
ªgs
) < 0) {

64 
	`îr_¥öt
("GET_REGS mode ioctl failed\n");

67 
ªgs
.
vÆue
 =Ñegs.vÆuê| 
ENABLE_IN
;

68 
ªgs
.
mode
 = 
SET_REGS
;

69 i‡(
	`io˘l
(
fd
, 
TI81XX_ACCESS_REGS
, &
ªgs
) < 0) {

70 
	`îr_¥öt
("SET_REGS mode ioctl failed\n");

73 
	`debug_¥öt
("inboundÅranslationÉnabled\n");

75 
	}
}

84 
	$ti81xx_íabÀ_out_å™¶©i⁄
(
fd
)

86 
ti81xx_pcõss_ªgs
 
ªgs
;

87 
ªgs
.
off£t
 = 
CMD_STATUS
;

88 
ªgs
.
mode
 = 
GET_REGS
;

89 i‡(
	`io˘l
(
fd
, 
TI81XX_ACCESS_REGS
, &
ªgs
) < 0) {

90 
	`îr_¥öt
("GET_REGS mode ioctl failed\n");

93 
ªgs
.
vÆue
 =Ñegs.vÆuê| 
ENABLE_OUT
;

94 
ªgs
.
mode
 = 
SET_REGS
;

95 i‡(
	`io˘l
(
fd
, 
TI81XX_ACCESS_REGS
, &
ªgs
) < 0) {

96 
	`îr_¥öt
("SET_REGS mode ioctl failed\n");

99 
	`debug_¥öt
("outboundÅranslationÉnabled\n");

101 
	}
}

111 
	$ti81xx_íabÀ_bus_ma°î
(
fd
)

113 
ti81xx_pcõss_ªgs
 
ªgs
;

114 
ªgs
.
off£t
 = 
LOCAL_CONFIG_OFFSET
 + 
STATUS_COMMAND
;

115 
ªgs
.
mode
 = 
GET_REGS
;

116 i‡(
	`io˘l
(
fd
, 
TI81XX_ACCESS_REGS
, &
ªgs
) < 0) {

117 
	`îr_¥öt
("GET_REGS mode ioctl failed\n");

120 
ªgs
.
vÆue
 =Ñegs.vÆuê| 
ENABLE_MASTER
;

121 
ªgs
.
mode
 = 
SET_REGS
;

122 i‡(
	`io˘l
(
fd
, 
TI81XX_ACCESS_REGS
, &
ªgs
) < 0) {

123 
	`îr_¥öt
("SET_REGS mode ioctl failed\n");

126 
	`debug_¥öt
("bus masterÉnable\n");

128 
	}
}

140 
	$ti81xx_£t_öbound
(
ti81xx_öb_wödow
 *
ö
 , 
fd
)

142 
	`debug_¥öt
("setting up inbound window\n");

143 i‡(
	`io˘l
(
fd
, 
TI81XX_SET_INBOUND
, 
ö
) < 0) {

144 
	`îr_¥öt
("setting in-bound window failed\n");

148 
	}
}

158 
	$ti81xx_£t_outbound_ªgi⁄
(
ti81xx_outb_ªgi⁄
 *
ob
 , 
fd
)

160 
ªt
;

161 
ªt
 = 
	`io˘l
(
fd
, 
TI81XX_SET_OUTBOUND
, 
ob
);

162 i‡(
ªt
 =
ENMEM
)

163 
	`debug_¥öt
("ENMEM --Ço memoryávailable\n");

164 i‡(
ªt
 =
EFAIL
)

165 
	`debug_¥öt
("EFAIL-- someÉrror occurs\n");

166 i‡(
ªt
 =
EINOB
)

167 
	`debug_¥öt
("EINOB -- increase sizeÅo getÅhis"

169 i‡(
ªt
 == 0) {

170 
	`debug_¥öt
("outbound mappingÑequestáccepted\n");

171 
	`io˘l
(
fd
, 
TI81XX_GET_OUTBOUND_STATUS
, &
°©us
);

172 
	`debug_¥öt
("°©u†o‡outboundÑegi⁄†i†0X%x\n", 
°©us
);

174  
ªt
;

175 
	}
}

187 
	$ti81xx_˛ór_outbound_m≠pög
(
ti81xx_outb_ªgi⁄
 *
ob
, 
fd
)

189 
ªt
 = 0;

190 
	`¥ötf
("enter details for clear mapping\n1> hi 32-bitáddress:"

192 
	`sˇnf
("%u %u", &
ob
->
ob_off£t_hi
, &ob->
ob_off£t_idx
);

193 
ªt
 = 
	`io˘l
(
fd
, 
TI81XX_CLR_OUTBOUND_MAP
, 
ob
);

195 
ªt
 = 
	`io˘l
(
fd
, 
TI81XX_GET_OUTBOUND_STATUS
, &
°©us
);

196 
	`debug_¥öt
("°©u†o‡outboundÑegi⁄†is: 0x%x\n", 
°©us
);

197  
ªt
;

198 
	}
}

	@lib/ti81xx_mgmt_lib.c

39 
	~<°dio.h
>

40 
	~<°dlib.h
>

41 
	~<°rög.h
>

42 
	~"ti81xx_mgmt_lib.h
"

43 
	~"debug_msg.h
"

60 
	$ti81xx_£t_mgmt_¨ó
(
ti81xx_mgmt_¨ó
 *
mgmt_¨ó
,

61 *
m≠≥d_buf„r
)

64 *
±r
 = (*)
mgmt_¨ó
;

65 
	`mem˝y
(
m≠≥d_buf„r
 + 2, 
±r
 + 2,

66 
GENERAL_INFO_SIZE
 - 2 * ());

67 
m≠≥d_buf„r
 += 6;

69 
	`mem˝y
(
m≠≥d_buf„r
, 
mgmt_¨ó
->
‰ì_Q
,

70 
	`FREE_Q_SIZE
(
mgmt_¨ó
->
no_blk
));

71 
m≠≥d_buf„r
 +
mgmt_¨ó
->
no_blk
;

72 
	`mem˝y
(
m≠≥d_buf„r
, 
mgmt_¨ó
->
U£d_Q
,

73 
	`USED_Q_SIZE
(
mgmt_¨ó
->
no_blk
));

74 
m≠≥d_buf„r
 +
mgmt_¨ó
->
no_blk
;

75 
	`mem˝y
(
m≠≥d_buf„r
, 
mgmt_¨ó
->
mgmt_blk
,

76 
	`MGMT_BLKS_SIZE
(
mgmt_¨ó
->
no_blk
));

78 
	}
}

94 
	$ti81xx_gë_mgmt_¨ó
(
ti81xx_mgmt_¨ó
 *
mgmt_¨ó
,

95 *
m≠≥d_buf„r
)

97 
	`mem˝y
(
mgmt_¨ó
, 
m≠≥d_buf„r
, 
GENERAL_INFO_SIZE
);

98 
m≠≥d_buf„r
 += 6;

99 
	`mem˝y
(
mgmt_¨ó
->
‰ì_Q
, 
m≠≥d_buf„r
,

100 
	`FREE_Q_SIZE
(
mgmt_¨ó
->
no_blk
));

101 
m≠≥d_buf„r
 +
mgmt_¨ó
->
no_blk
;

102 
	`mem˝y
(
mgmt_¨ó
->
U£d_Q
, 
m≠≥d_buf„r
,

103 
	`USED_Q_SIZE
(
mgmt_¨ó
->
no_blk
));

104 
m≠≥d_buf„r
 +
mgmt_¨ó
->
no_blk
;

105 
	`mem˝y
(
mgmt_¨ó
->
mgmt_blk
, 
m≠≥d_buf„r
,

106 
	`MGMT_BLKS_SIZE
(
mgmt_¨ó
->
no_blk
));

108 
	}
}

121 
	$ti81xx_¥ï¨e_mgmt_öfo
(
ti81xx_mgmt_¨ó
 *
mgmt_¨ó
, 
size_buf„r
)

123 
i
;

130 
mgmt_¨ó
->
no_blk
 = 
MAX_BLOCKS
;

131 
mgmt_¨ó
->
size
 = 
	`MGMT_BLKS_SIZE
(mgmt_¨ó->
no_blk
);

132 
mgmt_¨ó
->
size
 +
GENERAL_INFO_SIZE
;

133 
mgmt_¨ó
->
size
 +2 * 
	`FREE_Q_SIZE
(mgmt_¨ó->
no_blk
);

134 
mgmt_¨ó
->
off£t
 = 
GENERAL_INFO_SIZE
 +

135 2 * 
	`FREE_Q_SIZE
(
mgmt_¨ó
->
no_blk
);

136 
mgmt_¨ó
->
öt_ˇp
 = 0;

138 
	`debug_¥öt
("initializing free/used queues\n");

139 
mgmt_¨ó
->
‰ì_Q
 = 
	`mÆloc
(
	`FREE_Q_SIZE
(mgmt_¨ó->
no_blk
));

140 i‡(
mgmt_¨ó
->
‰ì_Q
 =
NULL
) {

141 
	`îr_¥öt
("FREE-Q-- malloc failed\n");

145 
i
 = 0; i < (
mgmt_¨ó
->
no_blk
); i++)

146 (
mgmt_¨ó
->
‰ì_Q
)[
i
] = 0;

148 
mgmt_¨ó
->
U£d_Q
 = 
	`mÆloc
(
	`USED_Q_SIZE
(mgmt_¨ó->
no_blk
));

149 i‡(
mgmt_¨ó
->
U£d_Q
 =
NULL
) {

150 
	`îr_¥öt
("Used-Q-- malloc failed\n");

151 
	`‰ì
(
mgmt_¨ó
->
‰ì_Q
);

155 
i
 = 0; i < (
mgmt_¨ó
->
no_blk
); i++)

156 (
mgmt_¨ó
->
U£d_Q
)[
i
] = 0;

158 
	`debug_¥öt
("initializing management blocks\n");

159 
mgmt_¨ó
->
mgmt_blk
 = 
	`mÆloc
(
	`MGMT_BLKS_SIZE
(mgmt_¨ó->
no_blk
));

160 i‡(
mgmt_¨ó
->
mgmt_blk
 =
NULL
) {

161 
	`îr_¥öt
("Mgmt-blk-- malloc failed\n");

162 
	`‰ì
(
mgmt_¨ó
->
U£d_Q
);

163 
	`‰ì
(
mgmt_¨ó
->
‰ì_Q
);

171 
i
 = 0; i < (
mgmt_¨ó
->
no_blk
); i++) {

172 ((
mgmt_¨ó
->
mgmt_blk
)[
i
]).
buf_±r
 = 0;

173 ((
mgmt_¨ó
->
mgmt_blk
)[
i
]).
rd_idx
 = 0;

174 ((
mgmt_¨ó
->
mgmt_blk
)[
i
]).
wr_idx
 = 0;

175 ((
mgmt_¨ó
->
mgmt_blk
)[
i
]).
°©us
 = 0;

176 ((
mgmt_¨ó
->
mgmt_blk
)[
i
]).
size
 = 
size_buf„r
;

179 
	}
}

192 
	$ti81xx_ˇlcuœã_±r
(
ti81xx_mgmt_¨ó
 *
mgmt_¨ó
,

193 *
m≠≥d_buf„r
, 
ti81xx_±rs
 *
±r
)

195 
±r
->
off£t_‰ì
 = (*)(
m≠≥d_buf„r
 +

196 
mgmt_¨ó
->
off£t
 -

197 2 * 
	`FREE_Q_SIZE
(
mgmt_¨ó
->
no_blk
));

198 
±r
->
off£t_u£d
 = (*)(
m≠≥d_buf„r
 + 
mgmt_¨ó
->
off£t
 -

199 
	`FREE_Q_SIZE
(
mgmt_¨ó
->
no_blk
));

200 
±r
->
off£t_°©us
 = (*)(
mgmt_¨ó
->
off£t
 +

202 
m≠≥d_buf„r
);

203 
±r
->
off£t_wr_idx
 = (*)(
mgmt_¨ó
->
off£t
 +

205 
m≠≥d_buf„r
);

206 
±r
->
off£t_rd_idx
 = (*)(
mgmt_¨ó
->
off£t
 +

208 
m≠≥d_buf„r
);

209 
±r
->
off£t_size
 = (*)(
mgmt_¨ó
->
off£t
 +

211 
m≠≥d_buf„r
);

213 
	}
}

228 
	$ti81xx_ac˚ss_‰ì_Q
(*
vÆue
, 
blk_no
,

229 
mode
, 
ti81xx_±rs
 *
±r
)

231 i‡(
mode
 =
SET
)

232 (
±r
->
off£t_‰ì
)[
blk_no
] = *
vÆue
;

233 i‡(
mode
 =
GET
)

234 *
vÆue
 = (
±r
->
off£t_‰ì
)[
blk_no
];

236 
	}
}

250 
	$ti81xx_ac˚ss_u£d_Q
(*
vÆue
, 
blk_no
,

251 
mode
, 
ti81xx_±rs
 *
±r
)

253 i‡(
mode
 =
SET
)

254 (
±r
->
off£t_u£d
)[
blk_no
] = *
vÆue
;

255 i‡(
mode
 =
GET
)

256 *
vÆue
 = (
±r
->
off£t_u£d
)[
blk_no
];

258 
	}
}

274 
	$ti81xx_ac˚ss_°©us
(*
vÆue
, 
blk_no
,

275 
mode
, 
ti81xx_±rs
 *
±r
)

277 i‡(
mode
 =
SET
)

278 (
±r
->
off£t_°©us
)[
blk_no
 * 5] = *
vÆue
;

279 i‡(
mode
 =
GET
)

280 *
vÆue
 = (
±r
->
off£t_°©us
)[
blk_no
 * 5];

283 
	}
}

298 
	$ti81xx_ac˚ss_wr_idx
(*
vÆue
, 
blk_no
,

299 
mode
, 
ti81xx_±rs
 *
±r
)

301 i‡(
mode
 =
SET
)

302 (
±r
->
off£t_wr_idx
)[
blk_no
 * 5] = *
vÆue
;

303 i‡(
mode
 =
GET
)

304 *
vÆue
 = (
±r
->
off£t_wr_idx
)[
blk_no
 * 5];

307 
	}
}

323 
	$ti81xx_ac˚ss_rd_idx
(*
vÆue
, 
blk_no
,

324 
mode
, 
ti81xx_±rs
 *
±r
)

327 i‡(
mode
 =
SET
)

328 (
±r
->
off£t_rd_idx
)[
blk_no
 * 5] = *
vÆue
;

329 i‡(
mode
 =
GET
)

330 *
vÆue
 = (
±r
->
off£t_rd_idx
)[
blk_no
 * 5];

332 
	}
}

344 
	$dediˇã_buf„r
(*
mgmt_¨ó
, 
muid
,

345 
no_blk
, 
buf_no
,

346 
choi˚
)

348 i‡(
buf_no
 >
no_blk
) {

349 
	`îr_¥öt
("buf„∏%uÇŸÑeside†⁄ m™agemíà¨ó\n", 
buf_no
);

353 
mgmt_¨ó
[6 + 2 * 
no_blk
 + 
buf_no
 * 5 + 3] = 
muid
;

355 
mgmt_¨ó
[6 + 
no_blk
 + 
buf_no
] = 
choi˚
;

356 
	`debug_¥öt
("buffer %u is dedicated with %u[5-RD/6-WR] USED_Q status "

357 "tÿrmà≥î havög uniquêid %u\n", 
buf_no
,

358 
mgmt_¨ó
[6 + 
no_blk
 + 
buf_no
], 
muid
);

360 
	}
}

363 #ifde‡
INTEGRITY


371 
	$dump_d©a_ö_fûe
(*
buf
, 
buf_Àn
, 
FILE
 *
Â
)

373 
ªt
 = 0;

374 
ªt
 = 
	`fwrôe
(
buf
, 
buf_Àn
, 1, 
Â
);

375 i‡(
ªt
 == 0) {

376 
	`îr_¥öt
("failedÅo dump data in file\n");

379 
	`debug_¥öt
("%d byã†¨êdum≥d i¡ÿfûe\n", 
buf_Àn
);

381 
	}
}

390 
	$£t_d©a_to_buf„r
(*
buf
, 
buf_Àn
, 
FILE
 *
Â
)

392 
ªt
 = 0;

393 
ªt
 = 
	`‰ód
(
buf
, 
buf_Àn
, 1, 
Â
);

394 i‡(
ªt
 < 0) {

395 
	`debug_¥öt
("error in fread dataÇot set in buffer\n");

398 
	`debug_¥öt
("%d byã†¨êdum≥d i¡ÿbuf„∏‰om fûe\n", 
buf_Àn
);

400 
	}
}

410 
	$¸óã_øndom_∑âîn
(
Àn
, 
ª≥©
, 
FILE
 *
Â
)

412 
i
;

413 
j
 = 1;

414 
∑âîn
 = 65;

415 
i
 = 0; i < 
Àn
; i++, 
j
++) {

416 
	`Âutc
(
∑âîn
, 
Â
);

417 i‡(
j
 < 
ª≥©
)

418 
∑âîn
++;

420 
∑âîn
 = 65;

421 
j
 = 0;

424 
	`f£ek
(
Â
, 0, 
SEEK_SET
);

426 
	}
}

434 
	$check_öãgrôy
(
FILE
 *
Â1
, FILE *
Â2
)

436 
fûe_Àngth1
, 
fûe_Àngth2
;

437 
ch2
, 
ch1
;

438 
	`f£ek
(
Â1
, 0, 
SEEK_SET
);

439 
	`f£ek
(
Â2
, 0, 
SEEK_SET
);

440 
	`f£ek
(
Â1
, 0, 
SEEK_END
);

441 
fûe_Àngth1
 = 
	`·ñl
(
Â1
);

442 
	`f£ek
(
Â1
, 0, 
SEEK_SET
);

443 
	`f£ek
(
Â2
, 0, 
SEEK_END
);

444 
fûe_Àngth2
 = 
	`·ñl
(
Â2
);

445 
	`f£ek
(
Â2
, 0, 
SEEK_SET
);

447 i‡(
fûe_Àngth1
 !
fûe_Àngth2
) {

448 
	`îr_¥öt
("data corrupted ,file original %u bytesánd file "

450 
fûe_Àngth1
, 
fûe_Àngth2
);

453 
	`debug_¥öt
("Àngth o‡ª˚ived fûêi†%d\n", 
fûe_Àngth1
);

454 --
fûe_Àngth1
 >= 0) {

455 
ch2
 = 
	`fgëc
(
Â2
);

456 
ch1
 = 
	`fgëc
(
Â1
);

457 i‡(
ch1
 =
ch2
)

460 
	`îr_¥öt
("dataÖattern corrupted inÑecived fileát "

462 ()
	`·ñl
(
Â2
), 
ch2
);

466 
	`debug_¥öt
("fileÑecevied successfully\n");

468 
	}
}

472 #ifde‡
THPT


476 
	$dump_d©a_ö_fûe_n
(*
buf
, 
buf_Àn
, *
«me
)

478 
ªt
 = 0;

479 
FILE
 *
Â£c
;

480 
Â£c
 = 
	`f›í
(
«me
, "w+");

481 i‡(
Â£c
 =
NULL
) {

482 
	`îr_¥öt
("failedÅo dumpÜast chunk in file\n");

485 
ªt
 = 
	`fwrôe
(
buf
, 
buf_Àn
, 1, 
Â£c
);

486 i‡(
ªt
 == 0) {

487 
	`îr_¥öt
("fwriteÉrror occur\n");

490 
	`debug_¥öt
("œ° chunk o‡%d byã†¨êdum≥d i¡ÿfûe\n", 
buf_Àn
);

492 
	}
}

515 
	$ti81xx_pﬁl_f‹_d©a
(
ti81xx_±rs
 *
±r
,

516 
ti81xx_mgmt_¨ó
 *
mgmt_¨ó
,

517 *
m≠≥d_buf„r
, 
FILE
 *
Â
,

518 *
byã_ªcv
)

521 
off£t
 = 
mgmt_¨ó
->offset + ();

522 *
rd_idx
;

523 *
wr_idx
;

524 
vÆue
 = 0;

525 *
u£d_Q
 = (*)
m≠≥d_buf„r
;

526 
i
 = 
vÆue
;

527 #ifde‡
DISPLAY


528 
j
;

530 
Æign
 = (
mgmt_¨ó
->
size
Ë% 
PAGE_SIZE_EP
;

531 
off£t_buf„r
 = 
mgmt_¨ó
->
size
 + 
PAGE_SIZE_EP
 - 
Æign
;

532 
u£d_Q
 +((
mgmt_¨ó
->
no_blk
) + 6);

537 
i
 = 0; i < 
mgmt_¨ó
->
no_blk
; i++) {

538 
rd_idx
 = (*)(
m≠≥d_buf„r
 + 
off£t
);

539 
wr_idx
 = 
rd_idx
 + 1;

541 #i‚de‡
THPT


542 
	`debug_¥öt
("wr_idx %u wr_idx_ptr 0x%xÑd_IDX %uÑd_idx_ptr "

544 *
wr_idx
, ()wr_idx,

545 *
rd_idx
, ()rd_idx,

546 
u£d_Q
[
i
]);

548 i‡((*
wr_idx
 - *
rd_idx
Ë&& (
u£d_Q
[
i
] =
RD
)) {

550 #i‚de‡
THPT


551 
	`debug_¥öt
("there is data in buffer %uÑd_idx=%u "

552 "wr_idx=%u\n", 
i
, *
rd_idx
, *
wr_idx
);

555 #ifde‡
DISPLAY


557 
j
 = 0; j < (*
wr_idx
 - *
rd_idx
); j++) {

558 i‡((
j
 + 1) % 30 == 0)

559 
	`¥ötf
("\n");

561 
	`¥ötf
("%c", *(*)(
m≠≥d_buf„r
 +

562 
off£t_buf„r
 + 
j
));

564 
	`¥ötf
("\n");

568 #i‡
	`deföed
(
INTEGRITY
Ë|| deföed(
THPT
)

569 *
byã_ªcv
 +(*
wr_idx
 - *
rd_idx
);

572 #ifde‡
INTEGRITY


573 
	`dump_d©a_ö_fûe
(
m≠≥d_buf„r
 + 
off£t_buf„r
,

574 (*
wr_idx
 - *
rd_idx
), 
Â
);

575 
	`mem£t
(
m≠≥d_buf„r
 + 
off£t_buf„r
, 0,

576 (*
wr_idx
 - *
rd_idx
));

581 #ifde‡
THPT


582 #ifde‡
CONFIG_WISCOM_COMPARE


583 
i
,
j
;

584 *
p
 = (*)(
m≠≥d_buf„r
 + 
off£t_buf„r
);

585 
j
 = (*
wr_idx
 - *
rd_idx
)>>2;

586 
i
 = 0; i< 
j
; i++){

587 if–*
p
 != 0x4e4e4e4e ){

588 
	`¥ötf
("Eº‹:Recv d©®Er‹∏%d [78].\n",*
p
);

589 
	`¥ötf
("******stop!!!****,any key Continue.\n");

590 
	`gëch¨
();

592 *
p
 = 0;

593 
p
 ++;

597 i‡(*
byã_ªcv
 =
THPT_DATA_SIZE
)

598 
	`dump_d©a_ö_fûe_n
(
m≠≥d_buf„r
 +

599 
off£t_buf„r
,

600 (*
wr_idx
 - *
rd_idx
),

604 *
wr_idx
 = 0;

606 #i‚de‡
THPT


607 
	`debug_¥öt
("wr_index has been updatedÅo zero\n");

610 #i‚de‡
INTEGRITY


611 #i‚de‡
THPT


613 
	`ti81xx_ac˚ss_u£d_Q
(&
vÆue
, 
i
, 
SET
, 
±r
);

614 
	`debug_¥öt
("bufferÑemove from used Q\n");

616 
	`ti81xx_ac˚ss_‰ì_Q
(&
vÆue
, 
i
, 
SET
, 
±r
);

617 
	`debug_¥öt
("buffer update in free Q\n");

627 #i‚de‡
THPT


628 #i‚de‡
INTEGRITY


629 i‡((*
wr_idx
 =*
rd_idx
Ë&& (
u£d_Q
[
i
] =
WR
)) {

630 
	`debug_¥öt
("data has beenÑead byÖeer , "

631 "ªcy˛êthi†%d buf„r\n", 
i
);

633 
	`ti81xx_ac˚ss_u£d_Q
(&
vÆue
, 
i
, 
SET
, 
±r
);

635 
	`ti81xx_ac˚ss_‰ì_Q
(&
vÆue
, 
i
, 
SET
, 
±r
);

637 
	`ti81xx_ac˚ss_wr_idx
(&
vÆue
, 
i
, 
SET
, 
±r
);

639 
	`ti81xx_ac˚ss_rd_idx
(&
vÆue
, 
i
, 
SET
, 
±r
);

650 
off£t
 +(
ti81xx_mgmt_blk
);

651 
off£t_buf„r
 +*(
wr_idx
 + 2);

654 
	}
}

	@lib/ti81xx_pci_info.c

1 
	~"ti81xx_pci_öfo.h
"

2 
	~"ti81xx_mgmt_lib.h
"

3 
	~"ti81xx_å™s.h
"

11 
	$add_node_ö_li°
(
pci_sys_öfo
 *
pci_öfo
, pci_sys_öfÿ**
°¨t
)

13 i‡(
°¨t
 =
NULL
) {

14 *
°¨t
 = 
pci_öfo
;

16 
pci_öfo
->
√xt
 = *
°¨t
;

17 *
°¨t
 = 
pci_öfo
;

20 
	}
}

25 
	$‰ì_li°
(
pci_sys_öfo
 *
°¨t
)

27  ; 
°¨t
 !
NULL
; sèπ = sèπ->
√xt
)

28 
	`‰ì
(
°¨t
);

30 
	}
}

40 
	$add_ªsour˚_ö_li°
(
FILE
 *
‰
, 
pci_sys_öfo
 **
°¨t
)

42 
ªsour˚_°rög
[6][100];

43 *
p
;

44 
i
 = 0;

45 
pci_sys_öfo
 *
pci_öfo
 = 
	`mÆloc
((pci_sys_info));

46 i‡(
pci_öfo
 =
NULL
) {

47 
	`îr_¥öt
("memoryállocation forÑesource"

51 
i
 = 0; i <= 5; i++) {

52 i‡(
	`fgës
(
ªsour˚_°rög
[
i
], 100, 
‰
Ë=
NULL
) {

53 
	`îr_¥öt
("notÉnough info in sysfs\n");

54 
	`‰ì
(
pci_öfo
);

57 
ªsour˚_°rög
[
i
][37] = 0;

58 
p
 = 
	`°rchr
(
ªsour˚_°rög
[
i
], 32);

59 
p
[0] = 0;

60 
pci_öfo
->
ªs_vÆue
[
i
 + 1][0] =

61 
	`°πoul
(
ªsour˚_°rög
[
i
], 
NULL
, 16);

62 
pci_öfo
->
ªs_vÆue
[
i
 + 1][1] =

63 
	`°πoul
(
p
 + 1, 
NULL
, 16) -

64 
pci_öfo
->
ªs_vÆue
[
i
 + 1][0] + 1;

65 i‡(
	`°πoul
(
ªsour˚_°rög
[
i
], 
NULL
, 16) == 0 &&

66 
	`°πoul
(
p
 + 1, 
NULL
, 16) == 0) {

67 
pci_öfo
->
ªs_vÆue
[
i
 + 1][1] = 0;

70 
pci_öfo
->
√xt
 = 
NULL
;

71 
	`add_node_ö_li°
(
pci_öfo
, 
°¨t
);

73 
	}
}

82 
	$„tch_my_unique_id
(*
mgmt_¨ó
, 
pci_sys_öfo
 *
node
)

84 
node
->
ªs_vÆue
[0][0] = 
mgmt_¨ó
[1];

85 
node
->
ªs_vÆue
[0][1] = 2;

87 
	}
}

95 
	$¥öt_li°
(
pci_sys_öfo
 *
°¨t
)

97 
pci_sys_öfo
 *
tmp
 = 
°¨t
;

98 
i
;

99 
tmp
 = 
°¨t
;Åm∞!
NULL
;Åm∞tmp->
√xt
) {

100 
	`debug_¥öt
("unique id is --%u BAR mapping is %u\n",

101 
tmp
->
ªs_vÆue
[0][0],Åmp->res_value[0][1]);

102 
i
 = 1; i <= 6; i++)

103 
	`debug_¥öt
("baráddress is %x bar size is %x\n",

104 
tmp
->
ªs_vÆue
[
i
][0],Åmp->res_value[i][1]);

107 
	}
}

117 
	$dump_öfo_⁄_ï
(
pci_sys_öfo
 *
°¨t
, *
mgmt_¨ó
,

118 
ïs
, 
°¨èddr
)

120 *
ãmp
 = (*)
mgmt_¨ó
;

121 *
ödex
;

122 
size_mgmt
 = 0;

124 
ACCESS_MGMT
:

125 i‡(
	`ac˚ss_mgmt_¨ó
(
mgmt_¨ó
, 1) == 0) {

127 
size_mgmt
 = 
mgmt_¨ó
[4];

128 
	`debug_¥öt
("size of managementárea onÑmt EP is %u\n",

129 
size_mgmt
);

130 *((*Ë(
ãmp
 + 
size_mgmt
 + ())) =

131 
°¨èddr
;

132 *((*Ë(
ãmp
 + 
size_mgmt
)) =

133 
ïs
;

134 
size_mgmt
 += 2 * ();

135 
ödex
 = 
ãmp
 + 
size_mgmt
;

136 ; 
°¨t
 !
NULL
; sèπ = sèπ->
√xt
) {

137 
	`mem˝y
(
ödex
, 
ãmp
,

138 (
pci_sys_öfo
) - (*));

139 
ödex
 +(
pci_sys_öfo
) - (*);

140 
size_mgmt
 +=

141 (
pci_sys_öfo
) - (*);

143 
mgmt_¨ó
[4] = 
size_mgmt
 ;

144 
	`debug_¥öt
("size of managementárea is updatedÅo %u\n",

145 
mgmt_¨ó
[4]);

146 
	`ªÀa£_mgmt_¨ó
(
mgmt_¨ó
);

148 
ACCESS_MGMT
;

150 
	}
}

158 
	$gë_devi˚s
(
pci_sys_öfo
 **
°¨t
)

160 
fûe_víd‹
[50] = {0};

161 
fûe_devi˚
[50] = {0};

162 
fûe_ªsour˚
[50] = {0};

163 
fûe_˛ass
[50] = {0};

164 
li°_devi˚s
[25];

165 
cmd
[50] = "ls /sys/bus/pci/devices > ";

166 
fûe_med
[14];

167 
t›_dú
[25] = "/sys/bus/pci/devices/";

168 
víd‹_id
[7];

169 
devi˚_id
[7];

170 
˛ass
[11];

171 
ïs
 = 0;

172 
˛ass_code
;

173 
víd‹
;

174 
øndom
;

175 
devi˚
;

176 
FILE
 *
Â
, *
fv
, *
fd
, *
‰
, *
fc
;

178 
øndom
 = 
	`ønd
();

179 
	`•rötf
(
li°_devi˚s
, "%x%c%c%s", 
øndom
, '0', 'X', ".pcidevlist");

180 
	`°rˇt
(
cmd
, 
li°_devi˚s
);

181 
	`sy°em
(
cmd
);

182 
Â
 = 
	`f›í
(
li°_devi˚s
, "r");

183 i‡(
Â
 =
NULL
)

187 i‡(
	`fgës
(
fûe_med
, 14, 
Â
Ë=
NULL
) {

188 
	`debug_¥öt
("no moreÖci devices in sysfs\n");

189 
	`f˛o£
(
Â
);

190  
ïs
;

192 
fûe_med
[12] = 0;

193 
	`°r˝y
(
fûe_víd‹
, 
t›_dú
);

194 
	`°r˝y
(
fûe_devi˚
, 
t›_dú
);

195 
	`°r˝y
(
fûe_ªsour˚
, 
t›_dú
);

196 
	`°r˝y
(
fûe_˛ass
, 
t›_dú
);

197 
	`°rˇt
(
fûe_víd‹
, 
fûe_med
);

198 
	`°rˇt
(
fûe_víd‹
, 
VENDOR
);

199 
	`debug_¥öt
("víd‹ fûê«mêi†%s\n", 
fûe_víd‹
);

200 
	`°rˇt
(
fûe_devi˚
, 
fûe_med
);

201 
	`°rˇt
(
fûe_devi˚
, 
DEVICE
);

202 
	`debug_¥öt
("devi˚ fûê«mêi†%s\n", 
fûe_devi˚
);

203 
	`°rˇt
(
fûe_ªsour˚
, 
fûe_med
);

204 
	`°rˇt
(
fûe_ªsour˚
, 
RESOURCE
);

205 
	`debug_¥öt
("ªsour˚ fûê«mêi†%s\n", 
fûe_ªsour˚
);

206 
	`°rˇt
(
fûe_˛ass
, 
fûe_med
);

207 
	`°rˇt
(
fûe_˛ass
, 
CLASS
);

208 
	`debug_¥öt
("˛as†fûê«mêi†%s\n", 
fûe_˛ass
);

209 
fv
 = 
	`f›í
(
fûe_víd‹
, "r");

210 i‡(
fv
 =
NULL
) {

211 
	`debug_¥öt
("víd‹ fûê%†›í faû\n", 
fûe_víd‹
);

212 
	`f˛o£
(
Â
);

215 
fd
 = 
	`f›í
(
fûe_devi˚
, "r");

216 i‡(
fd
 =
NULL
) {

217 
	`debug_¥öt
("devi˚ fûê%†›í faû\n", 
fûe_devi˚
);

218 
	`f˛o£
(
fv
);

219 
	`f˛o£
(
Â
);

222 
‰
 = 
	`f›í
(
fûe_ªsour˚
, "r");

223 i‡(
‰
 =
NULL
) {

224 
	`debug_¥öt
("resource file %s open fail\n",

225 
fûe_ªsour˚
);

226 
	`f˛o£
(
fd
);

227 
	`f˛o£
(
fv
);

228 
	`f˛o£
(
Â
);

232 
fc
 = 
	`f›í
(
fûe_˛ass
, "r");

233 i‡(
‰
 =
NULL
) {

234 
	`debug_¥öt
("resource file %s open fail\n",

235 
fûe_˛ass
);

236 
	`f˛o£
(
fd
);

237 
	`f˛o£
(
fv
);

238 
	`f˛o£
(
Â
);

239 
	`f˛o£
(
‰
);

243 
	`fgës
(
víd‹_id
, 7, 
fv
);

244 
	`fgës
(
devi˚_id
, 7, 
fd
);

245 
	`fgës
(
˛ass
, 11, 
fc
);

246 
víd‹
 = 
	`°πoul
(
víd‹_id
, 
NULL
, 16);

247 
devi˚
 = 
	`°πoul
(
devi˚_id
, 
NULL
, 16);

248 
˛ass_code
 = 
	`°πoul
(
˛ass
, 
NULL
, 16);

249 i‡((
víd‹
 =
VENDOR_ID
Ë&& ((
devi˚
 >
DEVICE_ID
))) {

250 i‡((
˛ass_code
 >> 8) == 0x0604)

251 
	`debug_¥öt
("Skùpög RC: fûê%s\n", 
fûe_med
);

253 
ïs
++;

254 
	`debug_¥öt
("\n EP has been found here vendor=0x%X "

255 "devi˚=0x%X\n", 
víd‹
, 
devi˚
);

256 i‡(
	`add_ªsour˚_ö_li°
(
‰
, 
°¨t
) == -1) {

257 
	`debug_¥öt
("resource fetch fail\n");

258 
out
;

262 
	`debug_¥öt
("this file isÇotÑelatedÅo EP : "

263 "fûê%s\n", 
fûe_med
);

265 
	`f˛o£
(
fd
);

266 
	`f˛o£
(
‰
);

267 
	`f˛o£
(
fv
);

268 
	`f˛o£
(
fc
);

271 
out
:

272 
	`f˛o£
(
fd
);

273 
	`f˛o£
(
fv
);

274 
	`f˛o£
(
Â
);

275 
	`f˛o£
(
‰
);

276 
	`f˛o£
(
fc
);

278 
	}
}

288 
	$¥›ag©e_sy°em_öfo
(
pci_sys_öfo
 *
°¨t
, 
fd
,

289 
ïs
, 
°¨èddr
)

291 
b¨2_addr
 = 0;

292 
b¨2_size
 = 0;

293 *
mgmt_¨ó
;

294 
pci_sys_öfo
 *
ãmp
;

296 
ãmp
 = 
°¨t
;Åem∞!
NULL
;Åem∞ãmp->
√xt
) {

298 
b¨2_addr
 = 
ãmp
->
ªs_vÆue
[3][0];

299 
b¨2_size
 = 
ãmp
->
ªs_vÆue
[3][1];

301 
mgmt_¨ó
 = 
	`mm≠
(0, 
b¨2_size
, 
PROT_READ
|
PROT_WRITE
,

302 
MAP_SHARED
, 
fd
, (
off_t
)
b¨2_addr
);

304 i‡((*)-1 =(*Ë
mgmt_¨ó
) {

305 
	`debug_¥öt
("mmap bar2 of EP having ID %u "

306 "Áûed\n", 
ãmp
->
ªs_vÆue
[0][0]);

307 
	`˛o£
(
fd
);

310 
	`„tch_my_unique_id
(
mgmt_¨ó
, 
ãmp
);

311 
	`munm≠
(
mgmt_¨ó
, 
b¨2_size
);

314 
ãmp
 = 
°¨t
;Åem∞!
NULL
 ;Åem∞ãmp->
√xt
) {

316 
b¨2_addr
 = 
ãmp
->
ªs_vÆue
[3][0];

317 
b¨2_size
 = 
ãmp
->
ªs_vÆue
[3][1];

319 
mgmt_¨ó
 = 
	`mm≠
(0, 
b¨2_size
, 
PROT_READ
 | 
PROT_WRITE
,

320 
MAP_SHARED
, 
fd
, (
off_t
Ë
b¨2_addr
);

321 i‡((*)-1 =(*Ë
mgmt_¨ó
) {

322 
	`debug_¥öt
("mmap bar2 of EP having Id %u "

323 "Áûed\n", 
ãmp
->
ªs_vÆue
[0][0]);

324 
	`˛o£
(
fd
);

327 
	`dump_öfo_⁄_ï
(
°¨t
, 
mgmt_¨ó
 , 
ïs
, 
°¨èddr
);

328 
	`munm≠
(
mgmt_¨ó
, 
b¨2_size
);

331 
	}
}

	@lib/ti81xx_trans.c

1 
	~"ti81xx_mgmt_lib.h
"

2 
	~"ti81xx_å™s.h
"

3 
	~<°dio.h
>

4 
	~<°dlib.h
>

5 
	~<sys/io˘l.h
>

6 
	~<°rög.h
>

7 
	~"debug_msg.h
"

20 
	$ac˚ss_mgmt_¨ó
(*
mgmt_¨ó
, 
unique_id
)

22 
id
;

24 
	`debug_¥öt
("reading unique id from managementárea\n");

25 
	`mem˝y
(&
id
, 
mgmt_¨ó
, ());

27 
	`debug_¥öt
("uniquêid fõld i¿mgmà¨ó i†: %u\n", 
id
);

29 i‡(
id
 == 0) {

30 
	`debug_¥öt
("no one isáccessingÅhis ,managementárea, "

32 } i‡(
id
 =
unique_id
) {

33 
	`debug_¥öt
("youálready haveáccessÅo it\n");

36 
	`debug_¥öt
("someoneÉlse isáccessingÅhis managementárea\n");

40 
mgmt_¨ó
[0] = 
unique_id
;

42 i‡(
mgmt_¨ó
[0] =
unique_id
) {

43 
	`debug_¥öt
("access is grantedÅo you\n");

46 
	`debug_¥öt
("some oneÉlse getáccessÅo managementárea\n");

49 
	}
}

53 
ölöe
 
	$ªÀa£_mgmt_¨ó
(*
mgmt_¨ó
)

55 
mgmt_¨ó
[0] = 0;

56 
	`debug_¥öt
("accessÅo managementáreaÑeleased\n");

57 
	}
}

74 
	$gë_‰ì_buf„r
(*
mgmt_¨ó
)

76 
i
;

77 
ti81xx_mgmt_¨ó
 
mgmt_¨ó_öfo
;

78 
	`debug_¥öt
("reading management fields from mgmt_area\n");

79 
	`mem˝y
(&
mgmt_¨ó_öfo
, 
mgmt_¨ó
, 
GENERAL_INFO_SIZE
);

81 
	`debug_¥öt
("unique id field in mgmtárea is: %u\n",

82 
mgmt_¨ó_öfo
.
unique_id
);

83 
	`debug_¥öt
("my unique id field in mgmtárea is: %u\n",

84 
mgmt_¨ó_öfo
.
my_unique_id
);

85 
	`debug_¥öt
("no of block on mgmtárea is: %u\n",

86 
mgmt_¨ó_öfo
.
no_blk
);

87 
	`debug_¥öt
("offset field on mgmtárea is: %u\n",

88 
mgmt_¨ó_öfo
.
off£t
);

89 
	`debug_¥öt
("size of management mgmt_area is: %u\n",

90 
mgmt_¨ó_öfo
.
size
);

91 
	`debug_¥öt
("int capability ofÑemoteÉndÖoint is: %u\n",

92 
mgmt_¨ó_öfo
.
öt_ˇp
);

94 
mgmt_¨ó_öfo
.
‰ì_Q
 =

95 (*Ë
	`mÆloc
(
	`FREE_Q_SIZE
(
mgmt_¨ó_öfo
.
no_blk
));

96 i‡(
mgmt_¨ó_öfo
.
‰ì_Q
 =
NULL
) {

97 
	`îr_¥öt
("free-Q-- malloc failed\n");

101 
	`mem˝y
(
mgmt_¨ó_öfo
.
‰ì_Q
, 
mgmt_¨ó
 + 6,

102 
	`FREE_Q_SIZE
(
mgmt_¨ó_öfo
.
no_blk
));

104 
i
 = 0; i < 
mgmt_¨ó_öfo
.
no_blk
; i++) {

105 i‡(
mgmt_¨ó_öfo
.
‰ì_Q
[
i
] !
INPROCESS
) {

106 
	`debug_¥öt
("buf„∏%d i†‰ì\n", 
i
);

110 
	`‰ì
(
mgmt_¨ó_öfo
.
‰ì_Q
);

112 i‡(
i
 =
mgmt_¨ó_öfo
.
no_blk
) {

113 
	`debug_¥öt
("all buffersáre inÖrocessÅryágain\n");

117 
mgmt_¨ó
[6 + 
i
] = 
INPROCESS
;

118  
i
;

119 
	}
}

131 
	$off£t_to_buf„r
(*
mgmt_¨ó
, 
i
)

134 *
mgmt_blk
;

135 
ti81xx_mgmt_¨ó
 
mgmt_¨ó_öfo
;

136 
off_°
;

137 
j
;

139 
	`mem˝y
(&
mgmt_¨ó_öfo
, 
mgmt_¨ó
, 
GENERAL_INFO_SIZE
);

140 
	`debug_¥öt
("mgmàblock†¨ê%u\n", 
mgmt_¨ó_öfo
.
no_blk
);

142 
mgmt_blk
 = (
mgmt_¨ó
 + 6 + 2 * 
mgmt_¨ó_öfo
.
no_blk
);

144 
mgmt_¨ó_öfo
.
mgmt_blk
 = (
ti81xx_mgmt_blk
 *)

145 
	`mÆloc
(
	`MGMT_BLKS_SIZE
(
mgmt_¨ó_öfo
.
no_blk
));

146 i‡(
mgmt_¨ó_öfo
.
mgmt_blk
 =
NULL
) {

147 
	`îr_¥öt
("mgmt_blk malloc failed\n");

151 
	`mem˝y
(
mgmt_¨ó_öfo
.
mgmt_blk
, mgmt_blk,

152 
	`MGMT_BLKS_SIZE
(
mgmt_¨ó_öfo
.
no_blk
));

154 
off_°
 = 
mgmt_¨ó_öfo
.
size
 + 
PAGE_SIZE_EP
 -

155 (
mgmt_¨ó_öfo
.
size
Ë% 
PAGE_SIZE_EP
 ;

157 
j
 = 0 ; j < 
i
; j++)

158 
off_°
 +
mgmt_¨ó_öfo
.
mgmt_blk
[
j
].
size
;

160  
off_°
;

161 
	}
}

175 
	$£nd_to_ªmŸe_buf_by_˝u
(*
mgmt_¨ó
,

176 
off_°
, 
i
)

178 
no_blk
 = 
mgmt_¨ó
[2];

179 *
buf
 = (*)
mgmt_¨ó
;

183 
	`mem£t
(
buf
 + 
off_°
, 67, 510);

188 
mgmt_¨ó
[6 + 2 * 
no_blk
 + 
i
 * 5 + 2] = 510;

195 
mgmt_¨ó
[6 + 
no_blk
 + 
i
] = 
RD
;

197 
	}
}

209 
	$put_d©a_ö_loˇl_buf„r
(*
mgmt_¨ó
,

210 
off_°
, 
i
)

212 
no_blk
 = 
mgmt_¨ó
[2];

213 *
buf
 = (*)
mgmt_¨ó
;

214 
mgmt_¨ó
[6 + 
i
] = 
INPROCESS
;

218 
	`mem£t
((
buf
 + 
off_°
), 76, 510);

222 
mgmt_¨ó
[6 + 2 * 
no_blk
 + 
i
 * 5 + 2] = 510;

226 
mgmt_¨ó
[6 + 
no_blk
 + 
i
] = 
WR
;

228 
	}
}

238 
	$ªad_‰om_ªmŸe_buf_by_˝u
(*
mgmt_¨ó
, 
off_°
)

241 #ifde‡
DISPLAY


242 
i
 = 0;

243 
i
 = 0; i < 510; i++) {

244 i‡((
i
 + 1) % 30 == 0)

245 
	`¥ötf
("\n");

247 
	`¥ötf
("%c", 
mgmt_¨ó
[
off_°
 + 
i
]);

249 
	`¥ötf
("\n");

253 
	}
}

266 
	$ªad_‰om_ªmŸe_buf_by_dma
(
outb_addªss
,

267 
off_°
, 
fd_dma
)

269 
dma_öfo
 
öfo
;

270 
ªt
;

271 #ifde‡
DISPLAY


272 
i
;

274 
öfo
.
size
 = 510;

275 
öfo
.
u£r_buf
 = 
	`mÆloc
(510);

276 i‡(
öfo
.
u£r_buf
 =
NULL
) {

277 
	`debug_¥öt
("user buffer malloc failed for DMA\n");

281 
	`mem£t
(
öfo
.
u£r_buf
, 0, 510);

282 
öfo
.
de°
 = 0;

283 
öfo
.
§c
 = (*)(
outb_addªss
 + 
off_°
);

284 
ªt
 = 
	`io˘l
(
fd_dma
, 
TI81XX_EDMA_READ
, &
öfo
);

285 i‡(
ªt
 < 0) {

286 
	`îr_¥öt
("edma ioctl failed\n");

287 
	`‰ì
(
öfo
.
u£r_buf
);

291 #ifde‡
DISPLAY


292 
i
 = 0; i < 510; i++) {

293 i‡((
i
 + 1) % 30 == 0)

294 
	`¥ötf
("\n");

296 
	`¥ötf
("%c", 
öfo
.
u£r_buf
[
i
]);

298 
	`¥ötf
("\n");

300 
	`‰ì
(
öfo
.
u£r_buf
);

302 
	}
}

321 
	$¥o˚ss_ªmŸe_buf„r_f‹_d©a
(*
mgmt_¨ó
,

322 
choi˚
, 
fd_dma
)

324 
ti81xx_mgmt_¨ó
 
mgmt_¨ó_öfo
;

326 
rd_idx
, 
wr_idx
, 
off£t_buf„r
;

327 
i
;

329 
	`mem˝y
(&
mgmt_¨ó_öfo
, 
mgmt_¨ó
, 
GENERAL_INFO_SIZE
);

331 
mgmt_¨ó_öfo
.
U£d_Q
 =

332 (*)
	`mÆloc
(
	`USED_Q_SIZE
(
mgmt_¨ó_öfo
.
no_blk
));

334 i‡(
mgmt_¨ó_öfo
.
U£d_Q
 =
NULL
) {

335 
	`îr_¥öt
("Used-Q-- malloc failed\n");

339 
mgmt_¨ó_öfo
.
mgmt_blk
 = (
ti81xx_mgmt_blk
 *)

340 
	`mÆloc
(
	`MGMT_BLKS_SIZE
(
mgmt_¨ó_öfo
.
no_blk
));

341 i‡(
mgmt_¨ó_öfo
.
mgmt_blk
 =
NULL
) {

342 
	`îr_¥öt
("MGMT-BLK-- malloc failed\n");

343 
	`‰ì
(
mgmt_¨ó_öfo
.
U£d_Q
);

348 
	`mem˝y
(
mgmt_¨ó_öfo
.
U£d_Q
,

349 
mgmt_¨ó
 + 6 + 
mgmt_¨ó_öfo
.
no_blk
,

350 
	`USED_Q_SIZE
(
mgmt_¨ó_öfo
.
no_blk
));

351 
	`mem˝y
(
mgmt_¨ó_öfo
.
mgmt_blk
,

352 
mgmt_¨ó
 + 6 + 2 * 
mgmt_¨ó_öfo
.
no_blk
,

353 
	`MGMT_BLKS_SIZE
(
mgmt_¨ó_öfo
.
no_blk
));

355 
	`debug_¥öt
("goimgÅhroughÑd_idxánd wr_idx of buffers\n");

357 
i
 = 0; i < 
mgmt_¨ó_öfo
.
no_blk
 ; i++) {

358 
rd_idx
 = 
mgmt_¨ó_öfo
.
mgmt_blk
[
i
].rd_idx;

359 
wr_idx
 = 
mgmt_¨ó_öfo
.
mgmt_blk
[
i
].wr_idx;

361 i‡((
mgmt_¨ó_öfo
.
U£d_Q
[
i
] =
WR
Ë&& (
wr_idx
 !
rd_idx
)) {

362 
	`debug_¥öt
("buffer %d onÑemoteÖeer have "

363 "%u byãs\n", 
i
, 
wr_idx
-
rd_idx
);

364 
off£t_buf„r
 = 
	`off£t_to_buf„r
(
mgmt_¨ó
, 
i
);

365 i‡(
choi˚
 =
EDMA
) {

366 
	`debug_¥öt
("choice is EDMA offset is 0x%x\n",

367 
off£t_buf„r
);

368 
	`ªad_‰om_ªmŸe_buf_by_dma
(0x20000000,

369 
off£t_buf„r
, 
fd_dma
);

371 
	`debug_¥öt
("updateÑd_idx ofÑemote buf\n");

372 
mgmt_¨ó
[6 +

373 2 * 
mgmt_¨ó_öfo
.
no_blk
 +

374 
i
 * 5 + 1] = 510;

376 } i‡(
choi˚
 =
CPU
) {

377 
	`ªad_‰om_ªmŸe_buf_by_˝u
((*)
mgmt_¨ó
,

378 
off£t_buf„r
);

379 
	`debug_¥öt
("update wr_idx ofÑemote buf\n");

380 
mgmt_¨ó
[6 +

381 2 * 
mgmt_¨ó_öfo
.
no_blk
 +

382 
i
 * 5 + 1] = 510;

389 
	`‰ì
(
mgmt_¨ó_öfo
.
mgmt_blk
);

390 
	`‰ì
(
mgmt_¨ó_öfo
.
U£d_Q
);

392 
	}
}

414 
	$£nd_to_ªmŸe_buf_by_dma
(*
mgmt_¨ó
,

415 
outb_addªss
, 
off_°
, 
i
, 
fd_dma
)

417 
no_blk
 = 
mgmt_¨ó
[2];

418 
dma_öfo
 
öfo
;

419 
ªt
;

420 
öfo
.
size
 = 510;

421 
öfo
.
u£r_buf
 = (*)
	`mÆloc
(510);

422 i‡(
öfo
.
u£r_buf
 =
NULL
) {

423 
	`îr_¥öt
("user buffer malloc failed for DMA\n");

432 
	`mem£t
(
öfo
.
u£r_buf
, 68, 510);

433 
öfo
.
de°
 = (*)(
outb_addªss
 + 
off_°
);

434 
öfo
.
§c
 = 0;

435 
ªt
 = 
	`io˘l
(
fd_dma
, 
TI81XX_EDMA_WRITE
, &
öfo
);

437 i‡(
ªt
 < 0) {

438 
	`îr_¥öt
("edma ioctl failed\n");

439 
	`‰ì
(
öfo
.
u£r_buf
);

447 
mgmt_¨ó
[6 + 2 * 
no_blk
 + 
i
 * 5 + 2] = 510;

453 
mgmt_¨ó
[6 + 
no_blk
 + 
i
] = 
RD
;

454 
	`‰ì
(
öfo
.
u£r_buf
);

456 
	}
}

470 
	$föd_dediˇãd_buf„r
(*
mgmt_¨ó
, 
muid
,

471 
dediˇãd_buf
 *
dbuf
, 
choi˚
)

473 *
≤å
;

474 
off£t
 = 0;

475 
i
 = 0;

476 
j
;

477 
ti81xx_mgmt_¨ó
 
mgmt_¨ó_öfo
;

478 
	`mem˝y
(&
mgmt_¨ó_öfo
, 
mgmt_¨ó
, 
GENERAL_INFO_SIZE
);

479 
	`debug_¥öt
("mgmàblock†¨ê%u\n", 
mgmt_¨ó_öfo
.
no_blk
);

480 
≤å
 = (
mgmt_¨ó
 + 6 + 2 * 
mgmt_¨ó_öfo
.
no_blk
);

482 
mgmt_¨ó_öfo
.
mgmt_blk
 = (
ti81xx_mgmt_blk
 *)

483 
	`mÆloc
(
	`MGMT_BLKS_SIZE
(
mgmt_¨ó_öfo
.
no_blk
));

484 i‡(
mgmt_¨ó_öfo
.
mgmt_blk
 =
NULL
) {

485 
	`îr_¥öt
("mgmt_blk malloc failed\n");

491 
	`mem˝y
(
mgmt_¨ó_öfo
.
mgmt_blk
, 
≤å
,

492 
	`MGMT_BLKS_SIZE
(
mgmt_¨ó_öfo
.
no_blk
));

493 
≤å
 = (
mgmt_¨ó
 + 6 + 
mgmt_¨ó_öfo
.
no_blk
);

495 
mgmt_¨ó_öfo
.
U£d_Q
 = (*)

496 
	`mÆloc
(
	`USED_Q_SIZE
(
mgmt_¨ó_öfo
.
no_blk
));

498 i‡(
mgmt_¨ó_öfo
.
U£d_Q
 =
NULL
) {

499 
	`îr_¥öt
("used Q malloc failed\n");

500 
	`‰ì
(
mgmt_¨ó_öfo
.
mgmt_blk
);

504 
	`mem˝y
(
mgmt_¨ó_öfo
.
U£d_Q
, 
≤å
, 
	`USED_Q_SIZE
(mgmt_¨ó_öfo.
no_blk
));

505 
	`debug_¥öt
("searching for buffer having used_Q status %u [5-RD/6-WR] "

506 "™d dediˇãd f‹Öì∏havög id %u\n", 
choi˚
, 
muid
);

507 
j
 = 0; j < 
mgmt_¨ó_öfo
.
no_blk
; j++) {

509 
	`debug_¥öt
("status of %d buffer %u\n",

510 
j
, 
mgmt_¨ó_öfo
.
U£d_Q
[j]);

512 i‡(
mgmt_¨ó_öfo
.
mgmt_blk
[
j
].
°©us
 =
muid
) {

513 i‡(
mgmt_¨ó_öfo
.
U£d_Q
[
j
] =
choi˚
) {

514 
	`debug_¥öt
("buffer %d is dedicated forÖeer "

517 
j
, 
muid
, 
choi˚
);

518 
dbuf
->
wr_±r
 = 
mgmt_¨ó
 +

519 6 + 2 * 
mgmt_¨ó_öfo
.
no_blk
 +

520 
j
 * 5 + 2;

521 
dbuf
->
rd_±r
 = 
mgmt_¨ó
 +

522 6 + 2 * 
mgmt_¨ó_öfo
.
no_blk
 +

523 
j
 * 5 + 1;

529 i‡(
j
 =
mgmt_¨ó_öfo
.
no_blk
) {

530 
	`debug_¥öt
("no buffer with used_Q status %u [5-RD/6-WR]is "

532 
choi˚
, 
muid
);

533 
	`‰ì
(
mgmt_¨ó_öfo
.
mgmt_blk
);

534 
	`‰ì
(
mgmt_¨ó_öfo
.
U£d_Q
);

538 
off£t
 = 
mgmt_¨ó_öfo
.
size
 + 
PAGE_SIZE_EP
 -

539 (
mgmt_¨ó_öfo
.
size
Ë% 
PAGE_SIZE_EP
 ;

541 
i
 = 0 ; i < 
j
; i++)

542 
off£t
 +
mgmt_¨ó_öfo
.
mgmt_blk
[
i
].
size
;

544 
dbuf
->
off_°
 = 
off£t
;

545 
	`‰ì
(
mgmt_¨ó_öfo
.
mgmt_blk
);

546 
	`‰ì
(
mgmt_¨ó_öfo
.
U£d_Q
);

548 
	}
}

	@/usr/include/ctype.h

23 #i‚def 
_CTYPE_H


24 
	#_CTYPE_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 
	g__BEGIN_DECLS


31 #i‚de‡
_ISbô


40 
	~<ídün.h
>

41 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


42 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

44 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

49 
	m_ISuµî
 = 
_ISbô
 (0),

50 
	m_ISlowî
 = 
_ISbô
 (1),

51 
	m_ISÆpha
 = 
_ISbô
 (2),

52 
	m_ISdigô
 = 
_ISbô
 (3),

53 
	m_ISxdigô
 = 
_ISbô
 (4),

54 
	m_IS•a˚
 = 
_ISbô
 (5),

55 
	m_IS¥öt
 = 
_ISbô
 (6),

56 
	m_ISgøph
 = 
_ISbô
 (7),

57 
	m_ISbœnk
 = 
_ISbô
 (8),

58 
	m_IS˙ål
 = 
_ISbô
 (9),

59 
	m_ISpun˘
 = 
_ISbô
 (10),

60 
	m_ISÆnum
 = 
_ISbô
 (11)

80 c⁄° **
	$__˘y≥_b_loc
 ()

81 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

82 c⁄° 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

83 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

84 c⁄° 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

85 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

88 #i‚de‡
__˝lu•lus


89 
	#__is˘y≥
(
c
, 
ty≥
) \

90 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 #ñi‡
deföed
 
__USE_EXTERN_INLINES


92 
	#__is˘y≥_f
(
ty≥
) \

93 
__exã∫_ölöe
 \

94 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

96  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

97 
	}

	)
}

100 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

101 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

103 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

105 
__BEGIN_NAMESPACE_STD


111 
__ex˘y≥
 (
iß um
);

112 
__ex˘y≥
 (
ißÕha
);

113 
__ex˘y≥
 (
is˙ål
);

114 
__ex˘y≥
 (
isdigô
);

115 
__ex˘y≥
 (
i¶owî
);

116 
__ex˘y≥
 (
isgøph
);

117 
__ex˘y≥
 (
i•röt
);

118 
__ex˘y≥
 (
i•un˘
);

119 
__ex˘y≥
 (
is•a˚
);

120 
__ex˘y≥
 (
isuµî
);

121 
__ex˘y≥
 (
isxdigô
);

125 
	$tﬁowî
 (
__c
Ë
__THROW
;

128 
	$touµî
 (
__c
Ë
__THROW
;

130 
__END_NAMESPACE_STD


134 #ifdef 
__USE_ISOC99


135 
__BEGIN_NAMESPACE_C99


137 
	`__ex˘y≥
 (
isbœnk
);

139 
__END_NAMESPACE_C99


142 #ifde‡
__USE_GNU


144 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

147 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


151 
	$ißscii
 (
__c
Ë
__THROW
;

155 
	$tﬂscii
 (
__c
Ë
__THROW
;

159 
	`__ex˘y≥
 (
_touµî
);

160 
	`__ex˘y≥
 (
_tﬁowî
);

164 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

165 (
__exãnsi⁄__
 \

166 ({ 
__ªs
; \

167 i‡( (
c
) > 1) \

169 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

171 
__c
 = (
c
); \

172 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

175 
__ªs
 = 
f
 
¨gs
; \

178 
__ªs
 = (
a
)[(Ë(
c
)]; \

179 
__ªs
; 
	}
}))

	)

181 #i‡!
deföed
 
__NO_CTYPE


182 #ifde‡
__is˘y≥_f


183 
	$__is˘y≥_f
 (
Ænum
)

184 
	$__is˘y≥_f
 (
Æpha
)

185 
	$__is˘y≥_f
 (
˙ål
)

186 
	$__is˘y≥_f
 (
digô
)

187 
	$__is˘y≥_f
 (
lowî
)

188 
	$__is˘y≥_f
 (
gøph
)

189 
	$__is˘y≥_f
 (
¥öt
)

190 
	$__is˘y≥_f
 (
pun˘
)

191 
	$__is˘y≥_f
 (
•a˚
)

192 
	$__is˘y≥_f
 (
uµî
)

193 
	$__is˘y≥_f
 (
xdigô
)

194 #ifde‡
__USE_ISOC99


195 
	$__is˘y≥_f
 (
bœnk
)

197 #ñi‡
deföed
 
__is˘y≥


198 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

199 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

200 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

201 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

202 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

203 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

204 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

205 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

206 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

207 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

208 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

209 #ifde‡
__USE_ISOC99


210 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

214 #ifde‡
__USE_EXTERN_INLINES


215 
__exã∫_ölöe
 

216 
	`__NTH
 (
	$tﬁowî
 (
__c
))

218  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

219 
	}
}

221 
__exã∫_ölöe
 

222 
__NTH
 (
	$touµî
 (
__c
))

224  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

225 
	}
}

228 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


229 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

230 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

233 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


234 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

235 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

237 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

238 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

244 #ifde‡
__USE_XOPEN2K8


258 
	~<xloˇÀ.h
>

262 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

263 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

265 
	#__ex˘y≥_l
(
«me
) \

266 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

272 
__ex˘y≥_l
 (
iß um_l
);

273 
__ex˘y≥_l
 (
ißÕha_l
);

274 
__ex˘y≥_l
 (
is˙ål_l
);

275 
__ex˘y≥_l
 (
isdigô_l
);

276 
__ex˘y≥_l
 (
i¶owî_l
);

277 
__ex˘y≥_l
 (
isgøph_l
);

278 
__ex˘y≥_l
 (
i•röt_l
);

279 
__ex˘y≥_l
 (
i•un˘_l
);

280 
__ex˘y≥_l
 (
is•a˚_l
);

281 
__ex˘y≥_l
 (
isuµî_l
);

282 
__ex˘y≥_l
 (
isxdigô_l
);

284 
__ex˘y≥_l
 (
isbœnk_l
);

288 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

289 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

292 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

293 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

295 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


296 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

297 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

298 
	#__touµî_l
(
c
, 
loˇÀ
) \

299 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

300 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

301 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

305 #i‚de‡
__NO_CTYPE


306 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

307 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

308 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

309 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

310 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

311 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

312 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

313 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

314 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

315 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

316 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

318 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

320 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


321 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

322 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

325 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

326 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

327 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

328 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

329 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

330 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

331 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

332 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

333 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

334 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

335 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

337 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

339 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


340 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

341 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

348 
__END_DECLS


	@/usr/include/errno.h

22 #i‚def 
_ERRNO_H


26 #i‚def 
__√ed_Em©h


27 
	#_ERRNO_H
 1

	)

28 
	~<„©uªs.h
>

31 
	g__BEGIN_DECLS


35 
	~<bôs/î∫o.h
>

36 #unde‡
__√ed_Em©h


38 #ifdef 
_ERRNO_H


45 #i‚def 
î∫o


46 
î∫o
;

49 #ifde‡
__USE_GNU


54 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

58 
	g__END_DECLS


66 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


67 #i‚de‡
__îr‹_t_deföed


68 
	tîr‹_t
;

69 
	#__îr‹_t_deföed
 1

	)

71 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

40 #i‚de‡
__mode_t_deföed


41 
__mode_t
 
	tmode_t
;

42 
	#__mode_t_deföed


	)

45 #i‚de‡
__off_t_deföed


46 #i‚de‡
__USE_FILE_OFFSET64


47 
__off_t
 
	toff_t
;

49 
__off64_t
 
	toff_t
;

51 
	#__off_t_deföed


	)

54 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


55 
__off64_t
 
	toff64_t
;

56 
	#__off64_t_deföed


	)

59 #i‚de‡
__pid_t_deföed


60 
__pid_t
 
	tpid_t
;

61 
	#__pid_t_deföed


	)

65 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


66 
	#__√ed_time•ec


	)

67 
	~<time.h
>

68 
	~<bôs/°©.h
>

70 
	#S_IFMT
 
__S_IFMT


	)

71 
	#S_IFDIR
 
__S_IFDIR


	)

72 
	#S_IFCHR
 
__S_IFCHR


	)

73 
	#S_IFBLK
 
__S_IFBLK


	)

74 
	#S_IFREG
 
__S_IFREG


	)

75 #ifde‡
__S_IFIFO


76 
	#S_IFIFO
 
__S_IFIFO


	)

78 #ifde‡
__S_IFLNK


79 
	#S_IFLNK
 
__S_IFLNK


	)

81 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


82 
	#S_IFSOCK
 
__S_IFSOCK


	)

87 
	#S_ISUID
 
__S_ISUID


	)

88 
	#S_ISGID
 
__S_ISGID


	)

90 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


92 
	#S_ISVTX
 
__S_ISVTX


	)

95 
	#S_IRUSR
 
__S_IREAD


	)

96 
	#S_IWUSR
 
__S_IWRITE


	)

97 
	#S_IXUSR
 
__S_IEXEC


	)

99 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

101 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

102 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

103 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

105 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

107 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

108 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

109 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

111 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

114 #ifdef 
__USE_MISC


115 #i‚de‡
R_OK


118 
	#R_OK
 4

	)

119 
	#W_OK
 2

	)

120 
	#X_OK
 1

	)

121 
	#F_OK
 0

	)

126 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


127 
	#SEEK_SET
 0

	)

128 
	#SEEK_CUR
 1

	)

129 
	#SEEK_END
 2

	)

137 
f˙é
 (
__fd
, 
__cmd
, ...);

145 #i‚de‡
__USE_FILE_OFFSET64


146 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

148 #ifde‡
__REDIRECT


149 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

150 
	`__n⁄nuŒ
 ((1));

152 
	#›í
 
›í64


	)

155 #ifde‡
__USE_LARGEFILE64


156 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

159 #ifde‡
__USE_ATFILE


169 #i‚de‡
__USE_FILE_OFFSET64


170 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

171 
	`__n⁄nuŒ
 ((2));

173 #ifde‡
__REDIRECT


174 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

175 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

177 
	#›í©
 
›í©64


	)

180 #ifde‡
__USE_LARGEFILE64


181 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

182 
	`__n⁄nuŒ
 ((2));

191 #i‚de‡
__USE_FILE_OFFSET64


192 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

194 #ifde‡
__REDIRECT


195 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

196 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

198 
	#¸ót
 
¸ót64


	)

201 #ifde‡
__USE_LARGEFILE64


202 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

205 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

206 && !
deföed
 
__USE_POSIX
))

215 
	#F_ULOCK
 0

	)

216 
	#F_LOCK
 1

	)

217 
	#F_TLOCK
 2

	)

218 
	#F_TEST
 3

	)

220 #i‚de‡
__USE_FILE_OFFSET64


221 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

223 #ifde‡
__REDIRECT


224 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

226 
	#lockf
 
lockf64


	)

229 #ifde‡
__USE_LARGEFILE64


230 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

234 #ifde‡
__USE_XOPEN2K


237 #i‚de‡
__USE_FILE_OFFSET64


238 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

239 
__advi£
Ë
__THROW
;

241 #ifde‡
__REDIRECT_NTH


242 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

243 
__off64_t
 
__Àn
, 
__advi£
),

244 
posix_Ádvi£64
);

246 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

249 #ifde‡
__USE_LARGEFILE64


250 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

251 
__advi£
Ë
__THROW
;

259 #i‚de‡
__USE_FILE_OFFSET64


260 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

262 #ifde‡
__REDIRECT


263 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

264 
__off64_t
 
__Àn
),

265 
posix_ÁŒoˇã64
);

267 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

270 #ifde‡
__USE_LARGEFILE64


271 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

277 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

278 && 
deföed
 
__va_¨g_∑ck_Àn


279 
	~<bôs/f˙é2.h
>

282 
__END_DECLS


	@/usr/include/linux/ioctl.h

1 #i‚de‡
_LINUX_IOCTL_H


2 
	#_LINUX_IOCTL_H


	)

4 
	~<asm/io˘l.h
>

	@/usr/include/poll.h

1 
	~<sys/pﬁl.h
>

	@/usr/include/pthread.h

18 #i‚de‡
_PTHREAD_H


19 
	#_PTHREAD_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<ídün.h
>

23 
	~<sched.h
>

24 
	~<time.h
>

26 
	~<bôs/±hªadty≥s.h
>

27 
	~<bôs/£tjmp.h
>

28 
	~<bôs/w‹dsize.h
>

34 
	mPTHREAD_CREATE_JOINABLE
,

35 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

36 
	mPTHREAD_CREATE_DETACHED


37 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

44 
	mPTHREAD_MUTEX_TIMED_NP
,

45 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

46 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

47 
	mPTHREAD_MUTEX_ADAPTIVE_NP


48 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


50 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

51 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

52 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

53 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


55 #ifde‡
__USE_GNU


57 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


62 #ifde‡
__USE_XOPEN2K


66 
	mPTHREAD_MUTEX_STALLED
,

67 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

68 
	mPTHREAD_MUTEX_ROBUST
,

69 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


74 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


78 
	mPTHREAD_PRIO_NONE
,

79 
	mPTHREAD_PRIO_INHERIT
,

80 
	mPTHREAD_PRIO_PROTECT


86 #ifde‡
__PTHREAD_MUTEX_HAVE_PREV


87 
	#PTHREAD_MUTEX_INITIALIZER
 \

88 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

89 #ifde‡
__USE_GNU


90 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

91 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

92 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

98 
	#PTHREAD_MUTEX_INITIALIZER
 \

99 { { 0, 0, 0, 0, 0, { 0 } } }

	)

100 #ifde‡
__USE_GNU


101 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

102 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

103 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

112 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


115 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

116 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

117 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

118 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


124 #i‚de‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


125 #i‡
__WORDSIZE
 == 64

126 
	#__PTHREAD_RWLOCK_INT_FLAGS_SHARED
 1

	)

131 
	#PTHREAD_RWLOCK_INITIALIZER
 \

132 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

133 #ifde‡
__USE_GNU


134 #ifde‡
__PTHREAD_RWLOCK_INT_FLAGS_SHARED


135 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

137 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

139 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


140 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

141 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

142 0, 0, 0, 0 } }

	)

144 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

145 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

146 0 } }

	)

156 
	mPTHREAD_INHERIT_SCHED
,

157 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

158 
	mPTHREAD_EXPLICIT_SCHED


159 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

166 
	mPTHREAD_SCOPE_SYSTEM
,

167 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

168 
	mPTHREAD_SCOPE_PROCESS


169 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

176 
	mPTHREAD_PROCESS_PRIVATE
,

177 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

178 
	mPTHREAD_PROCESS_SHARED


179 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

185 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

189 
	s_±hªad_˛ónup_buf„r


191 (*
	m__routöe
) (*);

192 *
	m__¨g
;

193 
	m__ˇn˚…y≥
;

194 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

200 
	mPTHREAD_CANCEL_ENABLE
,

201 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

202 
	mPTHREAD_CANCEL_DISABLE


203 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

207 
	mPTHREAD_CANCEL_DEFERRED
,

208 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

209 
	mPTHREAD_CANCEL_ASYNCHRONOUS


210 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

212 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

216 
	#PTHREAD_ONCE_INIT
 0

	)

219 #ifde‡
__USE_XOPEN2K


223 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

227 
__BEGIN_DECLS


232 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

233 c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

234 *(*
__°¨t_routöe
) (*),

235 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
__n⁄nuŒ
 ((1, 3));

241 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

249 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

251 #ifde‡
__USE_GNU


254 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

262 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

263 c⁄° 
time•ec
 *
__ab°ime
);

270 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

274 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

277 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
)

278 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

286 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

290 
__THROW
 
	`__n⁄nuŒ
 ((1));

293 
	$±hªad_©å_gëdëach°©e
 (c⁄° 
±hªad_©å_t
 *
__©å
,

294 *
__dëach°©e
)

295 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

298 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

299 
__dëach°©e
)

300 
__THROW
 
	`__n⁄nuŒ
 ((1));

304 
	$±hªad_©å_gëgu¨dsize
 (c⁄° 
±hªad_©å_t
 *
__©å
,

305 
size_t
 *
__gu¨dsize
)

306 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

309 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

310 
size_t
 
__gu¨dsize
)

311 
__THROW
 
	`__n⁄nuŒ
 ((1));

315 
	$±hªad_©å_gësched∑øm
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

316 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

317 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

320 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

321 c⁄° 
sched_∑øm
 *
__ª°ri˘


322 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

325 
	$±hªad_©å_gëschedpﬁicy
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


326 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

327 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

330 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

331 
__THROW
 
	`__n⁄nuŒ
 ((1));

334 
	$±hªad_©å_gëöhîôsched
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


335 
__©å
, *
__ª°ri˘
 
__öhîô
)

336 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

339 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

340 
__öhîô
)

341 
__THROW
 
	`__n⁄nuŒ
 ((1));

345 
	$±hªad_©å_gësc›e
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

346 *
__ª°ri˘
 
__sc›e
)

347 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

350 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

351 
__THROW
 
	`__n⁄nuŒ
 ((1));

354 
	$±hªad_©å_gë°ackaddr
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


355 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

356 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

362 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

363 *
__°ackaddr
)

364 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

367 
	$±hªad_©å_gë°acksize
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘


368 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

374 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

375 
size_t
 
__°acksize
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1));

378 #ifde‡
__USE_XOPEN2K


380 
	$±hªad_©å_gë°ack
 (c⁄° 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

381 **
__ª°ri˘
 
__°ackaddr
,

382 
size_t
 *
__ª°ri˘
 
__°acksize
)

383 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

388 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

389 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

392 #ifde‡
__USE_GNU


395 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

396 
size_t
 
__˝u£tsize
,

397 c⁄° 
˝u_£t_t
 *
__˝u£t
)

398 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

402 
	$±hªad_©å_gëafföôy_≈
 (c⁄° 
±hªad_©å_t
 *
__©å
,

403 
size_t
 
__˝u£tsize
,

404 
˝u_£t_t
 *
__˝u£t
)

405 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

411 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

412 
__THROW
 
	`__n⁄nuŒ
 ((2));

420 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

421 c⁄° 
sched_∑øm
 *
__∑øm
)

422 
__THROW
 
	`__n⁄nuŒ
 ((3));

425 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

426 *
__ª°ri˘
 
__pﬁicy
,

427 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

428 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

431 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

432 
__THROW
;

435 #ifde‡
__USE_GNU


437 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

438 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

442 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, c⁄° *
__«me
)

443 
__THROW
 
	`__n⁄nuŒ
 ((2));

447 #ifde‡
__USE_UNIX98


449 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

452 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

455 #ifde‡
__USE_GNU


460 
	$±hªad_yõld
 (Ë
__THROW
;

465 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

466 c⁄° 
˝u_£t_t
 *
__˝u£t
)

467 
__THROW
 
	`__n⁄nuŒ
 ((3));

470 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

471 
˝u_£t_t
 *
__˝u£t
)

472 
__THROW
 
	`__n⁄nuŒ
 ((3));

485 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

486 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

497 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

501 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

504 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

509 
	`±hªad_ã°ˇn˚l
 ();

518 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

519 
__mask_was_ßved
;

520 } 
__ˇn˚l_jmp_buf
[1];

521 *
__∑d
[4];

522 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

525 #i‚de‡
__˛ónup_f˘_©åibuã


526 
	#__˛ónup_f˘_©åibuã


	)

531 
	s__±hªad_˛ónup_‰ame


533 (*
__ˇn˚l_routöe
) (*);

534 *
__ˇn˚l_¨g
;

535 
__do_ô
;

536 
__ˇn˚l_ty≥
;

539 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


540 #ifde‡
__˝lu•lus


542 ˛as†
	c__±hªad_˛ónup_˛ass


544 (*
__ˇn˚l_routöe
) (*);

545 *
__ˇn˚l_¨g
;

546 
__do_ô
;

547 
__ˇn˚l_ty≥
;

549 
public
:

550 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

551 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

552 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

553 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

554 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

555 &
__ˇn˚l_ty≥
); 
	}
}

556 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

566 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

568 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

572 
	#±hªad_˛ónup_p›
(
execuã
) \

573 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

574 } 0)

	)

576 #ifde‡
__USE_GNU


580 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

582 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

583 
__˛‰ame
.
	`__de„r
 ()

	)

588 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

589 
__˛‰ame
.
	`__ª°‹e
 (); \

590 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

591 } 0)

	)

598 
__exã∫_ölöe
 

599 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

601 i‡(
__‰ame
->
__do_ô
)

602 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

603 
	}
}

612 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

614 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

615 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

616 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

617 .
__do_ô
 = 1 };

	)

621 
	#±hªad_˛ónup_p›
(
execuã
) \

622 
__˛‰ame
.
__do_ô
 = (
execuã
); \

623 } 0)

	)

625 #ifde‡
__USE_GNU


629 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

631 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

632 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

633 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

634 .
__do_ô
 = 1 }; \

635 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

636 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

641 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

642 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

643 
__˛‰ame
.
__do_ô
 = (
execuã
); \

644 } 0)

	)

655 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

657 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

658 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

659 *
__ˇn˚l_¨g
 = (
¨g
); \

660 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

661 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

662 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

664 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

665 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

669 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

670 dÿ{

	)

671 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

672 
__˛ónup_f˘_©åibuã
;

676 
	#±hªad_˛ónup_p›
(
execuã
) \

679 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

680 i‡(
execuã
) \

681 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

682 } 0)

	)

683 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

684 
__˛ónup_f˘_©åibuã
;

686 #ifde‡
__USE_GNU


690 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

692 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

693 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

694 *
__ˇn˚l_¨g
 = (
¨g
); \

695 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

696 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

697 i‡(
	`__glibc_u∆ikñy
 (
__nŸ_fú°_ˇŒ
)) \

699 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

700 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

704 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

705 dÿ{

	)

706 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

707 
__˛ónup_f˘_©åibuã
;

712 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

715 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

716 i‡(
execuã
) \

717 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

718 
	}
} 0)

	)

719 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

720 
__˛ónup_f˘_©åibuã
;

724 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

725 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

726 #i‚de‡
SHARED


727 
	`__©åibuã__
 ((
__wók__
))

733 
__jmp_buf_èg
;

734 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROWNL
;

740 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

741 c⁄° 
±hªad_muãx©å_t
 *
__muãx©å
)

742 
__THROW
 
	`__n⁄nuŒ
 ((1));

745 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

746 
__THROW
 
	`__n⁄nuŒ
 ((1));

749 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

750 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

753 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

754 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

756 #ifde‡
__USE_XOPEN2K


758 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

759 c⁄° 
time•ec
 *
__ª°ri˘


760 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

764 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

765 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

769 
	$±hªad_muãx_gë¥io˚ûög
 (c⁄° 
±hªad_muãx_t
 *

770 
__ª°ri˘
 
__muãx
,

771 *
__ª°ri˘
 
__¥io˚ûög
)

772 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

776 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

777 
__¥io˚ûög
,

778 *
__ª°ri˘
 
__ﬁd_˚ûög
)

779 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

782 #ifde‡
__USE_XOPEN2K8


784 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

785 
__THROW
 
	`__n⁄nuŒ
 ((1));

786 #ifde‡
__USE_GNU


787 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

788 
__THROW
 
	`__n⁄nuŒ
 ((1));

797 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

798 
__THROW
 
	`__n⁄nuŒ
 ((1));

801 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

802 
__THROW
 
	`__n⁄nuŒ
 ((1));

805 
	$±hªad_muãx©å_gëpsh¨ed
 (c⁄° 
±hªad_muãx©å_t
 *

806 
__ª°ri˘
 
__©å
,

807 *
__ª°ri˘
 
__psh¨ed
)

808 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

811 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

812 
__psh¨ed
)

813 
__THROW
 
	`__n⁄nuŒ
 ((1));

815 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


817 
	$±hªad_muãx©å_gëty≥
 (c⁄° 
±hªad_muãx©å_t
 *
__ª°ri˘


818 
__©å
, *
__ª°ri˘
 
__köd
)

819 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

824 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

825 
__THROW
 
	`__n⁄nuŒ
 ((1));

829 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (c⁄° 
±hªad_muãx©å_t
 *

830 
__ª°ri˘
 
__©å
,

831 *
__ª°ri˘
 
__¥Ÿocﬁ
)

832 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

836 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

837 
__¥Ÿocﬁ
)

838 
__THROW
 
	`__n⁄nuŒ
 ((1));

841 
	$±hªad_muãx©å_gë¥io˚ûög
 (c⁄° 
±hªad_muãx©å_t
 *

842 
__ª°ri˘
 
__©å
,

843 *
__ª°ri˘
 
__¥io˚ûög
)

844 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

847 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

848 
__¥io˚ûög
)

849 
__THROW
 
	`__n⁄nuŒ
 ((1));

851 #ifde‡
__USE_XOPEN2K


853 
	$±hªad_muãx©å_gërobu°
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

854 *
__robu°√ss
)

855 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 #ifde‡
__USE_GNU


857 
	$±hªad_muãx©å_gërobu°_≈
 (c⁄° 
±hªad_muãx©å_t
 *
__©å
,

858 *
__robu°√ss
)

859 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

863 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

864 
__robu°√ss
)

865 
__THROW
 
	`__n⁄nuŒ
 ((1));

866 #ifde‡
__USE_GNU


867 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

868 
__robu°√ss
)

869 
__THROW
 
	`__n⁄nuŒ
 ((1));

874 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


879 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

880 c⁄° 
±hªad_rwlock©å_t
 *
__ª°ri˘


881 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

884 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

885 
__THROW
 
	`__n⁄nuŒ
 ((1));

888 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

889 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

892 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

893 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

895 #ifde‡
__USE_XOPEN2K


897 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

898 c⁄° 
time•ec
 *
__ª°ri˘


899 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

903 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

904 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

907 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

908 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

910 #ifde‡
__USE_XOPEN2K


912 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

913 c⁄° 
time•ec
 *
__ª°ri˘


914 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

918 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

919 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

925 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

926 
__THROW
 
	`__n⁄nuŒ
 ((1));

929 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

930 
__THROW
 
	`__n⁄nuŒ
 ((1));

933 
	$±hªad_rwlock©å_gëpsh¨ed
 (c⁄° 
±hªad_rwlock©å_t
 *

934 
__ª°ri˘
 
__©å
,

935 *
__ª°ri˘
 
__psh¨ed
)

936 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

939 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

940 
__psh¨ed
)

941 
__THROW
 
	`__n⁄nuŒ
 ((1));

944 
	$±hªad_rwlock©å_gëköd_≈
 (c⁄° 
±hªad_rwlock©å_t
 *

945 
__ª°ri˘
 
__©å
,

946 *
__ª°ri˘
 
__¥ef
)

947 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

950 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

951 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

959 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

960 c⁄° 
±hªad_c⁄d©å_t
 *
__ª°ri˘
 
__c⁄d_©å
)

961 
__THROW
 
	`__n⁄nuŒ
 ((1));

964 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

965 
__THROW
 
	`__n⁄nuŒ
 ((1));

968 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

969 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

972 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

973 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

980 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

981 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

982 
	`__n⁄nuŒ
 ((1, 2));

991 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

992 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

993 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
)

994 
	`__n⁄nuŒ
 ((1, 2, 3));

999 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

1000 
__THROW
 
	`__n⁄nuŒ
 ((1));

1003 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

1004 
__THROW
 
	`__n⁄nuŒ
 ((1));

1007 
	$±hªad_c⁄d©å_gëpsh¨ed
 (c⁄° 
±hªad_c⁄d©å_t
 *

1008 
__ª°ri˘
 
__©å
,

1009 *
__ª°ri˘
 
__psh¨ed
)

1010 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1013 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1014 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1016 #ifde‡
__USE_XOPEN2K


1018 
	$±hªad_c⁄d©å_gë˛ock
 (c⁄° 
±hªad_c⁄d©å_t
 *

1019 
__ª°ri˘
 
__©å
,

1020 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1021 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1024 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1025 
__˛ockid_t
 
__˛ock_id
)

1026 
__THROW
 
	`__n⁄nuŒ
 ((1));

1030 #ifde‡
__USE_XOPEN2K


1035 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1036 
__THROW
 
	`__n⁄nuŒ
 ((1));

1039 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1040 
__THROW
 
	`__n⁄nuŒ
 ((1));

1043 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1044 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1047 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1048 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1051 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1052 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1059 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1060 c⁄° 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1061 
__©å
, 
__cou¡
)

1062 
__THROW
 
	`__n⁄nuŒ
 ((1));

1065 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1066 
__THROW
 
	`__n⁄nuŒ
 ((1));

1069 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1070 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1074 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1075 
__THROW
 
	`__n⁄nuŒ
 ((1));

1078 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1079 
__THROW
 
	`__n⁄nuŒ
 ((1));

1082 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (c⁄° 
±hªad_b¨rõøâr_t
 *

1083 
__ª°ri˘
 
__©å
,

1084 *
__ª°ri˘
 
__psh¨ed
)

1085 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1088 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1089 
__psh¨ed
)

1090 
__THROW
 
	`__n⁄nuŒ
 ((1));

1102 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1103 (*
__de°r_fun˘i⁄
) (*))

1104 
__THROW
 
	`__n⁄nuŒ
 ((1));

1107 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1110 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1113 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1114 c⁄° *
__poöãr
Ë
__THROW
 ;

1117 #ifde‡
__USE_XOPEN2K


1119 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1120 
__˛ockid_t
 *
__˛ock_id
)

1121 
__THROW
 
	`__n⁄nuŒ
 ((2));

1136 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1137 (*
__∑ª¡
) (),

1138 (*
__chûd
Ë()Ë
__THROW
;

1141 #ifde‡
__USE_EXTERN_INLINES


1143 
__exã∫_ölöe
 

1144 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1146  
__thªad1
 =
__thªad2
;

1147 
	}
}

1150 
	g__END_DECLS


	@/usr/include/semaphore.h

18 #i‚de‡
_SEMAPHORE_H


19 
	#_SEMAPHORE_H
 1

	)

21 
	~<„©uªs.h
>

22 
	~<sys/ty≥s.h
>

23 #ifde‡
__USE_XOPEN2K


24 
	#__√ed_time•ec


	)

25 
	~<time.h
>

29 
	~<bôs/£m≠h‹e.h
>

32 
__BEGIN_DECLS


36 
	$£m_öô
 (
£m_t
 *
__£m
, 
__psh¨ed
, 
__vÆue
)

37 
__THROW
;

39 
	$£m_de°roy
 (
£m_t
 *
__£m
Ë
__THROW
;

42 
£m_t
 *
	$£m_›í
 (c⁄° *
__«me
, 
__oÊag
, ...Ë
__THROW
;

45 
	$£m_˛o£
 (
£m_t
 *
__£m
Ë
__THROW
;

48 
	$£m_u∆ök
 (c⁄° *
__«me
Ë
__THROW
;

54 
	`£m_waô
 (
£m_t
 *
__£m
);

56 #ifde‡
__USE_XOPEN2K


61 
	`£m_timedwaô
 (
£m_t
 *
__ª°ri˘
 
__£m
,

62 c⁄° 
time•ec
 *
__ª°ri˘
 
__ab°ime
);

66 
	$£m_åywaô
 (
£m_t
 *
__£m
Ë
__THROWNL
;

69 
	$£m_po°
 (
£m_t
 *
__£m
Ë
__THROWNL
;

72 
	$£m_gëvÆue
 (
£m_t
 *
__ª°ri˘
 
__£m
, *__ª°ri˘ 
__svÆ
)

73 
__THROW
;

76 
__END_DECLS


	@/usr/include/signal.h

22 #i‚def 
_SIGNAL_H


24 #i‡!
deföed
 
__√ed_sig_©omic_t
 && !deföed 
__√ed_sig£t_t


25 
	#_SIGNAL_H


	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	~<bôs/sig£t.h
>

36 #i‡
deföed
 
__√ed_sig_©omic_t
 || deföed 
_SIGNAL_H


37 #i‚de‡
__sig_©omic_t_deföed


38 
	#__sig_©omic_t_deföed


	)

39 
__BEGIN_NAMESPACE_STD


40 
__sig_©omic_t
 
	tsig_©omic_t
;

41 
	g__END_NAMESPACE_STD


43 #unde‡
__√ed_sig_©omic_t


46 #i‡
deföed
 
__√ed_sig£t_t
 || (deföed 
_SIGNAL_H
 && deföed 
__USE_POSIX
)

47 #i‚de‡
__sig£t_t_deföed


48 
	#__sig£t_t_deföed


	)

49 
__sig£t_t
 
	tsig£t_t
;

51 #unde‡
__√ed_sig£t_t


54 #ifde‡
_SIGNAL_H


56 
	~<bôs/ty≥s.h
>

57 
	~<bôs/signum.h
>

59 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


60 #i‚de‡
__pid_t_deföed


61 
__pid_t
 
	tpid_t
;

62 
	#__pid_t_deföed


	)

64 #ifde‡
__USE_XOPEN


66 #i‚de‡
__uid_t_deföed


67 
__uid_t
 
	tuid_t
;

68 
	#__uid_t_deföed


	)

72 #ifde‡
__USE_POSIX199309


74 
	#__√ed_time•ec


	)

75 
	~<time.h
>

78 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


80 
	~<bôs/sigöfo.h
>

85 (*
	t__sigh™dÀr_t
) ();

90 
__sigh™dÀr_t
 
	$__sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

91 
__THROW
;

92 #ifde‡
__USE_GNU


93 
__sigh™dÀr_t
 
	$sysv_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

94 
__THROW
;

100 
__BEGIN_NAMESPACE_STD


101 #ifde‡
__USE_BSD


102 
__sigh™dÀr_t
 
	$sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

103 
__THROW
;

106 #ifde‡
__REDIRECT_NTH


107 
__sigh™dÀr_t
 
	`__REDIRECT_NTH
 (
sig«l
,

108 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
),

109 
__sysv_sig«l
);

111 
	#sig«l
 
__sysv_sig«l


	)

114 
__END_NAMESPACE_STD


116 #ifde‡
__USE_XOPEN


119 
__sigh™dÀr_t
 
	$bsd_sig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

120 
__THROW
;

126 #ifde‡
__USE_POSIX


127 
	$kûl
 (
__pid_t
 
__pid
, 
__sig
Ë
__THROW
;

130 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


134 
	$kûÕg
 (
__pid_t
 
__pgΩ
, 
__sig
Ë
__THROW
;

137 
__BEGIN_NAMESPACE_STD


139 
	$øi£
 (
__sig
Ë
__THROW
;

140 
__END_NAMESPACE_STD


142 #ifde‡
__USE_SVID


144 
__sigh™dÀr_t
 
	$ssig«l
 (
__sig
, 
__sigh™dÀr_t
 
__h™dÀr
)

145 
__THROW
;

146 
	$gsig«l
 (
__sig
Ë
__THROW
;

149 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K


151 
	`psig«l
 (
__sig
, c⁄° *
__s
);

154 #ifde‡
__USE_XOPEN2K


156 
	`psigöfo
 (c⁄° 
sigöfo_t
 *
__pöfo
, c⁄° *
__s
);

169 
	`__sig∑u£
 (
__sig_‹_mask
, 
__is_sig
);

171 #ifde‡
__FAVOR_BSD


174 
	$sig∑u£
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

176 #ifde‡
__USE_XOPEN


177 #ifde‡
__GNUC__


178 
	$sig∑u£
 (
__sig
Ë
	`__asm__
 ("__xpg_sigpause");

181 
	#sig∑u£
(
sig
Ë
	`__sig∑u£
 ((sig), 1)

	)

187 #ifde‡
__USE_BSD


194 
	#sigmask
(
sig
Ë
	`__sigmask
(sig)

	)

197 
	$sigblock
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

200 
	$sig£tmask
 (
__mask
Ë
__THROW
 
__©åibuã_dïªˇãd__
;

203 
	$siggëmask
 (Ë
__THROW
 
__©åibuã_dïªˇãd__
;

207 #ifde‡
__USE_MISC


208 
	#NSIG
 
_NSIG


	)

211 #ifde‡
__USE_GNU


212 
__sigh™dÀr_t
 
	tsigh™dÀr_t
;

216 #ifde‡
__USE_BSD


217 
__sigh™dÀr_t
 
	tsig_t
;

220 #ifde‡
__USE_POSIX


223 
	$sigem±y£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

226 
	$sigfûl£t
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

229 
	$sigadd£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

232 
	$sigdñ£t
 (
sig£t_t
 *
__£t
, 
__signo
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

235 
	$sigismembî
 (c⁄° 
sig£t_t
 *
__£t
, 
__signo
)

236 
__THROW
 
	`__n⁄nuŒ
 ((1));

238 #ifde‡
__USE_GNU


240 
	$sigi£m±y£t
 (c⁄° 
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

243 
	$sig™d£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

244 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

247 
	$sig‹£t
 (
sig£t_t
 *
__£t
, c⁄° sig£t_à*
__À·
,

248 c⁄° 
sig£t_t
 *
__right
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

253 
	~<bôs/siga˘i⁄.h
>

256 
	$sig¥ocmask
 (
__how
, c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

257 
sig£t_t
 *
__ª°ri˘
 
__o£t
Ë
__THROW
;

264 
	$sigsu•íd
 (c⁄° 
sig£t_t
 *
__£t
Ë
	`__n⁄nuŒ
 ((1));

267 
	$siga˘i⁄
 (
__sig
, c⁄° 
siga˘i⁄
 *
__ª°ri˘
 
__a˘
,

268 
siga˘i⁄
 *
__ª°ri˘
 
__ﬂ˘
Ë
__THROW
;

271 
	$sig≥ndög
 (
sig£t_t
 *
__£t
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

278 
	$sigwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
, *__ª°ri˘ 
__sig
)

279 
	`__n⁄nuŒ
 ((1, 2));

281 #ifde‡
__USE_POSIX199309


286 
	$sigwaôöfo
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

287 
sigöfo_t
 *
__ª°ri˘
 
__öfo
Ë
	`__n⁄nuŒ
 ((1));

294 
	$sigtimedwaô
 (c⁄° 
sig£t_t
 *
__ª°ri˘
 
__£t
,

295 
sigöfo_t
 *
__ª°ri˘
 
__öfo
,

296 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
)

297 
	`__n⁄nuŒ
 ((1));

301 
	$sigqueue
 (
__pid_t
 
__pid
, 
__sig
, c⁄° 
sigvÆ
 
__vÆ
)

302 
__THROW
;

307 #ifde‡
__USE_BSD


311 c⁄° *c⁄° 
_sys_sigli°
[
_NSIG
];

312 c⁄° *c⁄° 
sys_sigli°
[
_NSIG
];

315 
	ssigvec


317 
__sigh™dÀr_t
 
sv_h™dÀr
;

318 
sv_mask
;

320 
sv_Êags
;

321 
	#sv_⁄°ack
 
sv_Êags


	)

325 
	#SV_ONSTACK
 (1 << 0)

	)

326 
	#SV_INTERRUPT
 (1 << 1)

	)

327 
	#SV_RESETHAND
 (1 << 2)

	)

335 
	$sigvec
 (
__sig
, c⁄° 
sigvec
 *
__vec
,

336 
sigvec
 *
__ovec
Ë
__THROW
;

340 
	~<bôs/sigc⁄ãxt.h
>

343 
	$sigªtu∫
 (
sigc⁄ãxt
 *
__s˝
Ë
__THROW
;

348 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


349 
	#__√ed_size_t


	)

350 
	~<°ddef.h
>

355 
	$sigöãºu±
 (
__sig
, 
__öãºu±
Ë
__THROW
;

357 
	~<bôs/sig°ack.h
>

358 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


360 
	~<sys/uc⁄ãxt.h
>

366 
	$sig°ack
 (
sig°ack
 *
__ss
, sig°ack *
__oss
)

367 
__THROW
 
__©åibuã_dïªˇãd__
;

371 
	$sigÆt°ack
 (c⁄° 
sigÆt°ack
 *
__ª°ri˘
 
__ss
,

372 
sigÆt°ack
 *
__ª°ri˘
 
__oss
Ë
__THROW
;

376 #ifde‡
__USE_XOPEN_EXTENDED


380 
	$sighﬁd
 (
__sig
Ë
__THROW
;

383 
	$sigªl£
 (
__sig
Ë
__THROW
;

386 
	$sigign‹e
 (
__sig
Ë
__THROW
;

389 
__sigh™dÀr_t
 
	$sig£t
 (
__sig
, 
__sigh™dÀr_t
 
__di•
Ë
__THROW
;

392 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


395 
	~<bôs/±hªadty≥s.h
>

396 
	~<bôs/sigthªad.h
>

403 
	$__libc_cuºít_sigπmö
 (Ë
__THROW
;

405 
	$__libc_cuºít_sigπmax
 (Ë
__THROW
;

409 
__END_DECLS


	@/usr/include/stdio.h

23 #i‚de‡
_STDIO_H


25 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


26 
	#_STDIO_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	~<bôs/ty≥s.h
>

36 
	#__√ed_FILE


	)

37 
	#__√ed___FILE


	)

41 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


44 
	g_IO_FILE
;

46 
__BEGIN_NAMESPACE_STD


48 
_IO_FILE
 
	tFILE
;

49 
	g__END_NAMESPACE_STD


50 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

51 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

52 || 
deföed
 
__USE_POSIX2


53 
	$__USING_NAMESPACE_STD
(
FILE
)

56 
	#__FILE_deföed
 1

	)

58 #unde‡
__√ed_FILE


61 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


64 
_IO_FILE
 
	t__FILE
;

66 
	#____FILE_deföed
 1

	)

68 #unde‡
__√ed___FILE


71 #ifdef 
_STDIO_H


72 
	#_STDIO_USES_IOSTREAM


	)

74 
	~<libio.h
>

76 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


77 #ifde‡
__GNUC__


78 #i‚de‡
_VA_LIST_DEFINED


79 
_G_va_li°
 
	tva_li°
;

80 
	#_VA_LIST_DEFINED


	)

83 
	~<°d¨g.h
>

87 #ifde‡
__USE_XOPEN2K8


88 #i‚de‡
__off_t_deföed


89 #i‚de‡
__USE_FILE_OFFSET64


90 
__off_t
 
	toff_t
;

92 
__off64_t
 
	toff_t
;

94 
	#__off_t_deföed


	)

96 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


97 
__off64_t
 
	toff64_t
;

98 
	#__off64_t_deföed


	)

101 #i‚de‡
__ssize_t_deföed


102 
__ssize_t
 
	tssize_t
;

103 
	#__ssize_t_deföed


	)

108 
__BEGIN_NAMESPACE_STD


109 #i‚de‡
__USE_FILE_OFFSET64


110 
_G_Âos_t
 
	tÂos_t
;

112 
_G_Âos64_t
 
	tÂos_t
;

114 
__END_NAMESPACE_STD


115 #ifde‡
__USE_LARGEFILE64


116 
_G_Âos64_t
 
	tÂos64_t
;

120 
	#_IOFBF
 0

	)

121 
	#_IOLBF
 1

	)

122 
	#_IONBF
 2

	)

126 #i‚de‡
BUFSIZ


127 
	#BUFSIZ
 
_IO_BUFSIZ


	)

133 #i‚de‡
EOF


134 
	#EOF
 (-1)

	)

140 
	#SEEK_SET
 0

	)

141 
	#SEEK_CUR
 1

	)

142 
	#SEEK_END
 2

	)

143 #ifde‡
__USE_GNU


144 
	#SEEK_DATA
 3

	)

145 
	#SEEK_HOLE
 4

	)

149 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


151 
	#P_tmpdú
 "/tmp"

	)

164 
	~<bôs/°dio_lim.h
>

168 
_IO_FILE
 *
°dö
;

169 
_IO_FILE
 *
°dout
;

170 
_IO_FILE
 *
°dîr
;

172 
	#°dö
 
°dö


	)

173 
	#°dout
 
°dout


	)

174 
	#°dîr
 
°dîr


	)

176 
__BEGIN_NAMESPACE_STD


178 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

180 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

181 
__END_NAMESPACE_STD


183 #ifde‡
__USE_ATFILE


185 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

186 c⁄° *
__√w
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


194 #i‚de‡
__USE_FILE_OFFSET64


195 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

200 
	#tmpfûe
 
tmpfûe64


	)

204 #ifde‡
__USE_LARGEFILE64


205 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

209 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

210 
__END_NAMESPACE_STD


212 #ifde‡
__USE_MISC


215 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

219 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


227 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

228 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

232 
__BEGIN_NAMESPACE_STD


237 
	`f˛o£
 (
FILE
 *
__°ªam
);

242 
	`fÊush
 (
FILE
 *
__°ªam
);

243 
__END_NAMESPACE_STD


245 #ifde‡
__USE_MISC


252 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

255 #ifde‡
__USE_GNU


262 
	`f˛o£Æl
 ();

266 
__BEGIN_NAMESPACE_STD


267 #i‚de‡
__USE_FILE_OFFSET64


272 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

273 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

278 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

279 c⁄° *
__ª°ri˘
 
__modes
,

280 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

282 #ifde‡
__REDIRECT


283 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

284 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

285 
__wur
;

286 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

287 c⁄° *
__ª°ri˘
 
__modes
,

288 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

289 
__wur
;

291 
	#f›í
 
f›í64


	)

292 
	#‰e›í
 
‰e›í64


	)

295 
__END_NAMESPACE_STD


296 #ifde‡
__USE_LARGEFILE64


297 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

298 c⁄° *
__ª°ri˘
 
__modes
Ë
__wur
;

299 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

300 c⁄° *
__ª°ri˘
 
__modes
,

301 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

304 #ifdef 
__USE_POSIX


306 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW
 
__wur
;

309 #ifdef 
__USE_GNU


312 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

313 c⁄° *
__ª°ri˘
 
__modes
,

314 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

317 #ifde‡
__USE_XOPEN2K8


319 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

320 
__THROW
 
__wur
;

325 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

329 
__BEGIN_NAMESPACE_STD


332 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

336 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

337 
__modes
, 
size_t
 
__n
Ë
__THROW
;

338 
__END_NAMESPACE_STD


340 #ifdef 
__USE_BSD


343 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

344 
size_t
 
__size
Ë
__THROW
;

347 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

351 
__BEGIN_NAMESPACE_STD


356 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

357 c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

362 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

364 
	$•rötf
 (*
__ª°ri˘
 
__s
,

365 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

371 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

372 
_G_va_li°
 
__¨g
);

377 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

379 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

380 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

381 
__END_NAMESPACE_STD


383 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


384 
__BEGIN_NAMESPACE_C99


386 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

387 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

388 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

390 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

391 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

392 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

393 
__END_NAMESPACE_C99


396 #ifde‡
__USE_GNU


399 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

400 
_G_va_li°
 
__¨g
)

401 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

402 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

403 c⁄° *
__ª°ri˘
 
__fmt
, ...)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

405 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

406 c⁄° *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

410 #ifde‡
__USE_XOPEN2K8


412 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

413 
_G_va_li°
 
__¨g
)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

415 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

420 
__BEGIN_NAMESPACE_STD


425 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

426 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

431 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

434 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

436 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

437 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

438 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

439 #ifde‡
__REDIRECT


443 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

444 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

445 
__isoc99_fsˇnf
Ë
__wur
;

446 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_sˇnf
Ë
__wur
;

448 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

449 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

450 
__isoc99_ssˇnf
);

452 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

453 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

454 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc99_fsˇnf


	)

458 
	#sˇnf
 
__isoc99_sˇnf


	)

459 
	#ssˇnf
 
__isoc99_ssˇnf


	)

463 
__END_NAMESPACE_STD


465 #ifdef 
__USE_ISOC99


466 
__BEGIN_NAMESPACE_C99


471 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

472 
_G_va_li°
 
__¨g
)

473 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

479 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

480 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

483 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

484 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

485 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

487 #i‡!
deföed
 
__USE_GNU
 \

488 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

489 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

490 #ifde‡
__REDIRECT


494 
	`__REDIRECT
 (
vfsˇnf
,

495 (
FILE
 *
__ª°ri˘
 
__s
,

496 c⁄° *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

497 
__isoc99_vfsˇnf
)

498 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

499 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

500 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

501 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	`__REDIRECT_NTH
 (
vssˇnf
,

503 (c⁄° *
__ª°ri˘
 
__s
,

504 c⁄° *
__ª°ri˘
 
__f‹m©
,

505 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

506 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

508 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

509 c⁄° *
__ª°ri˘
 
__f‹m©
,

510 
_G_va_li°
 
__¨g
Ë
__wur
;

511 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

514 c⁄° *
__ª°ri˘
 
__f‹m©
,

515 
_G_va_li°
 
__¨g
Ë
__THROW
;

516 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

517 
	#vsˇnf
 
__isoc99_vsˇnf


	)

518 
	#vssˇnf
 
__isoc99_vssˇnf


	)

522 
__END_NAMESPACE_C99


526 
__BEGIN_NAMESPACE_STD


531 
	`fgëc
 (
FILE
 *
__°ªam
);

532 
	`gëc
 (
FILE
 *
__°ªam
);

538 
	`gëch¨
 ();

539 
__END_NAMESPACE_STD


543 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

545 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


550 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

551 
	`gëch¨_u∆ocked
 ();

554 #ifde‡
__USE_MISC


561 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

565 
__BEGIN_NAMESPACE_STD


573 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

574 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

580 
	`putch¨
 (
__c
);

581 
__END_NAMESPACE_STD


585 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

587 #ifde‡
__USE_MISC


594 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

597 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


602 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

603 
	`putch¨_u∆ocked
 (
__c
);

607 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

608 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

610 
	`gëw
 (
FILE
 *
__°ªam
);

613 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

617 
__BEGIN_NAMESPACE_STD


622 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

623 
__wur
;

625 #i‡!
deföed
 
__USE_ISOC11
 \

626 || (
deföed
 
__˝lu•lus
 && __cplusplus <= 201103L)

638 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

640 
__END_NAMESPACE_STD


642 #ifde‡
__USE_GNU


649 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

650 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

654 #ifdef 
__USE_XOPEN2K8


665 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

666 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

667 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

668 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

669 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

670 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

678 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

679 
size_t
 *
__ª°ri˘
 
__n
,

680 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

684 
__BEGIN_NAMESPACE_STD


689 
	`Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

695 
	`puts
 (c⁄° *
__s
);

702 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

709 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

710 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

715 
size_t
 
	`fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

716 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

717 
__END_NAMESPACE_STD


719 #ifde‡
__USE_GNU


726 
	`Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

727 
FILE
 *
__ª°ri˘
 
__°ªam
);

730 #ifde‡
__USE_MISC


737 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

738 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

739 
size_t
 
	`fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, size_à
__size
,

740 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

744 
__BEGIN_NAMESPACE_STD


749 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

754 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

759 
	`ªwöd
 (
FILE
 *
__°ªam
);

760 
__END_NAMESPACE_STD


767 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


768 #i‚de‡
__USE_FILE_OFFSET64


773 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

778 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

780 #ifde‡
__REDIRECT


781 
	`__REDIRECT
 (
f£eko
,

782 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

783 
f£eko64
);

784 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

786 
	#f£eko
 
f£eko64


	)

787 
	#·ñlo
 
·ñlo64


	)

792 
__BEGIN_NAMESPACE_STD


793 #i‚de‡
__USE_FILE_OFFSET64


798 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

803 
	`f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
);

805 #ifde‡
__REDIRECT


806 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

807 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

808 
	`__REDIRECT
 (
f£ços
,

809 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
);

811 
	#fgëpos
 
fgëpos64


	)

812 
	#f£ços
 
f£ços64


	)

815 
__END_NAMESPACE_STD


817 #ifde‡
__USE_LARGEFILE64


818 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

819 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

820 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

821 
	`f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
);

824 
__BEGIN_NAMESPACE_STD


826 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

828 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

831 
__END_NAMESPACE_STD


833 #ifde‡
__USE_MISC


835 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

836 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

837 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

841 
__BEGIN_NAMESPACE_STD


846 
	`≥º‹
 (c⁄° *
__s
);

847 
__END_NAMESPACE_STD


853 
	~<bôs/sys_îæi°.h
>

856 #ifdef 
__USE_POSIX


858 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

861 #ifde‡
__USE_MISC


863 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

867 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

868 
deföed
 
__USE_MISC
)

873 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
Ë
__wur
;

879 
	`p˛o£
 (
FILE
 *
__°ªam
);

883 #ifdef 
__USE_POSIX


885 *
	$˘îmid
 (*
__s
Ë
__THROW
;

889 #ifde‡
__USE_XOPEN


891 *
	`cu£rid
 (*
__s
);

895 #ifdef 
__USE_GNU


896 
ob°ack
;

899 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

900 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

901 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

902 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

903 c⁄° *
__ª°ri˘
 
__f‹m©
,

904 
_G_va_li°
 
__¨gs
)

905 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

909 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


913 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

917 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

920 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

923 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


927 
	#__√ed_gë›t


	)

928 
	~<gë›t.h
>

933 #ifde‡
__USE_EXTERN_INLINES


934 
	~<bôs/°dio.h
>

936 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


937 
	~<bôs/°dio2.h
>

939 #ifde‡
__LDBL_COMPAT


940 
	~<bôs/°dio-ldbl.h
>

943 
__END_DECLS


	@/usr/include/stdlib.h

22 #i‚def 
_STDLIB_H


24 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


29 
	#__√ed_wch¨_t


	)

30 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


37 
	#_STDLIB_H
 1

	)

39 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


41 
	~<bôs/waôÊags.h
>

42 
	~<bôs/waô°©us.h
>

44 #ifde‡
__USE_BSD


49 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


50 
	#__WAIT_INT
(
°©us
) \

51 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

52 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

54 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

62 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


63 
	#__WAIT_STATUS
 *

	)

64 
	#__WAIT_STATUS_DEFN
 *

	)

69 
waô
 *
	m__u±r
;

70 *
	m__ùå
;

71 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

72 
	#__WAIT_STATUS_DEFN
 *

	)

77 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

78 
	#__WAIT_STATUS
 *

	)

79 
	#__WAIT_STATUS_DEFN
 *

	)

84 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

85 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

90 #ifde‡
__WIFCONTINUED


91 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

95 
__BEGIN_NAMESPACE_STD


99 
	mquŸ
;

100 
	mªm
;

101 } 
	tdiv_t
;

104 #i‚de‡
__ldiv_t_deföed


107 
	mquŸ
;

108 
	mªm
;

109 } 
	tldiv_t
;

110 
	#__ldiv_t_deföed
 1

	)

112 
	g__END_NAMESPACE_STD


114 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


115 
__BEGIN_NAMESPACE_C99


117 
__exãnsi⁄__
 struct

119 
	mquŸ
;

120 
	mªm
;

121 } 
	tŒdiv_t
;

122 
	#__Œdiv_t_deföed
 1

	)

123 
	g__END_NAMESPACE_C99


128 
	#RAND_MAX
 2147483647

	)

133 
	#EXIT_FAILURE
 1

	)

134 
	#EXIT_SUCCESS
 0

	)

138 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

139 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

142 
__BEGIN_NAMESPACE_STD


144 
	$©of
 (c⁄° *
__≈å
)

145 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

147 
	$©oi
 (c⁄° *
__≈å
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

150 
	$©ﬁ
 (c⁄° *
__≈å
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

152 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

155 
__BEGIN_NAMESPACE_C99


157 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

158 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

159 
__END_NAMESPACE_C99


162 
__BEGIN_NAMESPACE_STD


164 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

165 **
__ª°ri˘
 
__íd±r
)

166 
__THROW
 
	`__n⁄nuŒ
 ((1));

167 
__END_NAMESPACE_STD


169 #ifdef 
__USE_ISOC99


170 
__BEGIN_NAMESPACE_C99


172 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

173 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

175 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

176 **
__ª°ri˘
 
__íd±r
)

177 
__THROW
 
	`__n⁄nuŒ
 ((1));

178 
__END_NAMESPACE_C99


181 
__BEGIN_NAMESPACE_STD


183 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

184 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

185 
__THROW
 
	`__n⁄nuŒ
 ((1));

187 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

188 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

189 
__THROW
 
	`__n⁄nuŒ
 ((1));

190 
__END_NAMESPACE_STD


192 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


194 
__exãnsi⁄__


195 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

196 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

197 
__THROW
 
	`__n⁄nuŒ
 ((1));

199 
__exãnsi⁄__


200 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

201 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

202 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

206 
__BEGIN_NAMESPACE_C99


208 
__exãnsi⁄__


209 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

210 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

211 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 
__exãnsi⁄__


214 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

215 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1));

217 
__END_NAMESPACE_C99


221 #ifde‡
__USE_GNU


235 
	~<xloˇÀ.h
>

239 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

240 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

241 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

243 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

244 **
__ª°ri˘
 
__íd±r
,

245 
__ba£
, 
__loˇÀ_t
 
__loc
)

246 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

248 
__exãnsi⁄__


249 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

251 
__loˇÀ_t
 
__loc
)

252 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

254 
__exãnsi⁄__


255 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

256 **
__ª°ri˘
 
__íd±r
,

257 
__ba£
, 
__loˇÀ_t
 
__loc
)

258 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

260 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

261 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

262 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

264 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

265 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

266 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

268 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

269 **
__ª°ri˘
 
__íd±r
,

270 
__loˇÀ_t
 
__loc
)

271 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

275 #ifde‡
__USE_EXTERN_INLINES


276 
__BEGIN_NAMESPACE_STD


277 
__exã∫_ölöe
 

278 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

280  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

281 
	}
}

282 
__exã∫_ölöe
 

283 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

285  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

286 
	}
}

287 
	g__END_NAMESPACE_STD


289 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


290 
__BEGIN_NAMESPACE_C99


291 
__exãnsi⁄__
 
__exã∫_ölöe
 

292 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

294  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

295 
	}
}

296 
	g__END_NAMESPACE_C99


301 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


305 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

308 
	$a64l
 (c⁄° *
__s
)

309 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

313 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


314 
	~<sys/ty≥s.h
>

321 
	$øndom
 (Ë
__THROW
;

324 
	$§™dom
 (
__£ed
Ë
__THROW
;

330 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

331 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

335 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

338 #ifde‡
__USE_MISC


343 
	søndom_d©a


345 
öt32_t
 *
Âå
;

346 
öt32_t
 *
Ωå
;

347 
öt32_t
 *
°©e
;

348 
ønd_ty≥
;

349 
ønd_deg
;

350 
ønd_£p
;

351 
öt32_t
 *
íd_±r
;

354 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

355 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

357 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2));

360 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

361 
size_t
 
__°©ñí
,

362 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

363 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

365 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

366 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

367 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

372 
__BEGIN_NAMESPACE_STD


374 
	$ønd
 (Ë
__THROW
;

376 
	$§™d
 (
__£ed
Ë
__THROW
;

377 
__END_NAMESPACE_STD


379 #ifde‡
__USE_POSIX


381 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

385 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


389 
	$dønd48
 (Ë
__THROW
;

390 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

393 
	$Ã™d48
 (Ë
__THROW
;

394 
	$ƒ™d48
 (
__xsubi
[3])

395 
__THROW
 
	`__n⁄nuŒ
 ((1));

398 
	$mønd48
 (Ë
__THROW
;

399 
	$jønd48
 (
__xsubi
[3])

400 
__THROW
 
	`__n⁄nuŒ
 ((1));

403 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

404 *
	$£ed48
 (
__£ed16v
[3])

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

406 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

408 #ifde‡
__USE_MISC


412 
	sdønd48_d©a


414 
__x
[3];

415 
__ﬁd_x
[3];

416 
__c
;

417 
__öô
;

418 
__a
;

422 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

423 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

424 
	$î™d48_r
 (
__xsubi
[3],

425 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

426 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

429 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

430 *
__ª°ri˘
 
__ªsu…
)

431 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

432 
	$ƒ™d48_r
 (
__xsubi
[3],

433 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

434 *
__ª°ri˘
 
__ªsu…
)

435 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

439 *
__ª°ri˘
 
__ªsu…
)

440 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

441 
	$jønd48_r
 (
__xsubi
[3],

442 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

443 *
__ª°ri˘
 
__ªsu…
)

444 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

448 
__THROW
 
	`__n⁄nuŒ
 ((2));

450 
	$£ed48_r
 (
__£ed16v
[3],

451 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$lc⁄g48_r
 (
__∑øm
[7],

454 
dønd48_d©a
 *
__buf„r
)

455 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

461 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


462 
	#__mÆloc_™d_ˇŒoc_deföed


	)

463 
__BEGIN_NAMESPACE_STD


465 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

467 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

468 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

469 
__END_NAMESPACE_STD


472 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


473 
__BEGIN_NAMESPACE_STD


479 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

480 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

482 
	$‰ì
 (*
__±r
Ë
__THROW
;

483 
__END_NAMESPACE_STD


485 #ifdef 
__USE_MISC


487 
	$c‰ì
 (*
__±r
Ë
__THROW
;

490 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


491 
	~<Æloˇ.h
>

494 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

495 || 
deföed
 
__USE_BSD


497 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

500 #ifde‡
__USE_XOPEN2K


502 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

503 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

506 #ifde‡
__USE_ISOC11


508 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
__wur
 
	`__©åibuã__
 ((
__mÆloc__
, 
	`__Æloc_size__
 (2)));

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


522 #ifde‡
__˝lu•lus


523 "C++" 
	`©_quick_exô
 ((*
__func
) ())

524 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

526 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

529 
__END_NAMESPACE_STD


531 #ifdef 
__USE_MISC


534 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

535 
__THROW
 
	`__n⁄nuŒ
 ((1));

538 
__BEGIN_NAMESPACE_STD


542 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

544 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


548 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

550 
__END_NAMESPACE_STD


552 #ifde‡
__USE_ISOC99


553 
__BEGIN_NAMESPACE_C99


556 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

557 
__END_NAMESPACE_C99


561 
__BEGIN_NAMESPACE_STD


563 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

564 
__END_NAMESPACE_STD


566 #ifde‡
__USE_GNU


569 *
	$£cuª_gëív
 (c⁄° *
__«me
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

573 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


577 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

580 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


583 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

584 
__THROW
 
	`__n⁄nuŒ
 ((2));

587 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

590 #ifdef 
__USE_MISC


594 
	$˛óªnv
 (Ë
__THROW
;

598 #i‡
deföed
 
__USE_MISC
 \

599 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

605 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

608 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

609 || 
deföed
 
__USE_XOPEN2K8


618 #i‚de‡
__USE_FILE_OFFSET64


619 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

621 #ifde‡
__REDIRECT


622 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

623 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

625 
	#mk°emp
 
mk°emp64


	)

628 #ifde‡
__USE_LARGEFILE64


629 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

633 #ifde‡
__USE_MISC


640 #i‚de‡
__USE_FILE_OFFSET64


641 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

643 #ifde‡
__REDIRECT


644 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

645 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

647 
	#mk°emps
 
mk°emps64


	)

650 #ifde‡
__USE_LARGEFILE64


651 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

652 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

656 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


662 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

665 #ifde‡
__USE_GNU


672 #i‚de‡
__USE_FILE_OFFSET64


673 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

675 #ifde‡
__REDIRECT


676 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

677 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

679 
	#mko°emp
 
mko°emp64


	)

682 #ifde‡
__USE_LARGEFILE64


683 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

692 #i‚de‡
__USE_FILE_OFFSET64


693 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

694 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

696 #ifde‡
__REDIRECT


697 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

698 
__Êags
), 
mko°emps64
)

699 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

701 
	#mko°emps
 
mko°emps64


	)

704 #ifde‡
__USE_LARGEFILE64


705 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

706 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

711 
__BEGIN_NAMESPACE_STD


716 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

717 
__END_NAMESPACE_STD


720 #ifdef 
__USE_GNU


723 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

724 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

727 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


733 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

734 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

739 #i‚de‡
__COMPAR_FN_T


740 
	#__COMPAR_FN_T


	)

741 (*
	t__com∑r_‚_t
) (const *, const *);

743 #ifdef 
__USE_GNU


744 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

747 #ifde‡
__USE_GNU


748 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

751 
__BEGIN_NAMESPACE_STD


754 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

755 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

756 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

760 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

761 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

762 #ifde‡
__USE_GNU


763 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

764 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

765 
	`__n⁄nuŒ
 ((1, 4));

770 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

771 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
__END_NAMESPACE_STD


774 #ifde‡
__USE_ISOC99


775 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

776 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

780 
__BEGIN_NAMESPACE_STD


784 
div_t
 
	$div
 (
__numî
, 
__díom
)

785 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

786 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

787 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

788 
__END_NAMESPACE_STD


790 #ifde‡
__USE_ISOC99


791 
__BEGIN_NAMESPACE_C99


792 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

793 
__díom
)

794 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

795 
__END_NAMESPACE_C99


799 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

800 || 
deföed
 
__USE_SVID


807 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

808 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

813 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

814 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

819 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

820 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

823 #ifde‡
__USE_MISC


825 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

826 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

827 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

828 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

829 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

830 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

831 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

832 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

837 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

838 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

839 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

840 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

841 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

842 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

844 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

845 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

846 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

847 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

848 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

849 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

850 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

851 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

856 
__BEGIN_NAMESPACE_STD


859 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

862 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

863 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

866 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

870 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

871 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

873 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

874 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

875 
__THROW
;

876 
__END_NAMESPACE_STD


879 #ifde‡
__USE_SVID


884 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

888 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


895 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

896 *c⁄° *
__ª°ri˘
 
__tokís
,

897 **
__ª°ri˘
 
__vÆuï
)

898 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

902 #ifde‡
__USE_XOPEN


904 
	$£tkey
 (c⁄° *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

910 #ifde‡
__USE_XOPEN2KXSI


912 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

915 #ifde‡
__USE_XOPEN


920 
	$gø¡±
 (
__fd
Ë
__THROW
;

924 
	$u∆ock±
 (
__fd
Ë
__THROW
;

929 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

932 #ifde‡
__USE_GNU


936 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

937 
__THROW
 
	`__n⁄nuŒ
 ((2));

940 
	`gë±
 ();

943 #ifde‡
__USE_BSD


947 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

948 
__THROW
 
	`__n⁄nuŒ
 ((1));

951 
	~<bôs/°dlib-Êﬂt.h
>

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


30 
	#__√ed_size_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

35 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

36 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

40 
__BEGIN_NAMESPACE_STD


42 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

46 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

47 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

48 
__END_NAMESPACE_STD


53 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

60 
__BEGIN_NAMESPACE_STD


62 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

65 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

66 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

69 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


72 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

73 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

74 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

75 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 #ifde‡
__OPTIMIZE__


78 
__exã∫_Æways_ölöe
 *

79 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


81  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

84 
__exã∫_Æways_ölöe
 const *

85 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


87  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

90 
	}
}

92 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

93 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

95 
__END_NAMESPACE_STD


97 #ifde‡
__USE_GNU


100 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


101 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

102 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

103 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

104 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

107 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


112 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

113 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

115 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

123 
__BEGIN_NAMESPACE_STD


125 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

126 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

128 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

129 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

130 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

133 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

134 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

137 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

140 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

141 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

147 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

148 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

151 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
 
	`__n⁄nuŒ
 ((2));

153 
__END_NAMESPACE_STD


155 #ifde‡
__USE_XOPEN2K8


159 
	~<xloˇÀ.h
>

162 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

163 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

165 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

166 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

169 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

170 || 
deföed
 
__USE_XOPEN2K8


172 *
	$°rdup
 (c⁄° *
__s
)

173 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

179 #i‡
deföed
 
__USE_XOPEN2K8


180 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

181 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

184 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


186 
	#°rdu∑
(
s
) \

187 (
__exãnsi⁄__
 \

189 c⁄° *
__ﬁd
 = (
s
); \

190 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

191 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

192 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

193 
	}
}))

	)

196 
	#°∫du∑
(
s
, 
n
) \

197 (
__exãnsi⁄__
 \

199 c⁄° *
__ﬁd
 = (
s
); \

200 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

201 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

202 
__√w
[
__Àn
] = '\0'; \

203 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

204 }))

	)

207 
	g__BEGIN_NAMESPACE_STD


209 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


212 *
°rchr
 (*
__s
, 
__c
)

213 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

214 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

215 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 #ifde‡
__OPTIMIZE__


218 
__exã∫_Æways_ölöe
 *

219 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


221  
__buûtö_°rchr
 (
__s
, 
__c
);

224 
__exã∫_Æways_ölöe
 const *

225 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


227  
__buûtö_°rchr
 (
__s
, 
__c
);

232 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

233 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

236 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


239 *
	`°ºchr
 (*
__s
, 
__c
)

240 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

241 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

242 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 #ifde‡
__OPTIMIZE__


245 
__exã∫_Æways_ölöe
 *

246 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


248  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

251 
__exã∫_Æways_ölöe
 const *

252 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


254  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

257 
	}
}

259 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

260 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

262 
__END_NAMESPACE_STD


264 #ifde‡
__USE_GNU


267 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


268 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

269 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

270 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

271 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

274 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

278 
__BEGIN_NAMESPACE_STD


281 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

282 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

285 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

286 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


291 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

292 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

293 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

294 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 #ifde‡
__OPTIMIZE__


297 
__exã∫_Æways_ölöe
 *

298 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


300  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

303 
__exã∫_Æways_ölöe
 const *

304 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


306  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

309 
	}
}

311 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

312 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

315 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


318 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

319 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

320 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

321 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 #ifde‡
__OPTIMIZE__


324 
__exã∫_Æways_ölöe
 *

325 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


327  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

330 
__exã∫_Æways_ölöe
 const *

331 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


333  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

336 
	}
}

338 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

339 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

344 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

345 
__THROW
 
	`__n⁄nuŒ
 ((2));

346 
__END_NAMESPACE_STD


350 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

351 c⁄° *
__ª°ri˘
 
__dñim
,

352 **
__ª°ri˘
 
__ßve_±r
)

353 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

354 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


355 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

360 #ifde‡
__USE_GNU


362 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


363 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

364 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

365 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

366 c⁄° *
__√edÀ
)

367 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

370 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

374 #ifde‡
__USE_GNU


378 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

379 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

380 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

384 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

385 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

386 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

387 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

388 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

389 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

393 
__BEGIN_NAMESPACE_STD


395 
size_t
 
	$°æí
 (c⁄° *
__s
)

396 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

397 
__END_NAMESPACE_STD


399 #ifdef 
__USE_XOPEN2K8


402 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

403 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

407 
__BEGIN_NAMESPACE_STD


409 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

410 
__END_NAMESPACE_STD


411 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


419 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


422 #ifde‡
__REDIRECT_NTH


423 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

424 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

425 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

427 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

428 
__THROW
 
	`__n⁄nuŒ
 ((2));

429 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

434 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

435 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

439 #ifde‡
__USE_XOPEN2K8


441 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

447 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

449 #ifde‡
__USE_BSD


451 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

452 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

455 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

458 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

459 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

462 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


465 *
	`ödex
 (*
__s
, 
__c
)

466 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

467 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

468 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

470 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


471 
__exã∫_Æways_ölöe
 *

472 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


474  
	`__buûtö_ödex
 (
__s
, 
__c
);

477 
__exã∫_Æways_ölöe
 const *

478 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


480  
	`__buûtö_ödex
 (
__s
, 
__c
);

483 
	}
}

485 *
	$ödex
 (c⁄° *
__s
, 
__c
)

486 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

490 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


493 *
	`rödex
 (*
__s
, 
__c
)

494 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

495 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

496 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

498 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


499 
__exã∫_Æways_ölöe
 *

500 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


502  
	`__buûtö_rödex
 (
__s
, 
__c
);

505 
__exã∫_Æways_ölöe
 const *

506 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


508  
	`__buûtö_rödex
 (
__s
, 
__c
);

511 
	}
}

513 *
	$rödex
 (c⁄° *
__s
, 
__c
)

514 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

519 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

523 #ifdef 
__USE_GNU


524 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

525 #ifde‡
__GNUC__


526 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

527 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

532 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

533 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

536 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 #ifdef 
__USE_GNU


543 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

544 
__loˇÀ_t
 
__loc
)

545 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

547 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

548 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

552 #ifdef 
__USE_BSD


555 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

556 c⁄° *
__ª°ri˘
 
__dñim
)

557 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

560 #ifdef 
__USE_XOPEN2K8


562 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

565 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

566 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

567 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

568 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

572 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

573 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

575 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

576 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

577 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

580 #ifdef 
__USE_GNU


582 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

583 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

586 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

589 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 #i‚de‡
ba£«me


596 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


597 "C++" *
	$ba£«me
 (*
__fûíame
)

598 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

599 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

600 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

602 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

608 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

609 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

610 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


630 
	~<bôs/°rög.h
>

633 
	~<bôs/°rög2.h
>

636 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


638 
	~<bôs/°rög3.h
>

642 
__END_DECLS


	@/usr/include/termios.h

23 #i‚def 
_TERMIOS_H


24 
	#_TERMIOS_H
 1

	)

26 
	~<„©uªs.h
>

27 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


29 
	~<bôs/ty≥s.h
>

30 #i‚de‡
__pid_t_deföed


31 
__pid_t
 
	tpid_t
;

32 
	#__pid_t_deföed


	)

36 
	g__BEGIN_DECLS


40 
	~<bôs/ãrmios.h
>

42 #ifde‡
__USE_BSD


45 
	#CCEQ
(
vÆ
, 
c
Ë((cË=(vÆË&& (vÆË!
_POSIX_VDISABLE
)

	)

49 
•ìd_t
 
	$cfgëo•ìd
 (c⁄° 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

52 
•ìd_t
 
	$cfgëi•ìd
 (c⁄° 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

55 
	$cf£to•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

58 
	$cf£ti•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

60 #ifdef 
__USE_BSD


62 
	$cf£t•ìd
 (
ãrmios
 *
__ãrmios_p
, 
•ìd_t
 
__•ìd
Ë
__THROW
;

67 
	$tcgë©å
 (
__fd
, 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

71 
	$tc£èâr
 (
__fd
, 
__›ti⁄Æ_a˘i⁄s
,

72 c⁄° 
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

75 #ifdef 
__USE_BSD


77 
	$cfmakîaw
 (
ãrmios
 *
__ãrmios_p
Ë
__THROW
;

81 
	$tc£ndbªak
 (
__fd
, 
__duøti⁄
Ë
__THROW
;

87 
	`tcdøö
 (
__fd
);

91 
	$tcÊush
 (
__fd
, 
__queue_£À˘‹
Ë
__THROW
;

95 
	$tcÊow
 (
__fd
, 
__a˘i⁄
Ë
__THROW
;

98 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


100 
__pid_t
 
	$tcgësid
 (
__fd
Ë
__THROW
;

104 #ifde‡
__USE_BSD


105 
	~<sys/âydeÁu…s.h
>

108 
__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


24 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

25 ! 
deföed
 
	g__√ed_time•ec
)

26 
	#_TIME_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


33 #ifdef 
_TIME_H


35 
	#__√ed_size_t


	)

36 
	#__√ed_NULL


	)

37 
	~<°ddef.h
>

41 
	~<bôs/time.h
>

44 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


45 #i‚de‡
CLK_TCK


46 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

52 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

53 
	#__˛ock_t_deföed
 1

	)

55 
	~<bôs/ty≥s.h
>

57 
__BEGIN_NAMESPACE_STD


59 
__˛ock_t
 
	t˛ock_t
;

60 
	g__END_NAMESPACE_STD


61 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


62 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

66 #unde‡
__√ed_˛ock_t


68 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

69 
	#__time_t_deföed
 1

	)

71 
	~<bôs/ty≥s.h
>

73 
__BEGIN_NAMESPACE_STD


75 
__time_t
 
	ttime_t
;

76 
__END_NAMESPACE_STD


77 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


78 
	$__USING_NAMESPACE_STD
(
time_t
)

82 #unde‡
__√ed_time_t


84 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

85 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

86 
	#__˛ockid_t_deföed
 1

	)

88 
	~<bôs/ty≥s.h
>

91 
__˛ockid_t
 
	t˛ockid_t
;

94 #unde‡
__˛ockid_time_t


96 #i‡!
deföed
 
__timî_t_deföed
 && \

97 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

98 
	#__timî_t_deföed
 1

	)

100 
	~<bôs/ty≥s.h
>

103 
__timî_t
 
	ttimî_t
;

106 #unde‡
__√ed_timî_t


109 #i‡(!
deföed
 
__time•ec_deföed
 \

110 && ((
deföed
 
_TIME_H
 \

111 && (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
 \

112 || 
deföed
 
__USE_ISOC11
)) \

113 || 
deföed
 
__√ed_time•ec
))

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 c⁄° *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 c⁄° *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 #ifde‡
__USE_ISOC11


182 
	#TIME_UTC
 1

	)

186 
__BEGIN_NAMESPACE_STD


189 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

192 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

195 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

196 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

199 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

205 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

206 c⁄° *
__ª°ri˘
 
__f‹m©
,

207 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

208 
__END_NAMESPACE_STD


210 #ifde‡
__USE_XOPEN


213 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

214 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

215 
__THROW
;

218 #ifde‡
__USE_XOPEN2K8


221 
	~<xloˇÀ.h
>

223 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

224 c⁄° *
__ª°ri˘
 
__f‹m©
,

225 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

229 #ifde‡
__USE_GNU


230 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

231 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

232 
__loˇÀ_t
 
__loc
Ë
__THROW
;

236 
__BEGIN_NAMESPACE_STD


239 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

243 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

244 
__END_NAMESPACE_STD


246 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


249 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

250 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

254 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

255 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

258 
__BEGIN_NAMESPACE_STD


261 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

264 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

265 
__END_NAMESPACE_STD


267 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


272 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

273 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

277 *
__ª°ri˘
 
__buf
Ë
__THROW
;

282 *
__tz«me
[2];

283 
__daylight
;

284 
__timez⁄e
;

287 #ifdef 
__USE_POSIX


289 *
tz«me
[2];

293 
	$tz£t
 (Ë
__THROW
;

296 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


297 
daylight
;

298 
timez⁄e
;

301 #ifde‡
__USE_SVID


304 
	$°ime
 (c⁄° 
time_t
 *
__whí
Ë
__THROW
;

310 
	#__i¶óp
(
yór
) \

311 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

314 #ifde‡
__USE_MISC


319 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

322 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

325 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

329 #ifde‡
__USE_POSIX199309


334 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

335 
time•ec
 *
__ªmaöög
);

339 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

342 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

345 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

346 
__THROW
;

348 #ifde‡
__USE_XOPEN2K


353 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

354 c⁄° 
time•ec
 *
__ªq
,

355 
time•ec
 *
__ªm
);

358 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

363 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

364 
sigevít
 *
__ª°ri˘
 
__evp
,

365 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

368 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

371 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

372 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

373 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

376 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

377 
__THROW
;

380 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

384 #ifde‡
__USE_ISOC11


386 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

387 
__THROW
 
	`__n⁄nuŒ
 ((1));

391 #ifde‡
__USE_XOPEN_EXTENDED


403 
gëd©e_îr
;

412 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

415 #ifde‡
__USE_GNU


426 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

427 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

430 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

71 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

75 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

79 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

83 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

86 #ifde‡
__USE_XOPEN2K8


87 
	#_XOPEN_VERSION
 700

	)

88 #ñi‡
deföed
 
__USE_XOPEN2K


89 
	#_XOPEN_VERSION
 600

	)

90 #ñi‡
deföed
 
__USE_UNIX98


91 
	#_XOPEN_VERSION
 500

	)

93 
	#_XOPEN_VERSION
 4

	)

97 
	#_XOPEN_XCU_VERSION
 4

	)

100 
	#_XOPEN_XPG2
 1

	)

101 
	#_XOPEN_XPG3
 1

	)

102 
	#_XOPEN_XPG4
 1

	)

105 
	#_XOPEN_UNIX
 1

	)

108 
	#_XOPEN_CRYPT
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 #ifde‡
__USE_ATFILE


304 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

305 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

310 #i‚def 
_STDIO_H


311 
	#SEEK_SET
 0

	)

312 
	#SEEK_CUR
 1

	)

313 
	#SEEK_END
 2

	)

314 #ifde‡
__USE_GNU


315 
	#SEEK_DATA
 3

	)

316 
	#SEEK_HOLE
 4

	)

320 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


322 
	#L_SET
 
SEEK_SET


	)

323 
	#L_INCR
 
SEEK_CUR


	)

324 
	#L_XTND
 
SEEK_END


	)

333 #i‚de‡
__USE_FILE_OFFSET64


334 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

336 #ifde‡
__REDIRECT_NTH


337 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

338 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

339 
l£ek64
);

341 
	#l£ek
 
l£ek64


	)

344 #ifde‡
__USE_LARGEFILE64


345 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

346 
__THROW
;

353 
	`˛o£
 (
__fd
);

360 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

366 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur
;

368 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


369 #i‚de‡
__USE_FILE_OFFSET64


376 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

377 
__off_t
 
__off£t
Ë
__wur
;

384 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

385 
__off_t
 
__off£t
Ë
__wur
;

387 #ifde‡
__REDIRECT


388 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

389 
__off64_t
 
__off£t
),

390 
¥ód64
Ë
__wur
;

391 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

392 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

393 
pwrôe64
Ë
__wur
;

395 
	#¥ód
 
¥ód64


	)

396 
	#pwrôe
 
pwrôe64


	)

400 #ifde‡
__USE_LARGEFILE64


404 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
Ë
__wur
;

408 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

409 
__off64_t
 
__off£t
Ë
__wur
;

417 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

419 #ifde‡
__USE_GNU


422 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

432 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

444 
	`¶ìp
 (
__£c⁄ds
);

446 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

447 || 
deföed
 
__USE_BSD


452 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

453 
__THROW
;

460 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

469 
	`∑u£
 ();

473 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

476 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


478 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

483 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

484 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

488 #ifde‡
__USE_ATFILE


491 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

492 
__gid_t
 
__group
, 
__Êag
)

493 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

497 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

499 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


501 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

511 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

513 #ifdef 
__USE_GNU


517 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

520 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

521 || 
deföed
 
__USE_BSD


525 *
	$gëwd
 (*
__buf
)

526 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

531 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

534 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

536 #ifde‡
__USE_GNU


539 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

543 **
__ívú⁄
;

544 #ifde‡
__USE_GNU


545 **
ívú⁄
;

551 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

552 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

554 #ifde‡
__USE_XOPEN2K8


557 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

558 
__THROW
 
	`__n⁄nuŒ
 ((2));

563 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

564 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

568 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

569 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

574 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

578 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

587 #ifde‡
__USE_GNU


590 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

591 *c⁄° 
__ívp
[])

592 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

596 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


598 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

603 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

609 
	~<bôs/c⁄‚ame.h
>

612 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

613 
__THROW
 
	`__n⁄nuŒ
 ((1));

616 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

619 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

621 #ifdef 
__USE_POSIX2


623 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

628 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

631 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

635 #i‚de‡
__FAVOR_BSD


636 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

638 #ifde‡
__REDIRECT_NTH


639 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

641 
	#gëpgΩ
 
__gëpgid


	)

646 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

647 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


648 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

655 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

657 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


668 #i‚de‡
__FAVOR_BSD


672 
	$£çgΩ
 (Ë
__THROW
;

677 #ifde‡
__REDIRECT_NTH


678 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

680 
	#£çgΩ
 
£çgid


	)

689 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

691 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


693 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

697 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

700 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

703 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

706 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

711 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

713 #ifdef 
__USE_GNU


715 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

722 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

724 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


727 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

730 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


732 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

739 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

741 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


744 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

747 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


749 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

752 #ifde‡
__USE_GNU


755 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

756 
__THROW
;

760 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

761 
__THROW
;

765 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

766 
__THROW
 
__wur
;

770 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

771 
__THROW
 
__wur
;

778 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

780 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

781 || 
deföed
 
__USE_BSD


786 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

792 *
	$ây«me
 (
__fd
Ë
__THROW
;

796 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

797 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

801 
	$ißây
 (
__fd
Ë
__THROW
;

803 #i‡
deföed
 
__USE_BSD
 \

804 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

807 
	$ây¶Ÿ
 (Ë
__THROW
;

812 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

813 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

815 #ifde‡
__USE_ATFILE


818 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

819 c⁄° *
__to
, 
__Êags
)

820 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

823 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


825 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

826 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

831 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

832 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

836 #ifde‡
__USE_ATFILE


838 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

839 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

842 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

843 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

844 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

848 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

850 #ifde‡
__USE_ATFILE


852 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

853 
__THROW
 
	`__n⁄nuŒ
 ((2));

857 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

861 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

864 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

871 *
	`gëlogö
 ();

872 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


879 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

882 #ifdef 
__USE_BSD


884 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

888 #ifdef 
__USE_POSIX2


892 
	#__√ed_gë›t


	)

893 
	~<gë›t.h
>

897 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


901 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

905 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

908 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

909 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

913 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

919 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

920 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

921 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

922 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

928 
	$vh™gup
 (Ë
__THROW
;

931 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

939 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

940 
size_t
 
__off£t
, 
__sˇÀ
)

941 
__THROW
 
	`__n⁄nuŒ
 ((1));

947 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

951 *
	$gëu£rshñl
 (Ë
__THROW
;

952 
	$ídu£rshñl
 (Ë
__THROW
;

953 
	$£tu£rshñl
 (Ë
__THROW
;

959 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

963 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

966 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

970 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

978 
	`fsync
 (
__fd
);

981 #ifde‡
__USE_GNU


984 
	$syncfs
 (
__fd
Ë
__THROW
;

988 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


991 
	`gëho°id
 ();

994 
	$sync
 (Ë
__THROW
;

997 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


1000 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

1005 
	$gëdèbÀsize
 (Ë
__THROW
;

1011 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1014 #i‚de‡
__USE_FILE_OFFSET64


1015 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

1016 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1018 #ifde‡
__REDIRECT_NTH


1019 
	`__REDIRECT_NTH
 (
åunˇã
,

1020 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

1021 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1023 
	#åunˇã
 
åunˇã64


	)

1026 #ifde‡
__USE_LARGEFILE64


1027 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1028 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1033 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_POSIX199309
 \

1034 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1037 #i‚de‡
__USE_FILE_OFFSET64


1038 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1040 #ifde‡
__REDIRECT_NTH


1041 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1042 
·runˇã64
Ë
__wur
;

1044 
	#·runˇã
 
·runˇã64


	)

1047 #ifde‡
__USE_LARGEFILE64


1048 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1054 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1055 || 
deföed
 
__USE_MISC


1059 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1065 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1069 #ifde‡
__USE_MISC


1080 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1085 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1097 
	#F_ULOCK
 0

	)

1098 
	#F_LOCK
 1

	)

1099 
	#F_TLOCK
 2

	)

1100 
	#F_TEST
 3

	)

1102 #i‚de‡
__USE_FILE_OFFSET64


1103 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1105 #ifde‡
__REDIRECT


1106 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1107 
lockf64
Ë
__wur
;

1109 
	#lockf
 
lockf64


	)

1112 #ifde‡
__USE_LARGEFILE64


1113 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1118 #ifde‡
__USE_GNU


1123 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1124 (
__exãnsi⁄__
 \

1125 ({ 
__ªsu…
; \

1126 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1127 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1128 
__ªsu…
; 
	}
}))

	)

1131 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1134 
fd©async
 (
__fûdes
);

1140 #ifdef 
__USE_XOPEN


1142 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1143 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1147 
	$í¸y±
 (*
__libc_block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1154 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1155 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1161 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1163 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1168 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1169 
	~<bôs/uni°d.h
>

1172 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

31 
	#__LITTLE_ENDIAN
 1234

	)

32 
	#__BIG_ENDIAN
 4321

	)

33 
	#__PDP_ENDIAN
 3412

	)

36 
	~<bôs/ídün.h
>

40 #i‚de‡
__FLOAT_WORD_ORDER


41 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

44 #ifdef 
__USE_BSD


45 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

46 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

47 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

48 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

51 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


52 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

53 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


54 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

58 #i‡
deföed
 
__USE_BSD
 && !deföed 
__ASSEMBLER__


60 
	~<bôs/byãsw≠.h
>

62 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


63 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

64 
	#htﬁe16
(
x
Ë(x)

	)

65 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

66 
	#À16toh
(
x
Ë(x)

	)

68 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

69 
	#htﬁe32
(
x
Ë(x)

	)

70 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

71 
	#À32toh
(
x
Ë(x)

	)

73 #i‡
__GLIBC_HAVE_LONG_LONG


74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

81 
	#htobe16
(
x
Ë(x)

	)

82 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

83 
	#be16toh
(
x
Ë(x)

	)

84 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

86 
	#htobe32
(
x
Ë(x)

	)

87 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

88 
	#be32toh
(
x
Ë(x)

	)

89 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

91 #i‡
__GLIBC_HAVE_LONG_LONG


92 
	#htobe64
(
x
Ë(x)

	)

93 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

94 
	#be64toh
(
x
Ë(x)

	)

95 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

98 #unde‡
__USE_ISOC11


99 #unde‡
__USE_ISOC99


100 #unde‡
__USE_ISOC95


101 #unde‡
__USE_ISOCXX11


102 #unde‡
__USE_POSIX


103 #unde‡
__USE_POSIX2


104 #unde‡
__USE_POSIX199309


105 #unde‡
__USE_POSIX199506


106 #unde‡
__USE_XOPEN


107 #unde‡
__USE_XOPEN_EXTENDED


108 #unde‡
__USE_UNIX98


109 #unde‡
__USE_XOPEN2K


110 #unde‡
__USE_XOPEN2KXSI


111 #unde‡
__USE_XOPEN2K8


112 #unde‡
__USE_XOPEN2K8XSI


113 #unde‡
__USE_LARGEFILE


114 #unde‡
__USE_LARGEFILE64


115 #unde‡
__USE_FILE_OFFSET64


116 #unde‡
__USE_BSD


117 #unde‡
__USE_SVID


118 #unde‡
__USE_MISC


119 #unde‡
__USE_ATFILE


120 #unde‡
__USE_GNU


121 #unde‡
__USE_REENTRANT


122 #unde‡
__USE_FORTIFY_LEVEL


123 #unde‡
__FAVOR_BSD


124 #unde‡
__KERNEL_STRICT_NAMES


128 #i‚de‡
_LOOSE_KERNEL_NAMES


129 
	#__KERNEL_STRICT_NAMES


	)

133 
	#__USE_ANSI
 1

	)

142 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


143 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

144 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

146 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

151 #i‡
deföed
 
_BSD_SOURCE
 && \

152 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

153 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

154 
	#__FAVOR_BSD
 1

	)

158 #ifde‡
_GNU_SOURCE


159 #unde‡
_ISOC95_SOURCE


160 
	#_ISOC95_SOURCE
 1

	)

161 #unde‡
_ISOC99_SOURCE


162 
	#_ISOC99_SOURCE
 1

	)

163 #unde‡
_ISOC11_SOURCE


164 
	#_ISOC11_SOURCE
 1

	)

165 #unde‡
_POSIX_SOURCE


166 
	#_POSIX_SOURCE
 1

	)

167 #unde‡
_POSIX_C_SOURCE


168 
	#_POSIX_C_SOURCE
 200809L

	)

169 #unde‡
_XOPEN_SOURCE


170 
	#_XOPEN_SOURCE
 700

	)

171 #unde‡
_XOPEN_SOURCE_EXTENDED


172 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

173 #unde‡
_LARGEFILE64_SOURCE


174 
	#_LARGEFILE64_SOURCE
 1

	)

175 #unde‡
_BSD_SOURCE


176 
	#_BSD_SOURCE
 1

	)

177 #unde‡
_SVID_SOURCE


178 
	#_SVID_SOURCE
 1

	)

179 #unde‡
_ATFILE_SOURCE


180 
	#_ATFILE_SOURCE
 1

	)

185 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

186 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

187 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

188 
	#_BSD_SOURCE
 1

	)

189 
	#_SVID_SOURCE
 1

	)

193 #i‡(
deföed
 
_ISOC11_SOURCE
 \

194 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

195 
	#__USE_ISOC11
 1

	)

199 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

200 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

201 
	#__USE_ISOC99
 1

	)

205 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

206 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

207 
	#__USE_ISOC95
 1

	)

214 #i‡((
deföed
 
__˝lu•lus
 && __cplusplus >= 201103L) \

215 || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
)

216 
	#__USE_ISOCXX11
 1

	)

221 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

222 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

223 
	#_POSIX_SOURCE
 1

	)

224 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

225 
	#_POSIX_C_SOURCE
 2

	)

226 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

227 
	#_POSIX_C_SOURCE
 199506L

	)

228 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

229 
	#_POSIX_C_SOURCE
 200112L

	)

231 
	#_POSIX_C_SOURCE
 200809L

	)

233 
	#__USE_POSIX_IMPLICITLY
 1

	)

236 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


237 
	#__USE_POSIX
 1

	)

240 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


241 
	#__USE_POSIX2
 1

	)

244 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

245 
	#__USE_POSIX199309
 1

	)

248 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

249 
	#__USE_POSIX199506
 1

	)

252 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

253 
	#__USE_XOPEN2K
 1

	)

254 #unde‡
__USE_ISOC95


255 
	#__USE_ISOC95
 1

	)

256 #unde‡
__USE_ISOC99


257 
	#__USE_ISOC99
 1

	)

260 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

261 
	#__USE_XOPEN2K8
 1

	)

262 #unde‡
_ATFILE_SOURCE


263 
	#_ATFILE_SOURCE
 1

	)

266 #ifdef 
_XOPEN_SOURCE


267 
	#__USE_XOPEN
 1

	)

268 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

269 
	#__USE_XOPEN_EXTENDED
 1

	)

270 
	#__USE_UNIX98
 1

	)

271 #unde‡
_LARGEFILE_SOURCE


272 
	#_LARGEFILE_SOURCE
 1

	)

273 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

274 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

275 
	#__USE_XOPEN2K8
 1

	)

276 
	#__USE_XOPEN2K8XSI
 1

	)

278 
	#__USE_XOPEN2K
 1

	)

279 
	#__USE_XOPEN2KXSI
 1

	)

280 #unde‡
__USE_ISOC95


281 
	#__USE_ISOC95
 1

	)

282 #unde‡
__USE_ISOC99


283 
	#__USE_ISOC99
 1

	)

286 #ifde‡
_XOPEN_SOURCE_EXTENDED


287 
	#__USE_XOPEN_EXTENDED
 1

	)

292 #ifde‡
_LARGEFILE_SOURCE


293 
	#__USE_LARGEFILE
 1

	)

296 #ifde‡
_LARGEFILE64_SOURCE


297 
	#__USE_LARGEFILE64
 1

	)

300 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

301 
	#__USE_FILE_OFFSET64
 1

	)

304 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


305 
	#__USE_MISC
 1

	)

308 #ifdef 
_BSD_SOURCE


309 
	#__USE_BSD
 1

	)

312 #ifdef 
_SVID_SOURCE


313 
	#__USE_SVID
 1

	)

316 #ifdef 
_ATFILE_SOURCE


317 
	#__USE_ATFILE
 1

	)

320 #ifdef 
_GNU_SOURCE


321 
	#__USE_GNU
 1

	)

324 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


325 
	#__USE_REENTRANT
 1

	)

328 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

329 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

330 #i‡
_FORTIFY_SOURCE
 > 1

331 
	#__USE_FORTIFY_LEVEL
 2

	)

333 
	#__USE_FORTIFY_LEVEL
 1

	)

336 
	#__USE_FORTIFY_LEVEL
 0

	)

341 
	~<°dc-¥edef.h
>

349 #unde‡
__GNU_LIBRARY__


350 
	#__GNU_LIBRARY__
 6

	)

354 
	#__GLIBC__
 2

	)

355 
	#__GLIBC_MINOR__
 17

	)

357 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

358 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

361 #i‡
deföed
 
__GNUC__
 \

362 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

363 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

364 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

365 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

369 #i‚de‡
__ASSEMBLER__


370 #i‚de‡
_SYS_CDEFS_H


371 
	~<sys/cdefs.h
>

376 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


377 
	#__USE_LARGEFILE
 1

	)

378 
	#__USE_LARGEFILE64
 1

	)

384 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

385 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

386 && 
deföed
 
	g__exã∫_ölöe


387 
	#__USE_EXTERN_INLINES
 1

	)

395 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

20 #i‚de‡
_GETOPT_H


22 #i‚de‡
__√ed_gë›t


23 
	#_GETOPT_H
 1

	)

33 #i‡!
deföed
 
__GNU_LIBRARY__


34 
	~<˘y≥.h
>

37 #i‚de‡
__THROW


38 #i‚de‡
__GNUC_PREREQ


39 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

41 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

42 
	#__THROW
 
	`throw
 ()

	)

44 
	#__THROW


	)

48 #ifdef 
__˝lu•lus


58 *
›èrg
;

72 
›töd
;

77 
›ãº
;

81 
›t›t
;

83 #i‚de‡
__√ed_gë›t


105 
	s›ti⁄


107 c⁄° *
	g«me
;

110 
	ghas_¨g
;

111 *
	gÊag
;

112 
	gvÆ
;

117 
	#no_¨gumít
 0

	)

118 
	#ªquúed_¨gumít
 1

	)

119 
	#›ti⁄Æ_¨gumít
 2

	)

147 #ifde‡
__GNU_LIBRARY__


151 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

152 
__THROW
;

154 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

155 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


159 #ifde‡
__REDIRECT


160 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

161 c⁄° *
__sh‹t›ts
),

162 
__posix_gë›t
);

164 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

165 c⁄° *
__sh‹t›ts
Ë
__THROW
;

166 
	#gë›t
 
__posix_gë›t


	)

170 
gë›t
 ();

173 #i‚de‡
__√ed_gë›t


174 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

175 c⁄° *
__sh‹t›ts
,

176 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

177 
__THROW
;

178 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

179 c⁄° *
__sh‹t›ts
,

180 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

181 
__THROW
;

185 #ifdef 
__˝lu•lus


190 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_Âos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

36 
	#_IO_size_t
 
size_t


	)

37 
	#_IO_ssize_t
 
__ssize_t


	)

38 
	#_IO_off_t
 
__off_t


	)

39 
	#_IO_off64_t
 
__off64_t


	)

40 
	#_IO_pid_t
 
__pid_t


	)

41 
	#_IO_uid_t
 
__uid_t


	)

42 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

43 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

44 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

45 
	#_IO_va_li°
 
_G_va_li°


	)

46 
	#_IO_wöt_t
 
wöt_t


	)

49 
	#__√ed___va_li°


	)

50 
	~<°d¨g.h
>

51 #ifde‡
__GNUC_VA_LIST


52 #unde‡
_IO_va_li°


53 
	#_IO_va_li°
 
__gnuc_va_li°


	)

56 #i‚de‡
__P


57 
	~<sys/cdefs.h
>

60 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

62 #i‚de‡
EOF


63 
	#EOF
 (-1)

	)

65 #i‚de‡
NULL


66 #i‡
deföed
 
__GNUG__
 && \

67 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

68 
	#NULL
 (
__nuŒ
)

	)

70 #i‡!
deföed
(
__˝lu•lus
)

71 
	#NULL
 ((*)0)

	)

73 
	#NULL
 (0)

	)

78 
	#_IOS_INPUT
 1

	)

79 
	#_IOS_OUTPUT
 2

	)

80 
	#_IOS_ATEND
 4

	)

81 
	#_IOS_APPEND
 8

	)

82 
	#_IOS_TRUNC
 16

	)

83 
	#_IOS_NOCREATE
 32

	)

84 
	#_IOS_NOREPLACE
 64

	)

85 
	#_IOS_BIN
 128

	)

93 
	#_IO_MAGIC
 0xFBAD0000

	)

94 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

95 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

96 
	#_IO_USER_BUF
 1

	)

97 
	#_IO_UNBUFFERED
 2

	)

98 
	#_IO_NO_READS
 4

	)

99 
	#_IO_NO_WRITES
 8

	)

100 
	#_IO_EOF_SEEN
 0x10

	)

101 
	#_IO_ERR_SEEN
 0x20

	)

102 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

103 
	#_IO_LINKED
 0x80

	)

104 
	#_IO_IN_BACKUP
 0x100

	)

105 
	#_IO_LINE_BUF
 0x200

	)

106 
	#_IO_TIED_PUT_GET
 0x400

	)

107 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

108 
	#_IO_IS_APPENDING
 0x1000

	)

109 
	#_IO_IS_FILEBUF
 0x2000

	)

110 
	#_IO_BAD_SEEN
 0x4000

	)

111 
	#_IO_USER_LOCK
 0x8000

	)

113 
	#_IO_FLAGS2_MMAP
 1

	)

114 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

115 #ifde‡
_LIBC


116 
	#_IO_FLAGS2_FORTIFY
 4

	)

118 
	#_IO_FLAGS2_USER_WBUF
 8

	)

119 #ifde‡
_LIBC


120 
	#_IO_FLAGS2_SCANF_STD
 16

	)

121 
	#_IO_FLAGS2_NOCLOSE
 32

	)

122 
	#_IO_FLAGS2_CLOEXEC
 64

	)

126 
	#_IO_SKIPWS
 01

	)

127 
	#_IO_LEFT
 02

	)

128 
	#_IO_RIGHT
 04

	)

129 
	#_IO_INTERNAL
 010

	)

130 
	#_IO_DEC
 020

	)

131 
	#_IO_OCT
 040

	)

132 
	#_IO_HEX
 0100

	)

133 
	#_IO_SHOWBASE
 0200

	)

134 
	#_IO_SHOWPOINT
 0400

	)

135 
	#_IO_UPPERCASE
 01000

	)

136 
	#_IO_SHOWPOS
 02000

	)

137 
	#_IO_SCIENTIFIC
 04000

	)

138 
	#_IO_FIXED
 010000

	)

139 
	#_IO_UNITBUF
 020000

	)

140 
	#_IO_STDIO
 040000

	)

141 
	#_IO_DONT_CLOSE
 0100000

	)

142 
	#_IO_BOOLALPHA
 0200000

	)

145 
_IO_jump_t
; 
	g_IO_FILE
;

148 #ifde‡
_IO_MTSAFE_IO


149 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

150 
	~<bôs/°dio-lock.h
>

155 
	t_IO_lock_t
;

161 
	s_IO_m¨kî
 {

162 
_IO_m¨kî
 *
	m_√xt
;

163 
_IO_FILE
 *
	m_sbuf
;

167 
	m_pos
;

169 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

170 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

171 
	mpublic
:

172 
°ªamm¨kî
(
°ªambuf
 *
sb
);

173 ~
°ªamm¨kî
();

174 
ßvög
(Ë{  
	m_•os
 == -2; }

175 
dñè
(
°ªamm¨kî
&);

176 
dñè
();

181 
	e__codecvt_ªsu…


183 
	m__codecvt_ok
,

184 
	m__codecvt_∑πül
,

185 
	m__codecvt_îr‹
,

186 
	m__codecvt_noc⁄v


189 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


192 
	s_IO_codecvt


194 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

195 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

196 
	m__mb°©e_t
 *,

197 c⁄° 
	mwch¨_t
 *,

198 c⁄° 
	mwch¨_t
 *,

199 c⁄° 
	mwch¨_t
 **, *,

201 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

202 
	m__mb°©e_t
 *, *,

204 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

205 
	m__mb°©e_t
 *,

207 c⁄° **, 
	mwch¨_t
 *,

208 
	mwch¨_t
 *, wchar_t **);

209 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

210 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

211 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

212 c⁄° *, c⁄° *, 
	m_IO_size_t
);

213 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

215 
_IO_ic⁄v_t
 
	m__cd_ö
;

216 
_IO_ic⁄v_t
 
	m__cd_out
;

220 
	s_IO_wide_d©a


222 
wch¨_t
 *
	m_IO_ªad_±r
;

223 
wch¨_t
 *
	m_IO_ªad_íd
;

224 
wch¨_t
 *
	m_IO_ªad_ba£
;

225 
wch¨_t
 *
	m_IO_wrôe_ba£
;

226 
wch¨_t
 *
	m_IO_wrôe_±r
;

227 
wch¨_t
 *
	m_IO_wrôe_íd
;

228 
wch¨_t
 *
	m_IO_buf_ba£
;

229 
wch¨_t
 *
	m_IO_buf_íd
;

231 
wch¨_t
 *
	m_IO_ßve_ba£
;

232 
wch¨_t
 *
	m_IO_backup_ba£
;

234 
wch¨_t
 *
	m_IO_ßve_íd
;

236 
__mb°©e_t
 
	m_IO_°©e
;

237 
__mb°©e_t
 
	m_IO_œ°_°©e
;

238 
_IO_codecvt
 
	m_codecvt
;

240 
wch¨_t
 
	m_sh‹tbuf
[1];

242 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

246 
	s_IO_FILE
 {

247 
	m_Êags
;

248 
	#_IO_fûe_Êags
 
_Êags


	)

252 * 
	m_IO_ªad_±r
;

253 * 
	m_IO_ªad_íd
;

254 * 
	m_IO_ªad_ba£
;

255 * 
	m_IO_wrôe_ba£
;

256 * 
	m_IO_wrôe_±r
;

257 * 
	m_IO_wrôe_íd
;

258 * 
	m_IO_buf_ba£
;

259 * 
	m_IO_buf_íd
;

261 *
	m_IO_ßve_ba£
;

262 *
	m_IO_backup_ba£
;

263 *
	m_IO_ßve_íd
;

265 
_IO_m¨kî
 *
	m_m¨kîs
;

267 
_IO_FILE
 *
	m_chaö
;

269 
	m_fûío
;

271 
	m_blksize
;

273 
	m_Êags2
;

275 
_IO_off_t
 
	m_ﬁd_off£t
;

277 
	#__HAVE_COLUMN


	)

279 
	m_cur_cﬁumn
;

280 sig√d 
	m_vèbÀ_off£t
;

281 
	m_sh‹tbuf
[1];

285 
_IO_lock_t
 *
	m_lock
;

286 #ifde‡
_IO_USE_OLD_IO_FILE


289 
	s_IO_FILE_com∂ëe


291 
_IO_FILE
 
	m_fûe
;

293 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

294 
_IO_off64_t
 
	m_off£t
;

295 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


297 
_IO_codecvt
 *
	m_codecvt
;

298 
_IO_wide_d©a
 *
	m_wide_d©a
;

299 
_IO_FILE
 *
	m_‰ìªs_li°
;

300 *
	m_‰ìªs_buf
;

301 
size_t
 
	m_‰ìªs_size
;

303 *
	m__∑d1
;

304 *
	m__∑d2
;

305 *
	m__∑d3
;

306 *
	m__∑d4
;

307 
size_t
 
	m__∑d5
;

309 
	m_mode
;

311 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

315 #i‚de‡
__˝lu•lus


316 
_IO_FILE
 
	t_IO_FILE
;

319 
	g_IO_FILE_∂us
;

321 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

322 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

323 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

324 #i‚de‡
_LIBC


325 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

326 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

327 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

329 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

330 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

331 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

339 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

347 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, c⁄° *
	t__buf
,

348 
	tsize_t
 
	t__n
);

356 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

359 
	t__io_˛o£_‚
 (*
	t__cookõ
);

362 #ifde‡
_GNU_SOURCE


364 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

365 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

366 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

367 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

372 
__io_ªad_‚
 *
	mªad
;

373 
__io_wrôe_‚
 *
	mwrôe
;

374 
__io_£ek_‚
 *
	m£ek
;

375 
__io_˛o£_‚
 *
	m˛o£
;

376 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

377 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

379 
	g_IO_cookõ_fûe
;

382 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

383 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

387 #ifde‡
__˝lu•lus


391 
__undîÊow
 (
_IO_FILE
 *);

392 
__uÊow
 (
_IO_FILE
 *);

393 
__ovîÊow
 (
_IO_FILE
 *, );

394 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


395 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

396 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

397 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

400 #i‡ 
__GNUC__
 >= 3

401 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

403 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

406 
	#_IO_gëc_u∆ocked
(
_Â
) \

407 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

408 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

409 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

410 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

411 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

412 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

413 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

414 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

415 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

416 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

418 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


419 
	#_IO_gëwc_u∆ocked
(
_Â
) \

420 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

421 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

422 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

423 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

424 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

425 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

426 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

427 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

428 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

429 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

432 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

433 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

435 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

436 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

437 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

438 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

440 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

443 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

444 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

446 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

447 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

448 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

450 #ifde‡
_IO_MTSAFE_IO


451 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

452 
	#_IO_Êockfûe
(
_Â
) \

453 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

454 
	#_IO_fu∆ockfûe
(
_Â
) \

455 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

457 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

458 
	#_IO_Êockfûe
(
_Â
Ë

	)

459 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

460 
	#_IO_·rylockfûe
(
_Â
Ë

	)

461 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

462 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

465 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

466 
_IO_va_li°
, *
__ª°ri˘
);

467 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

468 
_IO_va_li°
);

469 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

470 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

472 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

473 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

475 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

477 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


478 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

479 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

480 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

481 #i‡
__GNUC__
 >= 2

484 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


485 
	~<shlib-com∑t.h
>

486 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

487 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

488 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

489 c⁄° 
_IO_°dö_u£d
;

490 
wók_exã∫
 (
_IO_°dö_u£d
);

493 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


494 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

498 
	#_IO_fwide
(
__Â
, 
__mode
) \

499 ({ 
__ªsu…
 = (
__mode
); \

500 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

502 i‡((
__Â
)->
_mode
 == 0) \

504 (
__Â
)->
_mode
 = -1; \

505 
__ªsu…
 = (
__Â
)->
_mode
; \

507 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

508 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

510 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

511 
__ªsu…
; })

	)

514 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

515 
_IO_va_li°
, *
__ª°ri˘
);

516 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

517 
_IO_va_li°
);

518 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

519 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

522 #ifde‡
__LDBL_COMPAT


523 
	~<bôs/libio-ldbl.h
>

526 #ifde‡
__˝lu•lus


	@/usr/include/sched.h

20 #i‚def 
_SCHED_H


21 
	#_SCHED_H
 1

	)

23 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 
	#__√ed_size_t


	)

29 
	~<°ddef.h
>

31 
	#__√ed_time_t


	)

32 
	#__√ed_time•ec


	)

33 
	~<time.h
>

35 #i‚de‡
__pid_t_deföed


36 
__pid_t
 
	tpid_t
;

37 
	#__pid_t_deföed


	)

42 
	~<bôs/sched.h
>

44 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

47 
__BEGIN_DECLS


50 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, c⁄° 
sched_∑øm
 *
__∑øm
)

51 
__THROW
;

54 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

57 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

58 c⁄° 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

61 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

64 
	$sched_yõld
 (Ë
__THROW
;

67 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

70 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

73 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

76 #ifde‡
__USE_GNU


78 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

79 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

80 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

82 
˝u£ç
)

	)

83 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

84 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

86 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

87 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

89 
˝u£ç
)

	)

90 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

91 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

93 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

94 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

95 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

96 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

98 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

99 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

100 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

101 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

102 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

103 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

104 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

105 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

106 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

107 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

108 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

109 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

111 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

112 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

113 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

117 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

118 c⁄° 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

121 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

122 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

125 
__END_DECLS


	@/usr/include/xlocale.h

20 #i‚de‡
_XLOCALE_H


21 
	#_XLOCALE_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

39 } *
	t__loˇÀ_t
;

42 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

23 
__off_t
 
	m__pos
;

24 
__mb°©e_t
 
	m__°©e
;

25 } 
	t_G_Âos_t
;

28 
__off64_t
 
	m__pos
;

29 
__mb°©e_t
 
	m__°©e
;

30 } 
	t_G_Âos64_t
;

31 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


32 
	~<gc⁄v.h
>

35 
__gc⁄v_öfo
 
	m__cd
;

38 
__gc⁄v_öfo
 
	m__cd
;

39 
__gc⁄v_°ï_d©a
 
	m__d©a
;

40 } 
	m__comböed
;

41 } 
	t_G_ic⁄v_t
;

46 
	#_G_va_li°
 
__gnuc_va_li°


	)

48 
	#_G_HAVE_MMAP
 1

	)

49 
	#_G_HAVE_MREMAP
 1

	)

51 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

54 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

56 
	#_G_BUFSIZ
 8192

	)

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

30 
	~<bôs/¥edefs.h
>

34 
	#__STDC_ISO_10646__
 201103L

	)

37 
	#__STDC_NO_THREADS__
 1

	)

	@/usr/include/gconv.h

22 #i‚de‡
_GCONV_H


23 
	#_GCONV_H
 1

	)

25 
	~<„©uªs.h
>

26 
	#__√ed_mb°©e_t


	)

27 
	#__√ed_wöt_t


	)

28 
	~<wch¨.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	~<°ddef.h
>

34 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

39 
	m__GCONV_OK
 = 0,

40 
	m__GCONV_NOCONV
,

41 
	m__GCONV_NODB
,

42 
	m__GCONV_NOMEM
,

44 
	m__GCONV_EMPTY_INPUT
,

45 
	m__GCONV_FULL_OUTPUT
,

46 
	m__GCONV_ILLEGAL_INPUT
,

47 
	m__GCONV_INCOMPLETE_INPUT
,

49 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

50 
	m__GCONV_INTERNAL_ERROR


57 
	m__GCONV_IS_LAST
 = 0x0001,

58 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

59 
	m__GCONV_SWAP
 = 0x0004

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
) (*, const *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
) (const *, const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 c⁄° *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


25 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


26 
	#_WCHAR_H
 1

	)

27 
	~<„©uªs.h
>

30 #ifde‡
_WCHAR_H


32 
	#__√ed___FILE


	)

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_FILE


	)

36 
	~<°dio.h
>

38 
	#__√ed___va_li°


	)

39 
	~<°d¨g.h
>

41 
	~<bôs/wch¨.h
>

44 
	#__√ed_size_t


	)

45 
	#__√ed_wch¨_t


	)

46 
	#__√ed_NULL


	)

48 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


49 #unde‡
__√ed_wöt_t


50 
	#__√ed_wöt_t


	)

51 
	~<°ddef.h
>

55 #i‚de‡
_WINT_T


60 
	#_WINT_T


	)

61 
	twöt_t
;

65 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

66 && 
deföed
 
__WINT_TYPE__


67 
__BEGIN_NAMESPACE_STD


68 
__WINT_TYPE__
 
	twöt_t
;

69 
	g__END_NAMESPACE_STD


74 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

75 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

79 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
____mb°©e_t_deföed


80 
	#____mb°©e_t_deföed
 1

	)

84 
	m__cou¡
;

87 #ifde‡
__WINT_TYPE__


88 
__WINT_TYPE__
 
	m__wch
;

90 
wöt_t
 
	m__wch
;

92 
	m__wchb
[4];

93 } 
	m__vÆue
;

94 } 
	t__mb°©e_t
;

96 #unde‡
__√ed_mb°©e_t


101 #ifde‡
_WCHAR_H


103 #i‚de‡
__mb°©e_t_deföed


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 
	#__mb°©e_t_deföed
 1

	)

111 #ifde‡
__USE_GNU


112 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

115 #i‚de‡
WCHAR_MIN


117 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

118 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

121 #i‚de‡
WEOF


122 
	#WEOF
 (0xffffffffu)

	)

127 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


128 
	~<w˘y≥.h
>

132 
__BEGIN_DECLS


134 
__BEGIN_NAMESPACE_STD


137 
tm
;

138 
__END_NAMESPACE_STD


142 
	$__USING_NAMESPACE_STD
(
tm
)

145 
__BEGIN_NAMESPACE_STD


147 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

150 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

151 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

152 
__THROW
;

155 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

158 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

159 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

160 
__THROW
;

163 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

164 
__THROW
 
__©åibuã_puª__
;

166 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

167 
__THROW
 
__©åibuã_puª__
;

168 
__END_NAMESPACE_STD


170 #ifde‡
__USE_XOPEN2K8


172 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

175 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

176 
size_t
 
__n
Ë
__THROW
;

180 
	~<xloˇÀ.h
>

182 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

183 
__loˇÀ_t
 
__loc
Ë
__THROW
;

185 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

186 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

189 
__BEGIN_NAMESPACE_STD


192 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

196 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

197 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

198 
__END_NAMESPACE_STD


200 #ifde‡
__USE_XOPEN2K8


206 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

207 
__loˇÀ_t
 
__loc
Ë
__THROW
;

212 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

213 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

216 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

219 
__BEGIN_NAMESPACE_STD


221 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


222 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

223 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

227 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

228 
__THROW
 
__©åibuã_puª__
;

231 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


232 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

233 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

238 
__THROW
 
__©åibuã_puª__
;

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_GNU


245 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

246 
__THROW
 
__©åibuã_puª__
;

249 
__BEGIN_NAMESPACE_STD


252 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

253 
__THROW
 
__©åibuã_puª__
;

256 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

257 
__THROW
 
__©åibuã_puª__
;

259 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


260 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

262 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

263 c⁄° 
wch¨_t
 *
__ac˚±
)

264 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

266 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

267 
__THROW
 
__©åibuã_puª__
;

270 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


271 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

273 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

274 c⁄° 
wch¨_t
 *
__√edÀ
)

275 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

277 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

278 
__THROW
 
__©åibuã_puª__
;

282 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

283 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

284 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

287 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

288 
__END_NAMESPACE_STD


290 #ifde‡
__USE_XOPEN


292 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


293 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

295 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

296 c⁄° 
wch¨_t
 *
__√edÀ
)

297 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

299 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

300 
__THROW
 
__©åibuã_puª__
;

304 #ifde‡
__USE_XOPEN2K8


306 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

307 
__THROW
 
__©åibuã_puª__
;

311 
__BEGIN_NAMESPACE_STD


313 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


314 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

316 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

317 
size_t
 
__n
)

318 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

320 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

321 
__THROW
 
__©åibuã_puª__
;

325 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

326 
__THROW
 
__©åibuã_puª__
;

329 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

330 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

334 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

335 
__THROW
;

338 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

339 
__END_NAMESPACE_STD


341 #ifde‡
__USE_GNU


344 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

345 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

346 
__THROW
;

350 
__BEGIN_NAMESPACE_STD


353 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

357 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

361 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

365 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

366 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

367 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

370 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

371 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

377 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #ifde‡
__USE_EXTERN_INLINES


386 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

387 
__exã∫_ölöe
 
wöt_t


388 
	`__NTH
 (
	$btowc
 (
__c
))

389 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

390 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

392 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

393 
__exã∫_ölöe
 

394 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

395 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

396 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

398 
__exã∫_ölöe
 
size_t


399 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

400 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

401 {  (
__ps
 !
NULL


402 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

405 
__BEGIN_NAMESPACE_STD


408 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

409 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

410 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

415 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

416 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

417 
__END_NAMESPACE_STD


420 #ifdef 
__USE_XOPEN2K8


423 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

424 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

425 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

429 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

430 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

431 
size_t
 
__nwc
, size_à
__Àn
,

432 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

437 #ifde‡
__USE_XOPEN


439 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

443 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

447 
__BEGIN_NAMESPACE_STD


450 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

451 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

452 
__END_NAMESPACE_STD


454 #ifde‡
__USE_ISOC99


455 
__BEGIN_NAMESPACE_C99


457 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

460 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

461 
__END_NAMESPACE_C99


465 
__BEGIN_NAMESPACE_STD


468 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

473 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

474 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

475 
__THROW
;

476 
__END_NAMESPACE_STD


478 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

479 
__BEGIN_NAMESPACE_C99


482 
__exãnsi⁄__


483 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

484 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

485 
__THROW
;

489 
__exãnsi⁄__


490 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

491 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

492 
__ba£
Ë
__THROW
;

493 
__END_NAMESPACE_C99


496 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


499 
__exãnsi⁄__


500 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

502 
__THROW
;

506 
__exãnsi⁄__


507 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

508 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

509 
__ba£
Ë
__THROW
;

512 #ifde‡
__USE_GNU


526 
	~<xloˇÀ.h
>

530 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

531 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

532 
__loˇÀ_t
 
__loc
Ë
__THROW
;

534 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

535 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

536 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

538 
__exãnsi⁄__


539 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

540 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

541 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

543 
__exãnsi⁄__


544 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

545 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

546 
__ba£
, 
__loˇÀ_t
 
__loc
)

547 
__THROW
;

549 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

550 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

551 
__THROW
;

553 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

554 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

555 
__THROW
;

557 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

558 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

559 
__loˇÀ_t
 
__loc
Ë
__THROW
;

563 #ifde‡
__USE_XOPEN2K8


566 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

567 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

571 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

572 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

573 
__THROW
;

580 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

583 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


584 
__BEGIN_NAMESPACE_STD


587 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

594 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

595 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

605 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

606 
__THROW
 ;

612 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

613 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

614 
__gnuc_va_li°
 
__¨g
)

620 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

621 
__gnuc_va_li°
 
__¨g
)

625 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

626 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

627 
__gnuc_va_li°
 
__¨g
)

628 
__THROW
 ;

635 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

636 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

646 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

647 
__THROW
 ;

649 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

650 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

651 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

652 #ifde‡
__REDIRECT


656 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

657 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_fwsˇnf
)

660 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

661 
__isoc99_wsˇnf
)

663 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

664 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

665 ...), 
__isoc99_swsˇnf
)

668 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

669 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

670 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

671 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

672 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

673 
__THROW
;

674 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

675 
	#wsˇnf
 
__isoc99_wsˇnf


	)

676 
	#swsˇnf
 
__isoc99_swsˇnf


	)

680 
__END_NAMESPACE_STD


683 #ifde‡
__USE_ISOC99


684 
__BEGIN_NAMESPACE_C99


689 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

690 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

691 
__gnuc_va_li°
 
__¨g
)

697 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

698 
__gnuc_va_li°
 
__¨g
)

701 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

702 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

703 
__gnuc_va_li°
 
__¨g
)

704 
__THROW
 ;

706 #i‡!
deföed
 
__USE_GNU
 \

707 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

708 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

709 #ifde‡
__REDIRECT


710 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

711 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

714 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

715 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

717 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

718 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

719 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

722 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

723 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
);

727 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

728 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

729 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

730 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

731 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

732 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

736 
__END_NAMESPACE_C99


740 
__BEGIN_NAMESPACE_STD


745 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

746 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

752 
wöt_t
 
	`gëwch¨
 ();

759 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

760 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

766 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

774 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

775 
__FILE
 *
__ª°ri˘
 
__°ªam
);

781 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

782 
__FILE
 *
__ª°ri˘
 
__°ªam
);

789 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

790 
__END_NAMESPACE_STD


793 #ifde‡
__USE_GNU


801 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

802 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

810 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

818 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

827 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

828 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

837 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

838 
__FILE
 *
__ª°ri˘
 
__°ªam
);

846 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

847 
__FILE
 *
__ª°ri˘
 
__°ªam
);

851 
__BEGIN_NAMESPACE_C99


855 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

856 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

857 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

858 
__END_NAMESPACE_C99


860 #ifde‡
__USE_GNU


861 
	~<xloˇÀ.h
>

865 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

866 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

867 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

868 
__loˇÀ_t
 
__loc
Ë
__THROW
;

877 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


878 
	#__√ed_iswxxx


	)

879 
	~<w˘y≥.h
>

883 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


884 
	~<bôs/wch¨2.h
>

887 #ifde‡
__LDBL_COMPAT


888 
	~<bôs/wch¨-ldbl.h
>

891 
__END_DECLS


899 #unde‡
__√ed_mb°©e_t


900 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

23 #i‚de‡
_WCTYPE_H


25 
	~<„©uªs.h
>

26 
	~<bôs/ty≥s.h
>

28 #i‚de‡
__√ed_iswxxx


29 
	#_WCTYPE_H
 1

	)

32 
	#__√ed_wöt_t


	)

33 
	~<wch¨.h
>

37 #i‚de‡
WEOF


38 
	#WEOF
 (0xffffffffu)

	)

41 #unde‡
__√ed_iswxxx


46 #i‚de‡
__iswxxx_deföed


47 
	#__iswxxx_deföed
 1

	)

49 
__BEGIN_NAMESPACE_C99


52 
	tw˘y≥_t
;

53 
	g__END_NAMESPACE_C99


55 #i‚de‡
_ISwbô


60 
	~<ídün.h
>

61 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


62 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

64 
	#_ISwbô
(
bô
) \

65 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

66 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

67 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

68 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

73 
	m__ISwuµî
 = 0,

74 
	m__ISwlowî
 = 1,

75 
	m__ISwÆpha
 = 2,

76 
	m__ISwdigô
 = 3,

77 
	m__ISwxdigô
 = 4,

78 
	m__ISw•a˚
 = 5,

79 
	m__ISw¥öt
 = 6,

80 
	m__ISwgøph
 = 7,

81 
	m__ISwbœnk
 = 8,

82 
	m__ISw˙ål
 = 9,

83 
	m__ISwpun˘
 = 10,

84 
	m__ISwÆnum
 = 11,

86 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

87 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

88 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

89 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

90 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

91 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

92 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

93 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

94 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

95 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

96 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

97 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

102 
__BEGIN_DECLS


104 
__BEGIN_NAMESPACE_C99


111 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

124 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

128 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

133 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

136 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

141 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

146 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

151 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

156 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

161 #ifde‡
__USE_ISOC99


162 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

175 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

176 
__END_NAMESPACE_C99


183 
__BEGIN_NAMESPACE_C99


186 c⁄° 
	t__öt32_t
 *
	tw˘øns_t
;

187 
__END_NAMESPACE_C99


188 #ifde‡
__USE_GNU


189 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

192 
__BEGIN_NAMESPACE_C99


194 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

197 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
__END_NAMESPACE_C99


200 
__END_DECLS


207 #ifde‡
_WCTYPE_H


213 
__BEGIN_DECLS


215 
__BEGIN_NAMESPACE_C99


218 
w˘øns_t
 
	$w˘øns
 (c⁄° *
__¥›îty
Ë
__THROW
;

221 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

222 
__END_NAMESPACE_C99


224 #ifde‡
__USE_XOPEN2K8


226 
	~<xloˇÀ.h
>

230 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

236 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

239 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

243 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

247 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

252 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

255 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

260 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

265 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

270 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

275 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

280 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

284 
w˘y≥_t
 
	$w˘y≥_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

285 
__THROW
;

289 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

290 
__THROW
;

298 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

301 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

305 
w˘øns_t
 
	$w˘øns_l
 (c⁄° *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

306 
__THROW
;

309 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

310 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

314 
__END_DECLS


	@
1
.
1
/usr/include
37
839
application/ti81xx_ep_app.c
application/ti81xx_rc_app.c
include/debug_msg.h
include/ti81xx_ep_lib.h
include/ti81xx_mgmt_lib.h
include/ti81xx_pci_info.h
include/ti81xx_trans.h
lib/ti81xx_ep_lib.c
lib/ti81xx_mgmt_lib.c
lib/ti81xx_pci_info.c
lib/ti81xx_trans.c
/usr/include/ctype.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/linux/ioctl.h
/usr/include/poll.h
/usr/include/pthread.h
/usr/include/semaphore.h
/usr/include/signal.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/termios.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/sched.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/stdc-predef.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
